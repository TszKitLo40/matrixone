// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const VALUES = 57385
const NEXT = 57386
const VALUE = 57387
const SHARE = 57388
const MODE = 57389
const SQL_NO_CACHE = 57390
const SQL_CACHE = 57391
const JOIN = 57392
const STRAIGHT_JOIN = 57393
const LEFT = 57394
const RIGHT = 57395
const INNER = 57396
const OUTER = 57397
const CROSS = 57398
const NATURAL = 57399
const USE = 57400
const FORCE = 57401
const LOWER_THAN_ON = 57402
const ON = 57403
const USING = 57404
const SUBQUERY_AS_EXPR = 57405
const LOWER_THAN_STRING = 57406
const ID = 57407
const AT_ID = 57408
const AT_AT_ID = 57409
const STRING = 57410
const VALUE_ARG = 57411
const LIST_ARG = 57412
const COMMENT = 57413
const COMMENT_KEYWORD = 57414
const INTEGRAL = 57415
const HEX = 57416
const BIT_LITERAL = 57417
const FLOAT = 57418
const HEXNUM = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const LOWER_THAN_CHARSET = 57423
const CHARSET = 57424
const UNIQUE = 57425
const KEY = 57426
const OR = 57427
const PIPE_CONCAT = 57428
const XOR = 57429
const AND = 57430
const NOT = 57431
const BETWEEN = 57432
const CASE = 57433
const WHEN = 57434
const THEN = 57435
const ELSE = 57436
const END = 57437
const LOWER_THAN_EQ = 57438
const LE = 57439
const GE = 57440
const NE = 57441
const NULL_SAFE_EQUAL = 57442
const IS = 57443
const LIKE = 57444
const REGEXP = 57445
const IN = 57446
const ASSIGNMENT = 57447
const SHIFT_LEFT = 57448
const SHIFT_RIGHT = 57449
const DIV = 57450
const MOD = 57451
const UNARY = 57452
const COLLATE = 57453
const BINARY = 57454
const UNDERSCORE_BINARY = 57455
const INTERVAL = 57456
const BEGIN = 57457
const START = 57458
const TRANSACTION = 57459
const COMMIT = 57460
const ROLLBACK = 57461
const WORK = 57462
const CONSISTENT = 57463
const SNAPSHOT = 57464
const CHAIN = 57465
const NO = 57466
const RELEASE = 57467
const PRIORITY = 57468
const QUICK = 57469
const BIT = 57470
const TINYINT = 57471
const SMALLINT = 57472
const MEDIUMINT = 57473
const INT = 57474
const INTEGER = 57475
const BIGINT = 57476
const INTNUM = 57477
const REAL = 57478
const DOUBLE = 57479
const FLOAT_TYPE = 57480
const DECIMAL = 57481
const NUMERIC = 57482
const DECIMAL_VALUE = 57483
const TIME = 57484
const TIMESTAMP = 57485
const DATETIME = 57486
const YEAR = 57487
const CHAR = 57488
const VARCHAR = 57489
const BOOL = 57490
const CHARACTER = 57491
const VARBINARY = 57492
const NCHAR = 57493
const TEXT = 57494
const TINYTEXT = 57495
const MEDIUMTEXT = 57496
const LONGTEXT = 57497
const BLOB = 57498
const TINYBLOB = 57499
const MEDIUMBLOB = 57500
const LONGBLOB = 57501
const JSON = 57502
const ENUM = 57503
const UUID = 57504
const GEOMETRY = 57505
const POINT = 57506
const LINESTRING = 57507
const POLYGON = 57508
const GEOMETRYCOLLECTION = 57509
const MULTIPOINT = 57510
const MULTILINESTRING = 57511
const MULTIPOLYGON = 57512
const INT1 = 57513
const INT2 = 57514
const INT3 = 57515
const INT4 = 57516
const INT8 = 57517
const SQL_SMALL_RESULT = 57518
const SQL_BIG_RESULT = 57519
const SQL_BUFFER_RESULT = 57520
const LOW_PRIORITY = 57521
const HIGH_PRIORITY = 57522
const DELAYED = 57523
const CREATE = 57524
const ALTER = 57525
const DROP = 57526
const RENAME = 57527
const ANALYZE = 57528
const ADD = 57529
const SCHEMA = 57530
const TABLE = 57531
const INDEX = 57532
const VIEW = 57533
const TO = 57534
const IGNORE = 57535
const IF = 57536
const PRIMARY = 57537
const COLUMN = 57538
const CONSTRAINT = 57539
const SPATIAL = 57540
const FULLTEXT = 57541
const FOREIGN = 57542
const KEY_BLOCK_SIZE = 57543
const SHOW = 57544
const DESCRIBE = 57545
const EXPLAIN = 57546
const DATE = 57547
const ESCAPE = 57548
const REPAIR = 57549
const OPTIMIZE = 57550
const TRUNCATE = 57551
const MAXVALUE = 57552
const PARTITION = 57553
const REORGANIZE = 57554
const LESS = 57555
const THAN = 57556
const PROCEDURE = 57557
const TRIGGER = 57558
const STATUS = 57559
const VARIABLES = 57560
const ROLE = 57561
const PROXY = 57562
const AVG_ROW_LENGTH = 57563
const STORAGE = 57564
const DISK = 57565
const MEMORY = 57566
const CHECKSUM = 57567
const COMPRESSION = 57568
const DATA = 57569
const DIRECTORY = 57570
const DELAY_KEY_WRITE = 57571
const ENCRYPTION = 57572
const ENGINE = 57573
const MAX_ROWS = 57574
const MIN_ROWS = 57575
const PACK_KEYS = 57576
const ROW_FORMAT = 57577
const STATS_AUTO_RECALC = 57578
const STATS_PERSISTENT = 57579
const STATS_SAMPLE_PAGES = 57580
const DYNAMIC = 57581
const COMPRESSED = 57582
const REDUNDANT = 57583
const COMPACT = 57584
const FIXED = 57585
const COLUMN_FORMAT = 57586
const AUTO_RANDOM = 57587
const RESTRICT = 57588
const CASCADE = 57589
const ACTION = 57590
const PARTIAL = 57591
const SIMPLE = 57592
const CHECK = 57593
const ENFORCED = 57594
const RANGE = 57595
const LIST = 57596
const ALGORITHM = 57597
const LINEAR = 57598
const PARTITIONS = 57599
const SUBPARTITION = 57600
const SUBPARTITIONS = 57601
const TYPE = 57602
const ANY = 57603
const SOME = 57604
const EXTERNAL = 57605
const LOCALFILE = 57606
const URL = 57607
const PREPARE = 57608
const DEALLOCATE = 57609
const PROPERTIES = 57610
const PARSER = 57611
const VISIBLE = 57612
const INVISIBLE = 57613
const BTREE = 57614
const HASH = 57615
const RTREE = 57616
const BSI = 57617
const ZONEMAP = 57618
const LEADING = 57619
const BOTH = 57620
const TRAILING = 57621
const UNKNOWN = 57622
const EXPIRE = 57623
const ACCOUNT = 57624
const UNLOCK = 57625
const DAY = 57626
const NEVER = 57627
const PUMP = 57628
const SECOND = 57629
const ASCII = 57630
const COALESCE = 57631
const COLLATION = 57632
const HOUR = 57633
const MICROSECOND = 57634
const MINUTE = 57635
const MONTH = 57636
const QUARTER = 57637
const REPEAT = 57638
const REVERSE = 57639
const ROW_COUNT = 57640
const WEEK = 57641
const REVOKE = 57642
const FUNCTION = 57643
const PRIVILEGES = 57644
const TABLESPACE = 57645
const EXECUTE = 57646
const SUPER = 57647
const GRANT = 57648
const OPTION = 57649
const REFERENCES = 57650
const REPLICATION = 57651
const SLAVE = 57652
const CLIENT = 57653
const USAGE = 57654
const RELOAD = 57655
const FILE = 57656
const TEMPORARY = 57657
const ROUTINE = 57658
const EVENT = 57659
const SHUTDOWN = 57660
const NULLX = 57661
const AUTO_INCREMENT = 57662
const APPROXNUM = 57663
const SIGNED = 57664
const UNSIGNED = 57665
const ZEROFILL = 57666
const ENGINES = 57667
const ADMIN_NAME = 57668
const RANDOM = 57669
const SUSPEND = 57670
const ATTRIBUTE = 57671
const HISTORY = 57672
const REUSE = 57673
const CURRENT = 57674
const OPTIONAL = 57675
const FAILED_LOGIN_ATTEMPTS = 57676
const PASSWORD_LOCK_TIME = 57677
const UNBOUNDED = 57678
const SECONDARY = 57679
const USER = 57680
const IDENTIFIED = 57681
const CIPHER = 57682
const ISSUER = 57683
const X509 = 57684
const SUBJECT = 57685
const SAN = 57686
const REQUIRE = 57687
const SSL = 57688
const NONE = 57689
const PASSWORD = 57690
const MAX_QUERIES_PER_HOUR = 57691
const MAX_UPDATES_PER_HOUR = 57692
const MAX_CONNECTIONS_PER_HOUR = 57693
const MAX_USER_CONNECTIONS = 57694
const FORMAT = 57695
const VERBOSE = 57696
const CONNECTION = 57697
const TRIGGERS = 57698
const PROFILES = 57699
const LOAD = 57700
const INFILE = 57701
const TERMINATED = 57702
const OPTIONALLY = 57703
const ENCLOSED = 57704
const ESCAPED = 57705
const STARTING = 57706
const LINES = 57707
const ROWS = 57708
const IMPORT = 57709
const DATABASES = 57710
const TABLES = 57711
const EXTENDED = 57712
const FULL = 57713
const PROCESSLIST = 57714
const FIELDS = 57715
const COLUMNS = 57716
const OPEN = 57717
const ERRORS = 57718
const WARNINGS = 57719
const INDEXES = 57720
const SCHEMAS = 57721
const NAMES = 57722
const GLOBAL = 57723
const SESSION = 57724
const ISOLATION = 57725
const LEVEL = 57726
const READ = 57727
const WRITE = 57728
const ONLY = 57729
const REPEATABLE = 57730
const COMMITTED = 57731
const UNCOMMITTED = 57732
const SERIALIZABLE = 57733
const LOCAL = 57734
const EVENTS = 57735
const PLUGINS = 57736
const CURRENT_TIMESTAMP = 57737
const DATABASE = 57738
const CURRENT_TIME = 57739
const LOCALTIME = 57740
const LOCALTIMESTAMP = 57741
const UTC_DATE = 57742
const UTC_TIME = 57743
const UTC_TIMESTAMP = 57744
const REPLACE = 57745
const CONVERT = 57746
const SEPARATOR = 57747
const CURRENT_DATE = 57748
const CURRENT_USER = 57749
const CURRENT_ROLE = 57750
const SECOND_MICROSECOND = 57751
const MINUTE_MICROSECOND = 57752
const MINUTE_SECOND = 57753
const HOUR_MICROSECOND = 57754
const HOUR_SECOND = 57755
const HOUR_MINUTE = 57756
const DAY_MICROSECOND = 57757
const DAY_SECOND = 57758
const DAY_MINUTE = 57759
const DAY_HOUR = 57760
const YEAR_MONTH = 57761
const SQL_TSI_HOUR = 57762
const SQL_TSI_DAY = 57763
const SQL_TSI_WEEK = 57764
const SQL_TSI_MONTH = 57765
const SQL_TSI_QUARTER = 57766
const SQL_TSI_YEAR = 57767
const SQL_TSI_SECOND = 57768
const SQL_TSI_MINUTE = 57769
const RECURSIVE = 57770
const CONFIG = 57771
const DRAINER = 57772
const MATCH = 57773
const AGAINST = 57774
const BOOLEAN = 57775
const LANGUAGE = 57776
const WITH = 57777
const QUERY = 57778
const EXPANSION = 57779
const ADDDATE = 57780
const BIT_AND = 57781
const BIT_OR = 57782
const BIT_XOR = 57783
const CAST = 57784
const COUNT = 57785
const APPROX_COUNT_DISTINCT = 57786
const APPROX_PERCENTILE = 57787
const CURDATE = 57788
const CURTIME = 57789
const DATE_ADD = 57790
const DATE_SUB = 57791
const EXTRACT = 57792
const GROUP_CONCAT = 57793
const MAX = 57794
const MID = 57795
const MIN = 57796
const NOW = 57797
const POSITION = 57798
const SESSION_USER = 57799
const STD = 57800
const STDDEV = 57801
const STDDEV_POP = 57802
const STDDEV_SAMP = 57803
const SUBDATE = 57804
const SUBSTR = 57805
const SUBSTRING = 57806
const SUM = 57807
const SYSDATE = 57808
const SYSTEM_USER = 57809
const TRANSLATE = 57810
const TRIM = 57811
const VARIANCE = 57812
const VAR_POP = 57813
const VAR_SAMP = 57814
const AVG = 57815
const JSON_EXTRACT = 57816
const UNNEST = 57817
const ROW = 57818
const OUTFILE = 57819
const HEADER = 57820
const MAX_FILE_SIZE = 57821
const FORCE_QUOTE = 57822
const UNUSED = 57823
const BINDINGS = 57824
const DO = 57825
const DECLARE = 57826

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7656

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 73,
	21, 475,
	-2, 456,
	-1, 78,
	207, 643,
	-2, 685,
	-1, 95,
	42, 326,
	207, 326,
	234, 333,
	235, 333,
	395, 326,
	-2, 354,
	-1, 443,
	64, 1027,
	-2, 1522,
	-1, 444,
	64, 1045,
	-2, 1493,
	-1, 449,
	64, 1046,
	-2, 1521,
	-1, 469,
	64, 961,
	-2, 1567,
	-1, 470,
	64, 962,
	-2, 1566,
	-1, 471,
	64, 1530,
	-2, 1551,
	-1, 472,
	64, 1531,
	-2, 1552,
	-1, 473,
	64, 1532,
	-2, 1558,
	-1, 474,
	64, 1533,
	-2, 1541,
	-1, 475,
	64, 1534,
	-2, 1549,
	-1, 476,
	64, 1535,
	-2, 1559,
	-1, 477,
	64, 1536,
	-2, 1560,
	-1, 478,
	64, 1537,
	-2, 1565,
	-1, 479,
	64, 1538,
	-2, 1570,
	-1, 480,
	64, 1539,
	-2, 1571,
	-1, 483,
	64, 1024,
	-2, 1375,
	-1, 490,
	64, 1033,
	-2, 1401,
	-1, 494,
	64, 1037,
	-2, 1440,
	-1, 495,
	64, 1038,
	-2, 1517,
	-1, 503,
	64, 1048,
	-2, 1502,
	-1, 505,
	64, 1050,
	-2, 1512,
	-1, 517,
	64, 942,
	-2, 1561,
	-1, 518,
	64, 943,
	-2, 1562,
	-1, 519,
	64, 944,
	-2, 1563,
	-1, 526,
	21, 476,
	-2, 439,
	-1, 567,
	390, 354,
	391, 354,
	-2, 327,
	-1, 609,
	100, 1375,
	111, 1375,
	130, 1375,
	-2, 1185,
	-1, 639,
	21, 476,
	-2, 439,
	-1, 736,
	21, 475,
	-2, 870,
	-1, 1028,
	64, 1093,
	-2, 1519,
	-1, 1029,
	64, 1094,
	-2, 1520,
	-1, 1183,
	1, 669,
	65, 669,
	502, 669,
	-2, 676,
	-1, 1292,
	130, 1195,
	-2, 1193,
	-1, 1294,
	130, 587,
	-2, 1190,
	-1, 1295,
	130, 588,
	-2, 1191,
	-1, 1576,
	1, 670,
	65, 670,
	502, 670,
	-2, 676,
	-1, 1778,
	62, 396,
	131, 396,
	-2, 776,
	-1, 1991,
	84, 676,
	126, 676,
	163, 676,
	166, 676,
	-2, 724,
	-1, 1993,
	268, 838,
	-2, 818,
	-1, 2023,
	62, 396,
	131, 396,
	-2, 777,
	-1, 2054,
	84, 676,
	126, 676,
	163, 676,
	166, 676,
	-2, 725,
	-1, 2082,
	268, 838,
	-2, 819,
	-1, 2467,
	65, 697,
	131, 697,
	-2, 676,
	-1, 2471,
	65, 697,
	131, 697,
	-2, 676,
	-1, 2485,
	65, 701,
	131, 701,
	-2, 676,
	-1, 2490,
	65, 702,
	131, 702,
	-2, 676,
}

const yyPrivate = 57344

const yyLast = 22904

var yyAct = [...]int{
	416, 2471, 1092, 2473, 2479, 2470, 2448, 2318, 1009, 2120,
	397, 2437, 2397, 418, 2355, 2381, 2094, 1626, 2382, 2289,
	2293, 2269, 2040, 2050, 1560, 2118, 761, 1258, 882, 2119,
	1985, 441, 112, 928, 2277, 390, 2135, 336, 342, 1622,
	342, 1224, 1005, 1136, 527, 115, 2038, 340, 26, 2103,
	2016, 1754, 1898, 2083, 1188, 1781, 1012, 608, 346, 1192,
	2102, 430, 73, 1894, 870, 1796, 790, 1899, 352, 1246,
	1997, 522, 389, 111, 859, 1621, 1470, 1217, 1903, 395,
	1274, 555, 1966, 1951, 1913, 1583, 1909, 634, 1861, 1892,
	1139, 874, 1147, 1466, 1283, 1289, 328, 1292, 73, 394,
	1284, 1160, 1824, 522, 1239, 1465, 1275, 1795, 612, 1220,
	1608, 112, 1756, 1218, 1751, 1198, 3, 615, 34, 1582,
	339, 15, 2058, 337, 6, 1176, 1497, 338, 5, 1008,
	1577, 796, 396, 1168, 398, 1467, 950, 1243, 72, 1003,
	1569, 1199, 1566, 1211, 1200, 1477, 329, 1210, 610, 1261,
	1548, 1056, 636, 570, 34, 1481, 26, 1042, 1264, 994,
	649, 406, 1172, 1002, 332, 600, 614, 1649, 554, 1624,
	73, 1175, 897, 1206, 907, 1061, 524, 841, 12, 354,
	355, 552, 526, 7, 4, 563, 106, 1151, 2042, 883,
	949, 601, 2363, 1484, 1474, 108, 1091, 341, 2142, 2046,
	1984, 1164, 1277, 525, 103, 2111, 107, 107, 31, 97,
	79, 107, 107, 31, 97, 79, 2336, 2346, 909, 920,
	107, 107, 31, 97, 79, 633, 34, 959, 668, 15,
	107, 102, 6, 349, 1671, 1471, 5, 344, 91, 327,
	956, 762, 1679, 613, 71, 107, 1482, 31, 97, 79,
	857, 894, 702, 895, 1831, 544, 1227, 1228, 1744, 57,
	104, 958, 521, 879, 1753, 104, 104, 2370, 910, 995,
	2368, 999, 580, 886, 104, 104, 885, 888, 889, 512,
	979, 511, 513, 514, 104, 515, 516, 888, 889, 620,
	619, 621, 2385, 2386, 701, 998, 1202, 1011, 676, 104,
	678, 695, 700, 2359, 2360, 683, 2133, 684, 1887, 2222,
	2225, 1752, 2136, 2137, 2138, 2139, 1888, 2145, 1889, 618,
	1986, 1013, 1666, 652, 643, 1240, 2292, 1975, 679, 1922,
	642, 2005, 1478, 98, 99, 686, 100, 101, 584, 641,
	1924, 351, 1232, 990, 342, 2116, 112, 2012, 2204, 1914,
	1567, 1545, 2100, 1236, 1759, 2207, 1852, 1135, 1134, 698,
	699, 2345, 1000, 2113, 1850, 697, 623, 528, 671, 1676,
	1918, 2372, 638, 640, 2395, 546, 2464, 343, 1919, 1920,
	2480, 997, 616, 2198, 2404, 543, 542, 659, 2367, 385,
	2320, 672, 386, 1921, 585, 73, 73, 614, 681, 2411,
	78, 96, 105, 738, 55, 652, 537, 2316, 2317, 78,
	2320, 105, 674, 2343, 2384, 688, 2191, 689, 663, 2458,
	95, 90, 89, 2291, 677, 680, 2160, 709, 877, 95,
	2348, 2349, 2159, 388, 387, 2186, 737, 639, 617, 2278,
	2279, 2280, 2282, 2281, 745, 691, 2326, 673, 2374, 2375,
	540, 34, 34, 1765, 682, 2440, 1483, 901, 896, 1916,
	873, 916, 736, 915, 661, 749, 881, 880, 581, 535,
	2481, 611, 2475, 2449, 613, 2148, 996, 2487, 693, 694,
	635, 1020, 1023, 1024, 92, 93, 1487, 1489, 1490, 858,
	654, 653, 1021, 1498, 860, 350, 622, 2220, 645, 646,
	908, 668, 541, 1672, 1636, 675, 2182, 1475, 687, 1170,
	1773, 863, 685, 1767, 1768, 1769, 1770, 867, 65, 1817,
	1907, 1857, 94, 1855, 66, 536, 865, 345, 660, 549,
	550, 551, 1863, 1862, 739, 740, 741, 742, 2254, 613,
	1633, 657, 692, 626, 631, 632, 913, 583, 1230, 1472,
	582, 1635, 1634, 1632, 555, 1472, 1472, 911, 912, 1231,
	1229, 587, 2041, 588, 690, 2446, 2441, 647, 838, 743,
	2423, 704, 654, 653, 1779, 2373, 67, 1523, 1934, 667,
	1522, 770, 1193, 545, 668, 68, 887, 1097, 1571, 1655,
	846, 884, 2474, 888, 889, 2347, 888, 889, 1904, 1907,
	529, 2290, 1992, 522, 522, 522, 1193, 1554, 932, 932,
	1671, 861, 862, 1758, 864, 1618, 878, 1661, 1925, 2493,
	1241, 1915, 2205, 1617, 342, 953, 953, 1485, 2492, 1473,
	1853, 1774, 1917, 2483, 2465, 2187, 2188, 2112, 961, 936,
	2486, 1908, 934, 972, 973, 2460, 704, 1780, 80, 80,
	930, 930, 1267, 80, 80, 2117, 977, 891, 892, 993,
	952, 952, 80, 80, 1762, 1763, 581, 962, 932, 1645,
	932, 642, 80, 938, 1680, 1233, 991, 328, 1761, 1570,
	1010, 591, 957, 703, 1471, 704, 1235, 80, 2438, 2439,
	1780, 662, 772, 773, 704, 611, 73, 1618, 1022, 2484,
	1480, 69, 70, 1488, 986, 628, 629, 630, 2154, 73,
	1559, 2461, 839, 2401, 898, 845, 898, 843, 73, 2452,
	1908, 1948, 2184, 526, 1618, 1901, 2183, 1542, 590, 1902,
	1905, 976, 593, 592, 1462, 869, 868, 1054, 917, 975,
	1015, 1016, 1017, 1018, 1019, 583, 2026, 902, 582, 1060,
	890, 1935, 992, 893, 2255, 2257, 2258, 2259, 2256, 665,
	1014, 2451, 2399, 1007, 1826, 34, 1558, 1111, 1265, 1782,
	2392, 2387, 1674, 2376, 34, 668, 914, 985, 1116, 1117,
	982, 1906, 1058, 1059, 981, 1480, 1673, 1094, 1665, 1660,
	522, 2364, 1101, 988, 923, 924, 925, 1004, 937, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1025, 968, 2341, 1051, 1052, 954, 963, 905, 906,
	327, 948, 666, 1601, 2340, 926, 927, 1480, 2400, 666,
	964, 706, 707, 708, 705, 984, 2209, 2209, 1157, 1645,
	983, 980, 1508, 1142, 1143, 526, 1001, 2339, 1113, 1006,
	941, 942, 943, 944, 945, 946, 947, 2365, 1146, 2338,
	1507, 1150, 932, 1461, 2328, 1183, 1050, 1158, 2214, 555,
	2208, 2130, 1189, 932, 2011, 1557, 1162, 1272, 2128, 2209,
	1166, 1179, 965, 1169, 837, 706, 707, 708, 705, 1141,
	2209, 1963, 1961, 1044, 748, 1207, 1207, 655, 1212, 637,
	1252, 1740, 1738, 1212, 1736, 1939, 721, 932, 112, 1149,
	1161, 1734, 1723, 2209, 1685, 1847, 1205, 875, 522, 2435,
	932, 589, 2424, 1669, 1849, 2209, 1663, 1691, 1095, 1506,
	2329, 1178, 1171, 1657, 1587, 1586, 2209, 2131, 1555, 1529,
	1184, 1528, 919, 932, 2129, 1257, 112, 112, 1093, 1469,
	1096, 1203, 1204, 1269, 1106, 1755, 1162, 1964, 1962, 1281,
	1281, 1286, 1162, 1162, 1112, 1262, 1114, 1741, 1739, 1479,
	1735, 1209, 1196, 1197, 1260, 1848, 969, 1735, 704, 2330,
	704, 1131, 899, 1294, 2228, 1237, 921, 1259, 1259, 1587,
	1189, 1177, 1664, 1263, 932, 1099, 1098, 922, 1949, 1658,
	1468, 1587, 1190, 1856, 1554, 704, 1662, 704, 1194, 1638,
	644, 1295, 1256, 1242, 547, 898, 1159, 1049, 1195, 918,
	614, 1165, 1153, 594, 1156, 1057, 1700, 1503, 1057, 1201,
	1749, 73, 1047, 1048, 1046, 1480, 1177, 1186, 708, 705,
	705, 1185, 970, 1174, 1463, 2194, 1191, 2193, 1492, 2001,
	1213, 1996, 836, 833, 834, 835, 2217, 2218, 1705, 1280,
	1704, 1703, 1701, 2177, 1250, 1251, 2215, 2216, 1214, 1208,
	2265, 1109, 1004, 2469, 2454, 1216, 2457, 900, 1215, 2421,
	2263, 1110, 1122, 1238, 2261, 2251, 2405, 34, 2304, 2271,
	1500, 2114, 2009, 1504, 2249, 1561, 1562, 613, 724, 725,
	726, 727, 728, 721, 1254, 2264, 1255, 736, 706, 707,
	708, 705, 586, 1273, 1253, 2262, 2456, 1693, 2248, 2260,
	2250, 1702, 2247, 1505, 1533, 1517, 2115, 2010, 1495, 1496,
	2244, 1460, 2238, 1514, 1459, 1293, 1515, 2235, 1519, 2234,
	1287, 2143, 1288, 1247, 1248, 1249, 706, 707, 708, 705,
	2008, 1527, 1464, 1923, 1530, 1531, 1532, 1885, 1884, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1843, 1875, 1543, 1716,
	1486, 112, 112, 1553, 1552, 1516, 706, 707, 708, 705,
	1494, 1551, 1547, 1546, 613, 112, 1584, 966, 1491, 1910,
	2394, 2378, 1212, 1180, 1181, 1182, 112, 706, 707, 708,
	705, 2270, 336, 1511, 1493, 2051, 2361, 1502, 1044, 1874,
	1212, 2324, 1563, 1565, 2485, 2323, 2311, 1262, 722, 723,
	724, 725, 726, 727, 728, 721, 1580, 2379, 2252, 1591,
	2245, 706, 707, 708, 705, 2241, 2240, 1592, 1706, 1707,
	2296, 706, 707, 708, 705, 1263, 2239, 2206, 2179, 706,
	707, 708, 705, 932, 2144, 2140, 1593, 1594, 2086, 2049,
	2047, 2035, 706, 707, 708, 705, 953, 2034, 112, 1627,
	1627, 1650, 2019, 1652, 2007, 706, 707, 708, 705, 2096,
	2006, 2003, 1977, 1162, 1162, 1162, 385, 1630, 2203, 386,
	1595, 1912, 2089, 2462, 811, 1643, 1550, 2044, 2084, 1883,
	1628, 952, 2197, 2098, 2099, 1854, 1578, 1820, 1731, 2085,
	706, 707, 708, 705, 1683, 1556, 1597, 1549, 1599, 706,
	707, 708, 705, 1572, 1646, 712, 713, 714, 715, 716,
	717, 718, 710, 1654, 468, 467, 1980, 1130, 967, 1590,
	771, 1927, 766, 1100, 2090, 1648, 765, 1201, 1598, 1596,
	1600, 1173, 2331, 1602, 2301, 2300, 1604, 1603, 706, 707,
	708, 705, 1115, 2299, 1629, 1118, 1119, 1120, 1121, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 2298, 2020, 770, 1991,
	1982, 1878, 1981, 1971, 1965, 1639, 1640, 1641, 1940, 1882,
	1880, 799, 729, 730, 722, 723, 724, 725, 726, 727,
	728, 721, 1647, 706, 707, 708, 705, 1873, 1865, 819,
	823, 825, 827, 829, 830, 832, 1860, 836, 833, 834,
	835, 1814, 1737, 814, 815, 816, 817, 797, 798, 820,
	2097, 800, 1900, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 812, 818, 1877, 706, 707, 708, 705,
	1733, 1732, 822, 824, 826, 828, 831, 2092, 1534, 1526,
	1876, 107, 1667, 1524, 97, 79, 1521, 706, 707, 708,
	705, 1520, 932, 1513, 932, 1510, 932, 1509, 2482, 2091,
	2093, 642, 706, 707, 708, 705, 813, 1108, 1107, 1730,
	1681, 720, 719, 729, 730, 722, 723, 724, 725, 726,
	727, 728, 721, 939, 732, 2434, 735, 2428, 932, 1709,
	1525, 706, 707, 708, 705, 104, 1677, 2412, 2409, 2407,
	763, 733, 734, 731, 932, 720, 719, 729, 730, 722,
	723, 724, 725, 726, 727, 728, 721, 1729, 107, 1692,
	2303, 1708, 2287, 2100, 2417, 1728, 2275, 1710, 1711, 2272,
	930, 1727, 2267, 1714, 1715, 2087, 2229, 1717, 1138, 706,
	707, 708, 705, 2201, 2200, 2199, 930, 706, 707, 708,
	705, 932, 1695, 706, 707, 708, 705, 2196, 2190, 2175,
	871, 1678, 1778, 530, 531, 532, 533, 2032, 1784, 2014,
	1162, 2002, 104, 1745, 1746, 1169, 529, 1668, 1148, 1689,
	1670, 1004, 1792, 1696, 1697, 1718, 642, 112, 112, 112,
	112, 1675, 1140, 1775, 1750, 1797, 1656, 1637, 642, 112,
	1812, 1686, 1631, 1776, 1742, 1589, 1726, 1797, 1748, 1585,
	1045, 1688, 642, 26, 104, 1152, 1772, 932, 1699, 1155,
	1145, 1816, 940, 1144, 989, 112, 112, 73, 706, 707,
	708, 705, 1787, 1725, 960, 1788, 840, 788, 1785, 1281,
	787, 1835, 1281, 1813, 786, 1838, 785, 784, 783, 1627,
	782, 781, 932, 780, 779, 706, 707, 708, 705, 778,
	777, 776, 1786, 1841, 775, 774, 1822, 1823, 769, 1789,
	768, 1790, 1162, 1747, 767, 764, 1764, 760, 1162, 1578,
	1177, 1777, 1783, 34, 759, 1832, 15, 1771, 757, 6,
	756, 1842, 1724, 5, 821, 755, 1791, 1794, 1793, 73,
	1798, 1799, 1800, 1801, 754, 1810, 1161, 1809, 1811, 1859,
	753, 752, 1837, 751, 706, 707, 708, 705, 750, 526,
	1834, 1846, 1818, 1821, 1866, 1574, 1722, 1868, 747, 1870,
	1721, 642, 1879, 746, 670, 1851, 1836, 1827, 1830, 1833,
	1897, 1839, 1828, 1840, 2455, 1845, 1720, 112, 706, 707,
	708, 705, 706, 707, 708, 705, 642, 1719, 658, 2415,
	112, 1584, 2432, 1938, 2383, 1897, 1864, 1858, 706, 707,
	708, 705, 1867, 1952, 1953, 1871, 1872, 1869, 1955, 706,
	707, 708, 705, 1610, 1613, 1614, 1615, 1611, 1928, 1612,
	1616, 720, 719, 729, 730, 722, 723, 724, 725, 726,
	727, 728, 721, 1766, 1929, 1930, 1931, 1709, 1644, 720,
	719, 729, 730, 722, 723, 724, 725, 726, 727, 728,
	721, 669, 1806, 1804, 1958, 1957, 1941, 1807, 1805, 1942,
	1943, 1713, 1803, 1802, 2468, 1947, 112, 1936, 112, 1808,
	1659, 1614, 1615, 1712, 1933, 1932, 1937, 1579, 1132, 1684,
	1959, 1690, 1682, 706, 707, 708, 705, 1960, 842, 1946,
	1945, 1053, 1891, 1944, 1956, 706, 707, 708, 705, 1561,
	1562, 1568, 112, 706, 707, 708, 705, 1976, 1605, 1978,
	664, 1995, 56, 706, 707, 708, 705, 33, 32, 2146,
	1970, 1979, 1972, 1973, 1890, 1620, 1187, 2352, 1610, 1613,
	1614, 1615, 1611, 1974, 1612, 1616, 1099, 1098, 854, 855,
	932, 932, 904, 1990, 903, 112, 2023, 324, 1989, 852,
	853, 1458, 325, 326, 850, 851, 848, 849, 696, 642,
	872, 844, 73, 2429, 530, 531, 532, 533, 1797, 2308,
	2306, 2232, 2230, 2015, 1993, 2227, 1994, 529, 1825, 2226,
	2224, 2037, 930, 2017, 2048, 2000, 1988, 1987, 1999, 1627,
	1968, 1998, 847, 1998, 529, 1162, 1967, 1193, 2031, 2419,
	2418, 2033, 2028, 642, 2025, 2055, 2024, 2104, 2106, 2418,
	2104, 2104, 1897, 2036, 2027, 1844, 1512, 656, 2419, 2021,
	556, 2192, 2022, 1619, 2029, 642, 876, 39, 1, 2030,
	1476, 2004, 1926, 1911, 866, 2043, 548, 1102, 856, 974,
	625, 651, 971, 1189, 650, 648, 1055, 1062, 2110, 432,
	1276, 1282, 2268, 2351, 2396, 2302, 2101, 2105, 2354, 987,
	417, 2219, 1886, 2132, 2221, 2052, 2080, 2126, 2150, 2134,
	2107, 2108, 1743, 2039, 1829, 559, 462, 439, 581, 758,
	955, 627, 438, 2013, 1760, 534, 2109, 2123, 624, 2025,
	560, 2124, 2125, 1544, 1983, 1133, 1154, 2127, 1137, 2478,
	2467, 932, 2447, 2427, 2319, 2463, 2366, 2410, 2403, 2315,
	2147, 112, 356, 1234, 520, 598, 2288, 357, 2151, 2152,
	2106, 2155, 2156, 2157, 2158, 1588, 2153, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2344, 2274, 2017, 538, 2101, 2176, 1573, 539, 1576,
	1575, 2180, 2195, 1026, 711, 1043, 744, 583, 393, 1501,
	582, 405, 399, 2233, 1757, 2095, 1819, 2211, 38, 2202,
	37, 36, 1268, 1290, 2210, 434, 2178, 114, 1291, 2213,
	2212, 2223, 2312, 2141, 2266, 2356, 415, 414, 413, 412,
	411, 1609, 1607, 568, 1606, 1222, 1221, 1266, 2380, 2334,
	557, 2335, 2045, 2189, 2231, 2253, 2185, 642, 2181, 2325,
	642, 642, 642, 2246, 2054, 2236, 2237, 2053, 73, 1627,
	642, 2242, 2243, 2081, 2082, 2088, 573, 795, 791, 793,
	794, 792, 2276, 1698, 2273, 2284, 2285, 2286, 1694, 1895,
	2313, 1896, 1893, 2283, 1687, 2295, 1954, 932, 932, 2294,
	1950, 1278, 2297, 1285, 1167, 1223, 109, 1219, 2307, 2122,
	2309, 2310, 2305, 523, 2314, 25, 720, 719, 729, 730,
	722, 723, 724, 725, 726, 727, 728, 721, 112, 24,
	2321, 2322, 23, 11, 10, 978, 642, 9, 14, 930,
	930, 22, 21, 20, 19, 64, 63, 62, 642, 61,
	18, 8, 60, 59, 58, 2327, 17, 16, 53, 54,
	2333, 2337, 49, 576, 2358, 48, 47, 558, 2332, 1259,
	46, 45, 44, 2342, 43, 52, 51, 2357, 50, 42,
	41, 2350, 40, 77, 76, 75, 571, 74, 27, 28,
	29, 30, 2362, 87, 86, 88, 84, 82, 85, 2369,
	2371, 83, 81, 35, 13, 2, 0, 0, 0, 0,
	0, 2377, 0, 0, 0, 0, 0, 572, 577, 2388,
	2389, 2390, 2391, 2398, 0, 0, 2402, 0, 0, 565,
	0, 567, 580, 0, 0, 0, 564, 562, 561, 0,
	566, 0, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 575, 0, 2393, 2416, 2413,
	2414, 2358, 2426, 0, 0, 0, 0, 0, 642, 2420,
	642, 0, 0, 2422, 2357, 2425, 2431, 1010, 2433, 1010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 2442, 0, 0, 2398, 642, 2443, 2450, 0, 0,
	0, 0, 0, 2453, 1010, 0, 0, 2459, 2406, 0,
	2408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2445, 0, 0, 0, 0, 0, 0, 0, 2466, 0,
	0, 0, 0, 0, 0, 2477, 0, 2476, 0, 0,
	0, 0, 0, 0, 0, 2488, 0, 2490, 0, 2489,
	2491, 0, 2436, 0, 2477, 1403, 1445, 0, 0, 1392,
	0, 1352, 1405, 1326, 1341, 1413, 1342, 1343, 1378, 1305,
	1361, 240, 1339, 0, 0, 0, 0, 0, 0, 1395,
	1297, 1329, 1330, 1299, 1336, 1300, 1327, 1354, 185, 1325,
	1364, 210, 1411, 0, 0, 270, 224, 0, 0, 1357,
	1397, 1359, 1383, 1351, 1379, 1313, 1372, 1406, 1340, 0,
	1376, 1407, 0, 0, 0, 0, 1180, 1181, 1182, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 1375,
	1401, 1338, 0, 169, 1404, 1358, 1377, 0, 0, 1298,
	1373, 0, 1303, 1306, 1412, 1399, 1333, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 1360, 1380, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 1369, 0, 0, 0, 1308, 1304, 0, 1353, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 1444, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 1307, 298, 162, 1439, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 1423, 1424, 1425,
	1426, 1427, 1435, 1436, 0, 1440, 1441, 1442, 1312, 0,
	1332, 1381, 0, 1296, 1390, 1398, 1350, 300, 1400, 1347,
	1346, 1430, 0, 1429, 274, 1431, 1432, 209, 1396, 1328,
	1337, 316, 1335, 260, 242, 1402, 1368, 1443, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 1428, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 1437, 0, 1438, 312, 192, 152, 295,
	0, 238, 0, 1393, 1301, 1311, 1309, 1344, 1370, 1371,
	234, 311, 1385, 1389, 1386, 1414, 263, 0, 0, 0,
	0, 0, 203, 244, 1387, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1302, 0, 271, 293,
	305, 322, 1446, 1447, 1448, 1449, 0, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 296, 1345, 1319, 1356, 304, 1322,
	1320, 1384, 1321, 1374, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 1365, 1349, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1366, 1324, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 1391, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 1499,
	2430, 1318, 1323, 1317, 1362, 1363, 1408, 1409, 1410, 1382,
	1310, 1394, 1314, 1316, 1315, 0, 0, 0, 0, 0,
	0, 720, 719, 729, 730, 722, 723, 724, 725, 726,
	727, 728, 721, 0, 1388, 0, 445, 1367, 153, 0,
	211, 1415, 252, 190, 0, 0, 240, 720, 719, 729,
	730, 722, 723, 724, 725, 726, 727, 728, 721, 407,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	270, 224, 1881, 0, 0, 0, 491, 499, 0, 0,
	0, 0, 1433, 1434, 308, 309, 310, 294, 400, 182,
	1457, 431, 468, 467, 419, 428, 0, 0, 166, 420,
	0, 427, 421, 425, 424, 422, 423, 0, 483, 0,
	0, 0, 0, 0, 0, 391, 404, 0, 408, 720,
	719, 729, 730, 722, 723, 724, 725, 726, 727, 728,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 402, 0, 0, 0, 0, 446, 0, 403, 0,
	0, 448, 0, 429, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 426, 444, 449, 178, 505, 442, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 506, 200, 248, 214, 249, 201, 226,
	225, 227, 720, 719, 729, 730, 722, 723, 724, 725,
	726, 727, 728, 721, 0, 0, 0, 0, 0, 440,
	0, 0, 300, 0, 0, 489, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 443, 0, 260, 242,
	502, 392, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 1104, 1103,
	1105, 312, 192, 152, 295, 487, 238, 0, 501, 482,
	484, 485, 488, 492, 493, 494, 495, 496, 498, 500,
	504, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 719, 729, 730, 722, 723, 724, 725, 726, 727,
	728, 721, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 447,
	228, 229, 230, 231, 490, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 512, 486, 511, 513,
	514, 510, 515, 516, 497, 410, 0, 508, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 474,
	455, 456, 457, 409, 458, 453, 454, 475, 450, 471,
	472, 433, 436, 459, 131, 460, 473, 476, 477, 517,
	518, 519, 463, 478, 470, 469, 461, 451, 479, 480,
	437, 435, 464, 465, 452, 466, 481, 445, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 185, 1163, 0, 210, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 491, 499, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 0, 400,
	0, 0, 431, 468, 467, 419, 428, 0, 0, 166,
	420, 0, 427, 421, 425, 424, 422, 423, 0, 483,
	0, 0, 0, 0, 0, 0, 391, 404, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 0, 0, 0, 0, 446, 0, 403,
	0, 0, 1245, 0, 429, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 426, 444, 449, 178, 505, 442, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 506, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 300, 0, 0, 489, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 443, 0, 260,
	242, 502, 392, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 487, 238, 0, 501,
	482, 484, 485, 488, 492, 493, 494, 495, 496, 498,
	500, 504, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	447, 228, 229, 230, 231, 490, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 512, 486, 511,
	513, 514, 510, 515, 516, 497, 410, 0, 508, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	474, 455, 456, 457, 409, 458, 453, 454, 475, 450,
	471, 472, 433, 436, 459, 131, 460, 473, 476, 477,
	517, 518, 519, 463, 478, 470, 469, 461, 451, 479,
	480, 437, 435, 464, 465, 452, 466, 481, 0, 0,
	308, 309, 310, 294, 107, 182, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 491, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 0,
	0, 431, 468, 467, 419, 428, 0, 0, 166, 420,
	0, 427, 421, 425, 424, 422, 423, 0, 483, 0,
	0, 0, 0, 0, 0, 391, 404, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 402, 0, 0, 0, 0, 446, 0, 403, 0,
	0, 448, 0, 429, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 426, 444, 449, 178, 505, 442, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 506, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 440,
	0, 0, 300, 0, 0, 489, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 443, 0, 260, 242,
	502, 392, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 487, 238, 0, 501, 482,
	484, 485, 488, 492, 493, 494, 495, 496, 498, 500,
	504, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 447,
	228, 229, 230, 231, 490, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 512, 486, 511, 513,
	514, 510, 515, 516, 497, 410, 0, 508, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 80, 252, 190, 474,
	455, 456, 457, 409, 458, 453, 454, 475, 450, 471,
	472, 433, 436, 459, 131, 460, 473, 476, 477, 517,
	518, 519, 463, 478, 470, 469, 461, 451, 479, 480,
	437, 435, 464, 465, 452, 466, 481, 445, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 185, 2444, 0, 210, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 491, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 431, 468, 467, 419, 428, 0, 0, 166,
	420, 0, 427, 421, 425, 424, 422, 423, 0, 483,
	0, 0, 0, 0, 0, 0, 391, 404, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 0, 0, 0, 0, 446, 0, 403,
	0, 0, 448, 0, 429, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 426, 444, 449, 178, 505, 442, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 506, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 300, 0, 0, 489, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 443, 0, 260,
	242, 502, 392, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 487, 238, 0, 501,
	482, 484, 485, 488, 492, 493, 494, 495, 496, 498,
	500, 504, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	447, 228, 229, 230, 231, 490, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 512, 486, 511,
	513, 514, 510, 515, 516, 497, 410, 0, 508, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	474, 455, 456, 457, 409, 458, 453, 454, 475, 450,
	471, 472, 433, 436, 459, 131, 460, 473, 476, 477,
	517, 518, 519, 463, 478, 470, 469, 461, 451, 479,
	480, 437, 435, 464, 465, 452, 466, 481, 445, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 185, 1163, 0, 210, 0,
	0, 0, 270, 224, 0, 0, 0, 0, 491, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 431, 468, 467, 419, 428, 0, 0,
	166, 420, 0, 427, 421, 425, 424, 422, 423, 0,
	483, 0, 0, 0, 0, 0, 0, 391, 404, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 401, 402, 0, 0, 0, 0, 446, 0,
	403, 0, 0, 448, 0, 429, 0, 0, 158, 275,
	290, 167, 266, 303, 172, 273, 163, 239, 262, 0,
	0, 160, 288, 272, 221, 204, 205, 159, 0, 257,
	183, 196, 179, 237, 426, 444, 449, 178, 505, 442,
	298, 162, 0, 297, 236, 284, 289, 222, 216, 161,
	286, 220, 215, 208, 187, 506, 200, 248, 214, 249,
	201, 226, 225, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 0, 300, 0, 0, 489, 0, 0,
	0, 274, 0, 0, 209, 0, 0, 0, 443, 0,
	260, 242, 502, 392, 0, 258, 212, 285, 250, 291,
	276, 299, 254, 251, 154, 277, 181, 223, 164, 165,
	177, 184, 186, 188, 189, 232, 233, 245, 265, 278,
	279, 280, 180, 173, 259, 174, 198, 175, 155, 267,
	176, 156, 246, 283, 0, 194, 255, 219, 157, 218,
	247, 282, 281, 307, 313, 314, 318, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 312, 192, 152, 295, 487, 238, 0,
	501, 482, 484, 485, 488, 492, 493, 494, 495, 496,
	498, 500, 504, 263, 0, 0, 0, 0, 0, 203,
	244, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 293, 305, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 447, 228, 229, 230, 231, 490, 0, 171, 323,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 191, 197, 0, 199, 170, 243, 193,
	302, 206, 0, 235, 202, 268, 207, 213, 256, 301,
	241, 261, 168, 292, 269, 217, 0, 0, 512, 486,
	511, 513, 514, 510, 515, 516, 497, 410, 0, 508,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 211, 0, 252,
	190, 474, 455, 456, 457, 409, 458, 453, 454, 475,
	450, 471, 472, 433, 436, 459, 131, 460, 473, 476,
	477, 517, 518, 519, 463, 478, 470, 469, 461, 451,
	479, 480, 437, 435, 464, 465, 452, 466, 481, 445,
	0, 308, 309, 310, 294, 0, 182, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 185, 0, 0, 210,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 491,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 431, 468, 467, 419, 428, 0,
	0, 166, 420, 0, 427, 421, 425, 424, 422, 423,
	0, 483, 0, 0, 0, 0, 0, 0, 391, 404,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 951, 0, 0, 0, 446,
	0, 403, 0, 0, 448, 0, 429, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 426, 444, 449, 178, 505,
	442, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 506, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 440, 0, 0, 300, 0, 0, 489, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 443,
	0, 260, 242, 502, 392, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 487, 238,
	0, 501, 482, 484, 485, 488, 492, 493, 494, 495,
	496, 498, 500, 504, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 447, 228, 229, 230, 231, 490, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 512,
	486, 511, 513, 514, 510, 515, 516, 497, 410, 0,
	508, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 474, 455, 456, 457, 409, 458, 453, 454,
	475, 450, 471, 472, 433, 436, 459, 131, 460, 473,
	476, 477, 517, 518, 519, 463, 478, 470, 469, 461,
	451, 479, 480, 437, 435, 464, 465, 452, 466, 481,
	0, 0, 308, 309, 310, 294, 445, 182, 0, 1518,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 491, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 0,
	0, 431, 468, 467, 419, 428, 0, 0, 166, 420,
	0, 427, 421, 425, 424, 422, 423, 0, 483, 0,
	0, 0, 0, 0, 0, 391, 404, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 402, 0, 0, 0, 0, 446, 0, 403, 0,
	0, 448, 0, 429, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 426, 444, 449, 178, 505, 442, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 506, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 440,
	0, 0, 300, 0, 0, 489, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 443, 0, 260, 242,
	502, 392, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 487, 238, 0, 501, 482,
	484, 485, 488, 492, 493, 494, 495, 496, 498, 500,
	504, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 447,
	228, 229, 230, 231, 490, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 512, 486, 511, 513,
	514, 510, 515, 516, 497, 410, 0, 508, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 474,
	455, 456, 457, 409, 458, 453, 454, 475, 450, 471,
	472, 433, 436, 459, 131, 460, 473, 476, 477, 517,
	518, 519, 463, 478, 470, 469, 461, 451, 479, 480,
	437, 435, 464, 465, 452, 466, 481, 445, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 491, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 431, 468, 467, 419, 428, 0, 0, 166,
	420, 0, 427, 421, 425, 424, 422, 423, 0, 483,
	0, 0, 0, 0, 0, 0, 391, 404, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 0, 0, 0, 0, 446, 0, 403,
	0, 0, 448, 0, 429, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 426, 444, 449, 178, 505, 442, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 506, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 300, 0, 0, 489, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 443, 0, 260,
	242, 502, 392, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 487, 238, 0, 501,
	482, 484, 485, 488, 492, 493, 494, 495, 496, 498,
	500, 504, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	447, 228, 229, 230, 231, 490, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 512, 486, 511,
	513, 514, 510, 515, 516, 497, 410, 0, 508, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	474, 455, 456, 457, 409, 458, 453, 454, 475, 450,
	471, 472, 433, 436, 459, 131, 460, 473, 476, 477,
	517, 518, 519, 463, 478, 470, 469, 461, 451, 479,
	480, 437, 435, 464, 465, 452, 466, 481, 445, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 1027, 0, 0,
	0, 407, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 270, 224, 0, 0, 0, 0, 491, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 431, 468, 467, 419, 428, 0, 0,
	166, 420, 0, 427, 421, 425, 424, 422, 423, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 401, 402, 0, 0, 0, 0, 446, 0,
	403, 0, 0, 448, 0, 429, 0, 0, 158, 275,
	290, 167, 266, 303, 172, 273, 163, 239, 262, 0,
	0, 160, 288, 272, 221, 204, 205, 159, 0, 257,
	183, 196, 179, 237, 426, 444, 449, 178, 505, 442,
	298, 162, 0, 297, 236, 284, 289, 222, 216, 161,
	286, 220, 215, 208, 187, 506, 200, 248, 214, 249,
	201, 226, 225, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 0, 300, 0, 0, 489, 0, 0,
	0, 274, 0, 0, 209, 0, 0, 0, 443, 0,
	260, 242, 502, 0, 0, 258, 212, 285, 250, 291,
	276, 299, 254, 251, 154, 277, 181, 223, 164, 165,
	177, 184, 186, 188, 189, 232, 233, 245, 265, 278,
	279, 280, 180, 173, 259, 174, 198, 175, 155, 267,
	176, 156, 246, 283, 0, 194, 255, 219, 157, 218,
	247, 282, 281, 307, 1028, 1029, 318, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 312, 192, 152, 295, 487, 238, 0,
	501, 482, 484, 485, 488, 492, 493, 494, 495, 496,
	498, 500, 504, 263, 0, 0, 0, 0, 0, 203,
	244, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 293, 305, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 447, 228, 229, 230, 231, 490, 0, 171, 323,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 191, 197, 0, 199, 170, 243, 193,
	302, 206, 0, 235, 202, 268, 207, 213, 256, 301,
	241, 261, 168, 292, 269, 217, 0, 0, 512, 486,
	511, 513, 514, 510, 515, 516, 497, 410, 0, 508,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 211, 0, 252,
	190, 474, 455, 456, 457, 409, 458, 453, 454, 475,
	450, 471, 472, 433, 436, 459, 131, 460, 473, 476,
	477, 517, 518, 519, 463, 478, 470, 469, 461, 451,
	479, 480, 437, 435, 464, 465, 452, 466, 481, 445,
	0, 308, 309, 310, 294, 0, 182, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 185, 0, 0, 210,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 491,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 468, 467, 419, 428, 0,
	0, 166, 420, 0, 427, 421, 425, 424, 422, 423,
	0, 483, 0, 0, 0, 0, 0, 0, 391, 404,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 0, 0, 0, 0, 446,
	0, 403, 0, 0, 448, 0, 429, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 426, 444, 449, 178, 505,
	442, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 506, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 440, 0, 0, 300, 0, 0, 489, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 443,
	0, 260, 242, 502, 392, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 487, 238,
	0, 501, 482, 484, 485, 488, 492, 493, 494, 495,
	496, 498, 500, 504, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 447, 228, 229, 230, 231, 490, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 512,
	486, 511, 513, 514, 510, 515, 516, 497, 410, 0,
	508, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 474, 455, 456, 457, 409, 458, 453, 454,
	475, 450, 471, 472, 433, 436, 459, 131, 460, 473,
	476, 477, 517, 518, 519, 463, 478, 470, 469, 461,
	451, 479, 480, 437, 435, 464, 465, 452, 466, 481,
	445, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 270, 224, 0, 0, 0, 0,
	491, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 431, 468, 467, 419, 428,
	0, 0, 166, 420, 0, 427, 421, 425, 424, 422,
	423, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 0, 0, 0, 0,
	446, 0, 403, 0, 0, 448, 0, 429, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 426, 444, 449, 178,
	505, 442, 298, 162, 0, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 506, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 440, 0, 0, 300, 0, 0, 489,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	443, 0, 260, 242, 502, 0, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 313, 314, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 487,
	238, 0, 501, 482, 484, 485, 488, 492, 493, 494,
	495, 496, 498, 500, 504, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 447, 228, 229, 230, 231, 490, 0,
	171, 323, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	512, 486, 511, 513, 514, 510, 515, 516, 497, 410,
	0, 508, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 474, 455, 456, 457, 409, 458, 453,
	454, 475, 450, 471, 472, 433, 436, 459, 131, 460,
	473, 476, 477, 517, 518, 519, 463, 478, 470, 469,
	461, 451, 479, 480, 437, 435, 464, 465, 452, 466,
	481, 0, 0, 308, 309, 310, 294, 107, 182, 31,
	97, 79, 0, 0, 0, 0, 0, 0, 0, 240,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 210,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 1082,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 331, 333, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1078, 0,
	0, 1075, 0, 0, 0, 1077, 1074, 1076, 1080, 1081,
	0, 0, 0, 1079, 0, 0, 153, 0, 211, 80,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 270, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 1904, 1907, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1085, 1086, 1087, 1088, 1089, 1090,
	1083, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 275,
	290, 167, 266, 303, 172, 273, 163, 239, 262, 0,
	0, 160, 288, 272, 221, 204, 205, 159, 0, 257,
	183, 196, 179, 237, 0, 287, 315, 178, 306, 0,
	298, 162, 0, 297, 236, 284, 289, 222, 216, 161,
	286, 220, 215, 208, 187, 0, 200, 248, 214, 249,
	201, 226, 225, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1908, 300, 0, 0, 0, 1901, 0,
	1900, 274, 1902, 1905, 209, 0, 0, 0, 316, 0,
	260, 242, 0, 0, 0, 258, 212, 285, 250, 291,
	276, 299, 254, 251, 154, 277, 181, 223, 164, 165,
	177, 184, 186, 188, 189, 232, 233, 245, 265, 278,
	279, 280, 180, 173, 259, 174, 198, 175, 155, 267,
	176, 156, 246, 283, 1906, 194, 255, 219, 157, 218,
	247, 282, 281, 307, 313, 314, 318, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 312, 192, 152, 295, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 311, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 203,
	244, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 293, 305, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 320, 228, 229, 230, 231, 195, 0, 171, 323,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 191, 197, 0, 199, 170, 243, 193,
	302, 206, 0, 235, 202, 268, 207, 213, 256, 301,
	241, 261, 168, 292, 269, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 211, 0, 252,
	190, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 240, 0, 0,
	0, 308, 309, 310, 294, 0, 182, 0, 0, 1270,
	0, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 1271, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 706, 707, 708, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 597, 0, 210, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 605, 606, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 583, 298, 162,
	582, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	595, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 599,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 607, 602, 603, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 107, 0, 0, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	1279, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 80, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 605, 606, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 583, 298, 162,
	582, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 607, 602, 603, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 240, 0, 0, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 185, 935, 0, 210, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 933, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	931, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 929, 0, 210, 0, 0, 0, 270, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	0, 0, 933, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 931,
	0, 0, 0, 0, 158, 275, 290, 167, 266, 303,
	172, 273, 163, 239, 262, 0, 0, 160, 288, 272,
	221, 204, 205, 159, 0, 257, 183, 196, 179, 237,
	0, 287, 315, 178, 306, 0, 298, 162, 0, 297,
	236, 284, 289, 222, 216, 161, 286, 220, 215, 208,
	187, 0, 200, 248, 214, 249, 201, 226, 225, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	209, 0, 0, 0, 316, 0, 260, 242, 0, 0,
	0, 258, 212, 285, 250, 291, 276, 299, 254, 251,
	154, 277, 181, 223, 164, 165, 177, 184, 186, 188,
	189, 232, 233, 245, 265, 278, 279, 280, 180, 173,
	259, 174, 198, 175, 155, 267, 176, 156, 246, 283,
	0, 194, 255, 219, 157, 218, 247, 282, 281, 307,
	313, 314, 318, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 312,
	192, 152, 295, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 311, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 203, 244, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 293, 305, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 320, 228, 229,
	230, 231, 195, 0, 171, 323, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 191,
	197, 0, 199, 170, 243, 193, 302, 206, 0, 235,
	202, 268, 207, 213, 256, 301, 241, 261, 168, 292,
	269, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 211, 0, 252, 190, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 240, 0, 0, 0, 308, 309, 310,
	294, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 210, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2353, 0, 113, 468,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 270, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	933, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 158, 275, 290, 167, 266, 303, 172, 273,
	163, 239, 262, 0, 0, 160, 288, 272, 221, 204,
	205, 159, 0, 257, 183, 196, 179, 237, 0, 287,
	315, 178, 306, 0, 298, 162, 0, 297, 236, 284,
	289, 222, 216, 161, 286, 220, 215, 208, 187, 0,
	200, 248, 214, 249, 201, 226, 225, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 209, 0,
	0, 0, 316, 0, 260, 242, 0, 0, 0, 258,
	212, 285, 250, 291, 276, 299, 254, 251, 154, 277,
	181, 223, 164, 165, 177, 184, 186, 188, 189, 232,
	233, 245, 265, 278, 279, 280, 180, 173, 259, 174,
	198, 175, 155, 267, 176, 156, 246, 283, 0, 194,
	255, 219, 157, 218, 247, 282, 281, 307, 313, 314,
	318, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 312, 192, 152,
	295, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 311, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 203, 244, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	293, 305, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 320, 228, 229, 230, 231,
	195, 0, 171, 323, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 191, 197, 0,
	199, 170, 243, 193, 302, 206, 0, 235, 202, 268,
	207, 213, 256, 301, 241, 261, 168, 292, 269, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 211, 0, 252, 190, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 240, 0, 0, 0, 308, 309, 310, 294, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 210, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 933,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	240, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 270, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 0, 287, 315, 178,
	306, 0, 298, 162, 0, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 0, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	316, 0, 260, 242, 0, 0, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 313, 314, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	311, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 320, 228, 229, 230, 231, 195, 0,
	171, 323, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 240,
	1226, 0, 0, 308, 309, 310, 294, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 185, 1642, 0, 210,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 933, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 270, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 468, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 275,
	290, 167, 266, 303, 172, 273, 163, 239, 262, 0,
	0, 160, 288, 272, 221, 204, 205, 159, 0, 257,
	183, 196, 179, 237, 0, 287, 315, 178, 306, 0,
	298, 162, 0, 297, 236, 284, 289, 222, 216, 161,
	286, 220, 215, 208, 187, 0, 200, 248, 214, 249,
	201, 226, 225, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 209, 0, 0, 0, 316, 0,
	260, 242, 0, 0, 0, 258, 212, 285, 250, 291,
	276, 299, 254, 251, 154, 277, 181, 223, 164, 165,
	177, 184, 186, 188, 189, 232, 233, 245, 265, 278,
	279, 280, 180, 173, 259, 174, 198, 175, 155, 267,
	176, 156, 246, 283, 0, 194, 255, 219, 157, 218,
	247, 282, 281, 307, 313, 314, 318, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 312, 192, 152, 295, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 311, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 203,
	244, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 293, 305, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 320, 228, 229, 230, 231, 195, 0, 171, 323,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 191, 197, 0, 199, 170, 243, 193,
	302, 206, 0, 235, 202, 268, 207, 213, 256, 301,
	241, 261, 168, 292, 269, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 211, 0, 252,
	190, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 240, 0, 0,
	0, 308, 309, 310, 294, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2121,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 0, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 240, 0, 0, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 210, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 270, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	0, 0, 933, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 275, 290, 167, 266, 303,
	172, 273, 163, 239, 262, 0, 0, 160, 288, 272,
	221, 204, 205, 159, 0, 257, 183, 196, 179, 237,
	0, 287, 315, 178, 306, 0, 298, 162, 0, 297,
	236, 284, 289, 222, 216, 161, 286, 220, 215, 208,
	187, 0, 200, 248, 214, 249, 201, 226, 225, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	209, 0, 0, 0, 316, 0, 260, 242, 0, 0,
	0, 258, 212, 285, 250, 291, 276, 299, 254, 251,
	154, 277, 181, 223, 164, 165, 177, 184, 186, 188,
	189, 232, 233, 245, 265, 278, 279, 280, 180, 173,
	259, 174, 198, 175, 155, 267, 176, 156, 246, 283,
	0, 194, 255, 219, 157, 218, 247, 282, 281, 307,
	313, 314, 318, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 312,
	192, 152, 295, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 311, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 203, 244, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 293, 305, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 320, 228, 229,
	230, 231, 195, 0, 171, 323, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 191,
	197, 0, 199, 170, 243, 193, 302, 206, 0, 235,
	202, 268, 207, 213, 256, 301, 241, 261, 168, 292,
	269, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 211, 0, 252, 190, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 240, 0, 0, 0, 308, 309, 310,
	294, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 210, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 1815, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 270, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 275, 290, 167, 266, 303, 172, 273,
	163, 239, 262, 0, 0, 160, 288, 272, 221, 204,
	205, 159, 0, 257, 183, 196, 179, 237, 0, 287,
	315, 178, 306, 0, 298, 162, 0, 297, 236, 284,
	289, 222, 216, 161, 286, 220, 215, 208, 187, 0,
	200, 248, 214, 249, 201, 226, 225, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 209, 0,
	0, 0, 316, 0, 260, 242, 0, 0, 0, 258,
	212, 285, 250, 291, 276, 299, 254, 251, 154, 277,
	181, 223, 164, 165, 177, 184, 186, 188, 189, 232,
	233, 245, 265, 278, 279, 280, 180, 173, 259, 174,
	198, 175, 155, 267, 176, 156, 246, 283, 0, 194,
	255, 219, 157, 218, 247, 282, 281, 307, 313, 314,
	318, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 312, 192, 152,
	295, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 311, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 203, 244, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	293, 305, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 320, 228, 229, 230, 231,
	195, 0, 171, 323, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 191, 197, 0,
	199, 170, 243, 193, 302, 206, 0, 235, 202, 268,
	207, 213, 256, 301, 241, 261, 168, 292, 269, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 211, 0, 252, 190, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 240, 0, 0, 0, 308, 309, 310, 294, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 210, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 1651,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	0, 1581, 0, 0, 308, 309, 310, 294, 240, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 270, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 275,
	290, 167, 266, 303, 172, 273, 163, 239, 262, 0,
	0, 160, 288, 272, 221, 204, 205, 159, 0, 257,
	183, 196, 179, 237, 0, 287, 315, 178, 306, 0,
	298, 162, 0, 297, 236, 284, 289, 222, 216, 161,
	286, 220, 215, 208, 187, 0, 200, 248, 214, 249,
	201, 226, 225, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 209, 0, 0, 0, 316, 0,
	260, 242, 0, 0, 0, 258, 212, 285, 250, 291,
	276, 299, 254, 251, 154, 277, 181, 223, 164, 165,
	177, 184, 186, 188, 189, 232, 233, 245, 265, 278,
	279, 280, 180, 173, 259, 174, 198, 175, 155, 267,
	176, 156, 246, 283, 0, 194, 255, 219, 157, 218,
	247, 282, 281, 307, 313, 314, 318, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 312, 192, 152, 295, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 311, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 203,
	244, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 293, 305, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 320, 228, 229, 230, 231, 195, 0, 171, 323,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 191, 197, 0, 199, 170, 243, 193,
	302, 206, 0, 235, 202, 268, 207, 213, 256, 301,
	241, 261, 168, 292, 269, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 211, 0, 252,
	190, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 240, 0, 0,
	0, 308, 309, 310, 294, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 1564, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 0, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 240, 0, 0, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 210, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 347,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	110, 185, 0, 0, 210, 0, 0, 0, 270, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 275, 290, 167, 266, 303,
	172, 273, 163, 239, 262, 0, 0, 160, 288, 272,
	221, 204, 205, 159, 0, 257, 183, 196, 179, 237,
	0, 287, 315, 178, 306, 0, 298, 162, 0, 297,
	236, 284, 289, 222, 216, 161, 286, 220, 215, 208,
	187, 0, 200, 248, 214, 249, 201, 226, 225, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	209, 0, 0, 0, 316, 0, 260, 242, 0, 0,
	0, 258, 212, 285, 250, 291, 276, 299, 254, 251,
	154, 277, 181, 223, 164, 165, 177, 184, 186, 188,
	189, 232, 233, 245, 265, 278, 279, 280, 180, 173,
	259, 174, 198, 175, 155, 267, 176, 156, 246, 283,
	0, 194, 255, 219, 157, 218, 247, 282, 281, 307,
	313, 314, 318, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 312,
	192, 152, 295, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 311, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 203, 244, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 293, 305, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 320, 228, 229,
	230, 231, 195, 0, 171, 323, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 191,
	197, 0, 199, 170, 243, 193, 302, 206, 0, 235,
	202, 268, 207, 213, 256, 301, 241, 261, 168, 292,
	269, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 211, 0, 252, 190, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 240, 0, 0, 0, 308, 309, 310,
	294, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 210, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 1623, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 270, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 1181, 1182,
	1625, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 275, 290, 167, 266, 303, 172, 273,
	163, 239, 262, 0, 0, 160, 288, 272, 221, 204,
	205, 159, 0, 257, 183, 196, 179, 237, 0, 287,
	315, 178, 306, 0, 298, 162, 0, 297, 236, 284,
	289, 222, 216, 161, 286, 220, 215, 208, 187, 0,
	200, 248, 214, 249, 201, 226, 225, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 209, 0,
	0, 0, 316, 0, 260, 242, 0, 0, 0, 258,
	212, 285, 250, 291, 276, 299, 254, 251, 154, 277,
	181, 223, 164, 165, 177, 184, 186, 188, 189, 232,
	233, 245, 265, 278, 279, 280, 180, 173, 259, 174,
	198, 175, 155, 267, 176, 156, 246, 283, 0, 194,
	255, 219, 157, 218, 247, 282, 281, 307, 313, 314,
	318, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 312, 192, 152,
	295, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 311, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 203, 244, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	293, 305, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 320, 228, 229, 230, 231,
	195, 0, 171, 323, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 191, 197, 0,
	199, 170, 243, 193, 302, 206, 240, 235, 202, 268,
	207, 213, 256, 301, 241, 261, 168, 292, 269, 217,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1180, 1181, 1182, 1625, 0, 0, 0, 166, 153,
	0, 211, 0, 252, 190, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 310, 294, 0,
	182, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 0, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	240, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 270, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1180, 1181, 1182, 0, 0,
	0, 0, 166, 153, 0, 211, 0, 252, 190, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 0, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 0, 287, 315, 178,
	306, 0, 298, 162, 0, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 0, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	316, 0, 260, 242, 0, 0, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 313, 314, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	311, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 320, 228, 229, 230, 231, 195, 0,
	171, 323, 253, 706, 707, 708, 705, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	0, 811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 366, 373, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 371, 799, 372,
	376, 0, 789, 358, 0, 0, 0, 153, 1082, 211,
	0, 252, 190, 381, 0, 0, 819, 823, 825, 827,
	829, 830, 832, 0, 836, 833, 834, 835, 0, 0,
	814, 815, 816, 817, 797, 798, 820, 0, 800, 0,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	812, 818, 0, 308, 309, 310, 294, 0, 182, 822,
	824, 826, 828, 831, 0, 0, 0, 0, 799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 819, 823, 825, 827,
	829, 830, 832, 813, 836, 833, 834, 835, 0, 0,
	814, 815, 816, 817, 797, 798, 820, 2078, 800, 0,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	812, 818, 0, 0, 0, 2078, 0, 0, 0, 822,
	824, 826, 828, 831, 0, 0, 0, 0, 0, 0,
	0, 1579, 0, 0, 0, 0, 0, 1078, 0, 0,
	1075, 0, 0, 0, 1077, 1074, 1076, 1080, 1081, 1579,
	0, 0, 1079, 813, 0, 2472, 0, 0, 0, 0,
	0, 359, 361, 360, 0, 2060, 0, 0, 0, 365,
	0, 0, 0, 0, 0, 0, 2078, 0, 0, 0,
	0, 369, 0, 2060, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2149, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1085, 1086, 1087, 1088, 1089, 1090, 1083,
	1084, 0, 0, 364, 368, 374, 0, 375, 377, 0,
	0, 378, 379, 380, 0, 0, 382, 383, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2068,
	0, 821, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 2057,
	0, 0, 0, 2059, 2061, 2063, 0, 2065, 2066, 2067,
	2069, 2070, 2071, 2073, 2074, 2075, 2076, 2057, 0, 0,
	0, 2059, 2061, 2063, 0, 2065, 2066, 2067, 2069, 2070,
	2071, 2073, 2074, 2075, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2079, 2064, 0, 0,
	0, 821, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	0, 2077, 2059, 2061, 2063, 0, 2065, 2066, 2067, 2069,
	2070, 2071, 2073, 2074, 2075, 2076, 0, 0, 2056, 2077,
	0, 0, 0, 0, 0, 0, 367, 0, 366, 373,
	363, 0, 0, 0, 0, 0, 2056, 0, 0, 0,
	370, 371, 0, 372, 376, 2079, 2072, 358, 367, 0,
	366, 373, 363, 2062, 0, 0, 0, 381, 0, 0,
	0, 0, 370, 371, 2072, 372, 376, 0, 0, 358,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 381,
	2077, 0, 0, 385, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 361, 360, 0, 0,
	0, 0, 0, 365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 359, 361, 360,
	0, 0, 384, 0, 0, 365, 0, 0, 0, 362,
	0, 0, 0, 353, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 368, 374,
	0, 375, 377, 0, 0, 378, 379, 380, 0, 0,
	382, 383, 0, 0, 0, 0, 0, 0, 0, 364,
	368, 374, 0, 375, 377, 0, 0, 378, 379, 380,
	0, 0, 382, 383,
}

var yyPact = [...]int{
	201, -1000, -307, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19982, -1000, -1000, 1451, -1000, 8237, 20451, 94, 20451,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 321, -1000, 19513, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 284, 22546, 190, 189, 6305,
	20451, -290, -1000, 1948, -1000, -1000, -1000, -1000, 170, 333,
	19044, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1984, 39, 333, 424, 429,
	591, 591, 9644, 1948, 220, 83, -1000, 512, 201, 252,
	20451, -1000, 769, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1948, 1948, 20451,
	-48, 910, -1000, 235, 196, 202, 767, -1000, -1000, -1000,
	-1000, 1992, -1000, 20451, 1716, 20451, -1000, 1219, 228, 22568,
	1865, 698, 370, 1780, -1000, -1000, 1690, -1000, 49, 92,
	99, 209, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 93,
	-1000, 1922, -1000, -1000, 41, -1000, -1000, 32, -1000, -1000,
	-1000, -84, -1000, -1000, -1000, -1000, -1000, -157, -157, 440,
	1359, 6305, -1000, 1225, -1000, 1413, -1000, -1000, -1000, -1000,
	3894, 7748, 7748, 7748, 7748, -1000, -1000, 1570, 6305, 1689,
	1684, -1000, -1000, -1000, -1000, -1000, 764, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7267,
	-1000, 1674, 1669, 1667, 1666, 1660, 1651, 1646, 1644, 1640,
	1633, 1456, 1631, 1276, 1272, 1630, 1626, 1624, 7748, 1270,
	1456, 1456, 1621, 1620, 1617, 1616, 1615, 1610, 1609, 1607,
	1606, 1604, 1603, 1602, 1600, 1596, 1593, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21981, -1000, 754, 581, -1000, 1592, 1840, 1930, 1528, 1962,
	1915, 1913, 1908, 1897, 44, 283, 283, 283, 304, 283,
	320, -1000, -1000, -1000, -1000, -1000, -1000, 373, -1000, -1000,
	-1000, -1000, 605, 20451, -1000, 1516, 1927, 226, 809, 221,
	232, 1930, 1930, -113, -116, 809, 809, -116, 45, -1000,
	-1000, -1000, 967, 223, 967, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1904, 1902, 284, 284, 290, -1000, -184, -1000,
	-1000, 417, -1000, 404, -1000, 1219, 227, 225, 607, 919,
	-1000, 886, 20451, 20451, 20451, 886, 886, 11532, 11063, -1000,
	1930, 1528, -1000, 1438, 1577, 1528, 284, 284, 284, 284,
	284, 284, 284, 20451, 5337, 5337, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 197, 1590, -1000, 20451, 1930, 1840,
	1930, -1000, 752, 1112, 1268, -1000, -1000, 235, 911, -1000,
	562, -1000, -1000, -1000, -1000, 20451, 210, -1000, 1266, 1580,
	-1000, 312, 691, 644, -1000, 63, 22082, 16222, 1219, 16222,
	20451, -1000, -1000, -1000, -1000, -1000, -1000, -89, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -55, -1000, -55, 6305, 6305, 6305, 6305, 6305, -1000,
	401, 6786, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7748,
	7748, 7748, 7748, 7748, 7748, 7748, 7748, 7748, 7748, 7748,
	7748, 1566, 924, 7748, 7748, 7748, 1577, 1816, 606, -1000,
	-1000, -1000, -1000, -1000, 933, 1359, 6305, 6305, 20451, 21956,
	6305, 6305, 8367, 6305, 1895, 1895, 2924, 6305, -1000, 1423,
	1422, -1000, -1000, 1006, 6305, -1000, -1000, 6305, 7748, 6305,
	-1000, -1000, -1000, -1000, 1895, 6305, 6305, 1895, 1895, 1895,
	964, 1895, 1895, 1895, 1895, 1895, 1895, 1895, 1267, 20451,
	1828, 18, -1000, -1000, -1000, 1494, -1000, 1548, 1548, 1494,
	1494, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1579, 1576, -1000, -1000, 1494, 1534, 1534, 1494, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1571, 1571, 1575, 1571, 20451, 1930, -290,
	4856, -1000, -293, 1840, 6305, -1000, -1000, 6305, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 301, 283, -1000, 1284,
	952, 16222, 1219, 1126, 20451, 283, 290, -1000, 20451, 605,
	1882, 20451, 16222, 967, 1971, 7748, 967, -1000, -1000, -1000,
	809, 809, -1000, -1000, -1000, -1000, 967, 967, -1000, -1000,
	-90, 1971, 1971, -103, 20451, 20451, 283, 20451, -1000, -1000,
	-1000, -1000, 20451, -1000, -1000, 1284, 16222, 13408, -1000, -147,
	422, 407, 419, -1000, -1000, 311, 322, 10594, 255, 16222,
	3405, -1000, -1000, 886, 886, 886, 3405, 3405, 774, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1840, -1000, -1000, -1000,
	-1000, 1284, 16222, 1219, 20451, 20451, 20451, 21668, -1000, 637,
	-1000, -1000, 9175, 747, 637, -1000, -291, -1000, 10125, 20451,
	20451, -1000, 1840, -1000, 1840, 2489, -1000, 1918, -1000, 235,
	120, -1000, -1000, -1000, -1000, -1000, -1000, 733, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 603, -1000, 20451,
	-1000, -1000, 63, 16222, 882, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 104, -1000, -1000, 126, -1000, 298, -24, 904,
	-1000, -1000, 36, 123, 36, 1359, -1000, 949, 949, 950,
	-1000, 406, -1000, -1000, -1000, -1000, 1570, -1000, -1000, -1000,
	1278, 3138, -1000, 980, 980, 783, 783, 783, 783, 783,
	1102, 1102, -1000, -1000, -1000, 3894, 1566, 7748, 7748, 7748,
	270, 3000, 2809, -1000, 6305, 930, -1000, 6305, 1089, 798,
	712, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1412, 440, 1410, 1188, 1991, 1408, 6305, -1000, -1000,
	6305, 1110, 5824, -1000, -1000, -1000, 1406, -1000, -1000, -1000,
	1401, 515, 1398, 1379, 1394, 6305, 876, 874, 6305, 6305,
	6305, 6305, 1393, 6305, 6305, 6305, 6305, 6305, 6305, 6305,
	596, -1000, 6305, 10, -1000, -1000, -1000, -1000, 1108, -1000,
	1107, -1000, -1000, -1000, 1247, 1247, -1000, -1000, 1106, -1000,
	-1000, -1000, 1099, -1000, -1000, 1098, -1000, -1000, -1000, -1000,
	873, -1000, 1359, -1000, 1245, -1000, 744, 579, -1000, 1059,
	18575, 20451, 7, -1000, 1856, 548, -1000, -24, 453, 1683,
	-1000, -1000, -1000, 1827, 20451, 18106, -1000, 1565, 870, -1000,
	1563, 20451, -1000, 6305, -1000, 20451, 1971, 1971, 809, 21668,
	967, 20451, 967, -1000, -1000, 967, -1000, 693, -1000, 20451,
	-1000, -1000, -1000, -1000, 7, 548, 1868, 593, -1000, -1000,
	-1000, -1000, 1881, 20920, 20920, 220, 1558, -1000, -1000, 414,
	398, 410, -1000, -1000, 295, -1000, -1000, 453, -1000, -1000,
	-1000, 1553, 909, -1000, -1000, 7748, -1000, 3405, 3405, 3405,
	-1000, -1000, 13877, -1000, -1000, 553, 453, 1767, 538, -1000,
	538, -1000, -1000, -1000, 1971, 5337, -1000, 13408, -1000, -1000,
	17629, -1000, 17160, 1971, 458, -1000, 1552, -1000, 868, 1817,
	-1000, 659, 486, -1000, 906, 861, -1000, -1000, -1000, -1000,
	658, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -50, -1000,
	-1000, 20451, 1266, 858, 882, 479, -1000, 294, 656, 642,
	-1000, 16222, 46, 16222, -1000, 16222, -1000, -1000, 222, -1000,
	20451, 1834, -1000, -1000, -1000, 1244, 1831, -1000, -1000, -1000,
	-1000, -1000, 849, -1000, 270, 3000, 2144, -1000, 7748, 7748,
	1806, 829, -1000, 6305, 1021, 1264, 899, 12470, 20451, -1000,
	-1000, 6305, 6305, -1000, 1798, 1786, -1000, 6305, 6305, 1154,
	-1000, -1000, -1000, 12470, -1000, 7748, -1000, 1712, -1000, -1000,
	1701, 1685, 1681, 847, -1000, 1647, 1588, 1561, 1486, 1480,
	1472, 1424, 1238, 1359, -1000, -1000, 1386, 1385, 846, -1000,
	839, 1357, 837, 836, 4856, -1000, -132, 6305, 6305, 6305,
	-1000, -1000, -1000, 1516, 939, 1550, -81, 855, -1000, 313,
	16222, 217, -1000, 1762, 224, -1000, 1827, -1000, 384, -1000,
	1549, 20451, 559, -1000, 639, 201, -1000, 20451, -1000, 1219,
	809, 1359, 1971, -1000, -1000, 1971, -1000, 809, -1000, 809,
	967, 20451, -1000, -81, 313, 20451, 13408, 13408, 13408, 13408,
	-1000, 1803, 1802, -1000, 1793, 1792, 1809, 20451, 13408, 20451,
	-1000, -1000, -1000, 21294, -1000, -1000, -1000, -1000, -1000, 1356,
	1948, 16691, -1000, -1000, -1000, 377, 16222, 1237, 255, -1000,
	-1000, -1000, -1000, -1000, 20451, 20451, 1951, -1000, 484, 1753,
	-1000, -1000, 634, -1000, 1951, -291, 4856, 211, 20451, -291,
	20451, 20451, 4856, -1000, 20451, 2489, 1091, -1000, -1000, -1000,
	1990, 16222, 1219, 797, 857, -1000, 40, -1000, 103, 286,
	1235, -1000, 317, 903, 315, -1000, -1000, 7748, -1000, -1000,
	-1000, -1000, 1359, 6305, 1351, -1000, 383, 383, 1343, -1000,
	1494, 1548, -1000, 1494, 1534, 1494, 383, 383, 1342, -1000,
	1144, 1395, -1000, -1000, 1380, 1316, 6305, 1325, 2907, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1324, -1000, -1000, -1000, 1229, -1000, -1000, -1000, 1083,
	-1000, 1082, -1000, -74, -61, 1359, 1359, -1000, 1880, 1847,
	8706, 1115, -1000, -1000, 1221, -1000, 275, -1000, -1000, -1000,
	330, 31, 1078, 265, -1000, 1274, 20451, -1000, -1000, -1000,
	-1000, -1000, 855, 855, 855, 8706, 252, 516, 621, 13408,
	20451, -1000, 15284, 1323, -1000, 453, 1971, -1000, -1000, 1971,
	1971, 809, -1000, 1115, 275, 590, -1000, 898, 1732, 1737,
	1732, -1000, -1000, -1000, -1000, 1795, -1000, 1794, -1000, -1000,
	590, -1000, 1516, -1000, -1000, 827, 826, -1000, 479, 1319,
	-1000, -1000, -1000, -1000, 1968, 1960, 15753, 1968, -1000, 1318,
	476, -291, -1000, -1000, 458, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1219, -1000, 97, -1000, -1000, -1000,
	-1000, -1000, -1000, -38, -1000, 20451, 1212, 20451, -1000, 1359,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 6305, -1000, -1000, -1000, 1271,
	-1000, -1000, -1000, -1000, 1317, 1315, -295, -57, 1957, 1956,
	220, 20451, 1314, 471, -1000, -1000, -1000, 22051, 513, -1000,
	20451, 965, 434, 283, 434, 963, 1527, -1000, -1000, -1000,
	1211, -25, -1000, -1000, 1210, 1204, 1075, -1000, -1000, 1052,
	745, -2, -1000, -1000, -1000, -1000, -1000, -1000, 1525, 12470,
	12939, 1202, 1312, 20920, 13408, 15284, 566, -1000, 616, -1000,
	-1000, -1000, -1000, -1000, 1971, -1000, -1000, 1965, 20451, 4856,
	-1000, -1000, 6305, 1523, -1000, 6305, -1000, -1000, -1000, -1000,
	-1000, -1000, 1197, -1000, 1191, -1000, -1000, 6305, 6305, -1000,
	-1000, -1000, 458, 453, -1000, -1000, -103, 57, -103, 1232,
	-1000, -1000, -1000, -297, 1190, -1000, 1954, 1189, 1135, -1000,
	1516, 22290, 8706, 1218, -1000, -1000, 20451, 20451, -1000, 20451,
	20451, 283, 6305, -1000, -1000, 185, -1000, -1000, 62, -1000,
	-1000, 1051, 305, -1000, 14815, -1000, -1000, -1000, -1000, -1000,
	-55, 1971, 566, 616, -1000, -1000, 787, -1000, 1930, -1000,
	-1000, 1359, 20451, 1359, 813, 806, 1359, 440, -1000, -76,
	-65, -1000, 1185, -1000, -1000, -299, 1066, -1000, 1184, -62,
	-1000, -1000, 1875, 247, 22229, -1000, 855, 855, 582, 855,
	855, 855, 855, 187, 181, 855, 855, 855, 855, 855,
	855, 855, 855, 855, 855, 855, 855, 855, 855, 1515,
	-1000, -1000, 1218, -1000, -1000, 983, 7748, -1000, -1000, 1178,
	12939, 466, 395, 1514, -1000, 148, 1998, 961, 959, -1000,
	20451, -1000, 1513, 1240, 106, 1501, -1000, 1500, 1499, 20451,
	1223, 278, 1177, -1000, -1000, 54, -1000, -1000, 805, -1000,
	1494, 6305, -1000, -103, 1965, -1000, -1000, 803, -1000, 985,
	-1000, 975, 287, -72, -65, -1000, 1950, -69, 1949, 1945,
	884, -1000, 1492, -1000, -1000, 1942, 220, -1000, 1941, 22290,
	-1000, 1064, 1062, 855, 855, 1057, 1176, 1166, 1165, 855,
	855, 1055, 1160, 21294, 1047, 1043, 1019, 1045, 1158, 498,
	1044, 1040, 1030, 20451, 1488, 1131, -1000, -1000, 3000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1014, 1485, -133, -1000, -1000, 1482, 14815, 150, 150, 14815,
	14815, 14815, 1478, 332, -1000, -39, -1000, -1000, -1000, 14815,
	1853, 1175, -1000, 1930, -1000, 1311, 1298, 1290, 1289, 1476,
	1013, -57, 1940, -1000, 1135, 1939, 1135, 1135, 1146, 20451,
	1135, -1000, 137, -1000, -1000, -1000, 12470, 12470, -1000, -1000,
	-1000, -1000, 1145, 1141, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 207, 20451, 799, -1000,
	879, 1287, 6305, 1456, -232, 14815, 794, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 782, 759, 748, 14815, -1000, -1000,
	-1000, 144, -1000, 143, -1000, -1000, 1853, -1000, -1000, -1000,
	-1000, -1000, 1887, 12001, -79, -1000, 1136, -1000, 1135, -1000,
	-1000, -313, 726, -1000, -1000, 114, 206, 203, -1000, 285,
	-1000, -1000, -1000, -1000, -1000, -1000, 208, 708, -1000, 1131,
	1121, -1000, 1162, -1000, 1723, -1000, 26, 706, -1000, -1000,
	-1000, -1000, 705, -1000, -1000, 855, 1120, 88, -1000, -1000,
	-1000, -1000, 20451, -1000, 697, -1000, -1000, -1000, 583, -1000,
	-1000, -1000, -1000, -1000, -1000, 20451, 109, 1011, 7748, 1455,
	7748, 1454, 127, 1453, -1000, -1000, -1000, -1000, -1000, 332,
	-1000, 1718, 1483, 1976, -1000, -1000, -1000, -1000, 143, 143,
	143, 143, 27, 1004, -1000, 1126, 439, -1000, 822, -1000,
	14346, 20451, -1000, 1443, 1933, -1000, 2835, 20451, 1717, 20451,
	1441, 819, 7748, -1000, -1000, 1995, -1000, 1985, 425, 425,
	-1000, -1000, -1000, 20451, 4375, -1000, 435, -1000, 245, 117,
	-1000, 696, -1000, 654, 20451, 999, 1699, -1000, -1000, -1000,
	1036, 154, -1000, -1000, -1000, 1359, 20451, 580, -1000, 1226,
	100, -1000, -1000, 569, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 245, 1811, -1000, 998, -1000, -1000, 22211, 362, -1000,
	-1000, 22211, 105, -1000, 239, 1414, -1000, -1000, 568, -1000,
	1147, 413, 6305, -1000, 105, 22290, -1000, 6305, 563, -1000,
	22290, 554, -1000, -1000,
}

var yyPgo = [...]int{
	0, 116, 2345, 184, 127, 123, 183, 2344, 1908, 1907,
	2343, 2342, 2341, 2338, 2337, 2336, 2335, 2334, 2333, 2331,
	2330, 2329, 2328, 2327, 2325, 2324, 2323, 178, 2322, 2320,
	2319, 2318, 2316, 2315, 2314, 2312, 2311, 2310, 2307, 2306,
	2305, 2302, 2299, 2298, 120, 2297, 1902, 2296, 2294, 2293,
	2292, 2291, 164, 2290, 2289, 2287, 2286, 2285, 2284, 2283,
	2282, 2281, 2278, 2277, 2275, 2274, 2273, 2272, 2269, 2255,
	2253, 176, 177, 56, 2249, 46, 47, 138, 204, 61,
	186, 190, 136, 77, 119, 167, 113, 2247, 2246, 109,
	2245, 24, 133, 2244, 108, 44, 28, 189, 100, 54,
	64, 87, 2243, 2241, 83, 2240, 2236, 89, 2232, 63,
	2231, 67, 41, 85, 27, 2229, 2228, 2223, 66, 2221,
	2220, 2219, 2218, 131, 2217, 88, 53, 2215, 2214, 2213,
	2207, 2204, 33, 2199, 50, 2198, 2196, 2195, 2193, 2192,
	2191, 2189, 11, 15, 18, 2188, 16, 3, 2187, 158,
	59, 82, 102, 2186, 367, 2185, 2184, 2182, 110, 2181,
	587, 2180, 2179, 2178, 2177, 2176, 9, 2175, 150, 2173,
	2172, 2168, 57, 143, 147, 2167, 2165, 97, 45, 51,
	95, 2163, 2162, 75, 169, 17, 42, 0, 149, 39,
	2161, 2160, 2158, 197, 146, 144, 173, 91, 185, 115,
	2156, 2155, 52, 2154, 112, 2152, 99, 79, 2151, 132,
	2149, 35, 126, 2148, 157, 2146, 196, 2, 106, 26,
	241, 2145, 2144, 2143, 130, 2140, 2139, 74, 122, 2138,
	2137, 2134, 25, 2132, 29, 20, 2131, 68, 2115, 180,
	2107, 129, 93, 139, 125, 105, 163, 171, 65, 107,
	921, 104, 76, 19, 2106, 165, 2105, 191, 219, 2104,
	137, 2103, 179, 341, 159, 2102, 135, 8, 2100, 2099,
	7, 2098, 22, 2097, 2096, 2095, 2094, 6, 2093, 2092,
	2090, 1, 4, 2089, 5, 161, 43, 90, 2088, 92,
	187, 2086, 2085, 2084, 2083, 2080, 233, 2078, 2075, 2074,
	2073, 2072, 2071, 2070, 80, 31, 2069, 2067, 2066, 2065,
	69, 101, 2064, 294, 155, 2063, 36, 2062, 2059, 23,
	2054, 30, 2053, 2052, 2051, 13, 134, 2050, 2049, 14,
	2048, 2045, 10, 12, 2044, 2043, 60, 49, 34, 70,
	78, 2042, 21, 2041, 94, 2040, 2039, 175, 2037, 151,
	2036, 117, 168, 181, 2035, 160, 2034, 2032, 2031, 2030,
	2029, 2028, 2027, 1014, 2026, 2024, 174, 55, 162, 2023,
	2022, 142, 2021, 114, 86, 84, 145, 2020, 140, 2018,
	2017, 172, 141, 2016, 2013,
}

//line mysql_sql.y:7656
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 379, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 61, 60,
	335, 335, 334, 334, 333, 333, 332, 332, 332, 331,
	331, 331, 330, 330, 329, 329, 328, 328, 326, 326,
	327, 325, 324, 324, 324, 322, 322, 320, 320, 321,
	321, 315, 315, 318, 318, 316, 316, 316, 316, 319,
	314, 314, 314, 313, 313, 59, 59, 59, 252, 252,
	58, 58, 266, 266, 266, 266, 266, 264, 264, 264,
	264, 264, 264, 263, 263, 262, 262, 267, 267, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 53,
	53, 53, 53, 56, 56, 56, 57, 261, 261, 261,
	54, 55, 55, 251, 251, 256, 256, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 260,
	260, 260, 258, 258, 257, 257, 259, 259, 47, 47,
	47, 50, 49, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 48, 48, 48, 48, 48, 48, 45, 45,
	45, 45, 45, 44, 44, 46, 46, 249, 249, 248,
	64, 64, 64, 64, 64, 64, 64, 63, 63, 66,
	66, 65, 52, 52, 52, 52, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 358, 358, 358, 360, 360,
	191, 192, 380, 190, 190, 190, 354, 354, 355, 356,
	357, 357, 357, 62, 7, 7, 42, 43, 378, 378,
	296, 296, 204, 204, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	299, 300, 200, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 33, 33, 238, 238,
	32, 381, 381, 174, 174, 31, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 41, 309, 309, 383, 383,
	383, 39, 40, 295, 295, 295, 37, 36, 35, 34,
	34, 30, 30, 29, 29, 197, 197, 199, 199, 195,
	382, 382, 272, 272, 198, 198, 28, 28, 28, 196,
	196, 173, 194, 194, 194, 6, 10, 10, 10, 10,
	10, 10, 10, 10, 16, 18, 246, 246, 243, 17,
	13, 12, 15, 11, 14, 5, 5, 5, 5, 8,
	8, 9, 84, 84, 113, 113, 367, 367, 363, 363,
	364, 364, 364, 365, 365, 366, 366, 4, 303, 303,
	303, 303, 303, 303, 343, 343, 343, 344, 103, 103,
	98, 98, 304, 304, 218, 345, 345, 312, 312, 311,
	311, 310, 310, 101, 101, 102, 102, 88, 88, 72,
	72, 317, 317, 317, 317, 323, 323, 293, 293, 139,
	139, 169, 169, 170, 170, 76, 76, 77, 77, 77,
	77, 77, 77, 351, 351, 353, 353, 352, 100, 100,
	96, 96, 97, 97, 97, 95, 95, 94, 93, 93,
	92, 91, 91, 91, 79, 79, 78, 78, 78, 78,
	78, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 80, 80, 359, 359, 359, 297, 297,
	297, 302, 302, 151, 151, 152, 152, 150, 150, 81,
	81, 82, 82, 82, 82, 149, 149, 148, 83, 83,
	89, 85, 85, 87, 87, 87, 87, 159, 159, 158,
	158, 158, 158, 69, 70, 70, 71, 106, 106, 157,
	156, 156, 156, 105, 105, 104, 104, 99, 99, 86,
	86, 86, 155, 90, 90, 90, 90, 90, 90, 90,
	90, 384, 384, 153, 183, 183, 183, 189, 189, 182,
	182, 182, 182, 182, 193, 188, 188, 184, 184, 185,
	185, 185, 3, 3, 3, 3, 22, 22, 22, 22,
	26, 26, 361, 361, 19, 368, 371, 369, 372, 372,
	372, 373, 373, 373, 374, 374, 20, 370, 375, 375,
	375, 247, 247, 244, 245, 245, 242, 241, 241, 241,
	377, 377, 376, 376, 376, 186, 186, 21, 237, 237,
	239, 240, 240, 231, 231, 231, 231, 25, 235, 235,
	236, 236, 236, 236, 236, 232, 232, 234, 234, 230,
	230, 230, 230, 230, 24, 229, 229, 227, 227, 225,
	225, 226, 226, 224, 224, 224, 228, 228, 23, 23,
	74, 73, 73, 73, 75, 298, 298, 268, 268, 271,
	271, 278, 278, 279, 279, 277, 277, 284, 284, 283,
	283, 282, 282, 281, 281, 280, 280, 280, 280, 275,
	275, 274, 274, 269, 269, 269, 269, 269, 270, 270,
	273, 273, 276, 276, 130, 130, 131, 131, 131, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 341, 341,
	342, 133, 133, 133, 137, 137, 137, 137, 137, 137,
	132, 132, 134, 134, 114, 114, 112, 112, 107, 107,
	108, 108, 109, 109, 110, 110, 111, 111, 111, 111,
	111, 111, 254, 254, 339, 339, 340, 340, 336, 336,
	336, 338, 338, 338, 338, 338, 337, 337, 115, 167,
	167, 167, 187, 187, 187, 166, 166, 166, 129, 129,
	128, 128, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 253, 253, 201, 201,
	202, 202, 146, 145, 145, 145, 145, 145, 143, 144,
	142, 142, 142, 142, 142, 141, 141, 140, 140, 140,
	233, 233, 138, 138, 136, 136, 136, 135, 135, 135,
	285, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 210, 210, 215, 215, 350,
	350, 349, 116, 116, 116, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 125, 125, 125, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 308, 308, 308, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 165, 362, 362,
	362, 346, 346, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 163, 163, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 219, 219, 220,
	220, 305, 305, 305, 305, 305, 305, 306, 306, 307,
	307, 307, 307, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 208, 160, 160, 160, 221, 216, 216, 217,
	217, 211, 211, 211, 211, 211, 211, 211, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 212, 212,
	214, 214, 223, 223, 223, 222, 222, 222, 222, 222,
	222, 222, 127, 127, 127, 127, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 118, 118, 118, 118,
	122, 122, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 123, 123, 123, 123,
	121, 121, 121, 121, 121, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 67, 68, 68, 120, 168, 168, 286, 286, 289,
	289, 287, 287, 288, 290, 290, 290, 291, 291, 291,
	292, 292, 292, 294, 294, 172, 172, 172, 179, 179,
	171, 171, 180, 180, 181, 181, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 9, 9,
	0, 2, 1, 3, 3, 3, 1, 3, 5, 0,
	2, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 0, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 2,
	4, 3, 1, 1, 1, 1, 2, 3, 4, 7,
	2, 3, 3, 4, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 7, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 5, 0, 2,
	7, 0, 1, 0, 1, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 6,
	7, 4, 4, 7, 8, 0, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	4, 2, 3, 4, 6, 8, 8, 4, 6, 8,
	8, 0, 1, 2, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 11, 0, 1, 7, 1, 4, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 5, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 10, 9,
	2, 2, 6, 10, 5, 0, 1, 0, 6, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 1, 7, 7, 7, 7,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 5, 6, 4, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 5, 4, 4,
	5, 5, 5, 5, 4, 5, 5, 5, 5, 5,
	5, 5, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 5, 4, 6, 6, 7, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 4, 2, 3, 2, 4, 6,
	2, 2, 4, 6, 4, 2, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -379, -2, -1, -3, -4, -5, -6, -51, -63,
	-65, -66, -27, -7, -62, -44, -45, -47, -53, -58,
	-59, -60, -61, -67, -68, -69, -76, -22, -21, -20,
	-19, 12, -8, -9, -351, -10, -190, -191, -192, -380,
	-28, -29, -30, -34, -35, -36, -37, -39, -40, -41,
	-31, -32, -33, -43, -42, 203, -46, 58, -48, -49,
	-50, -54, -55, -56, -57, 317, 323, 375, 384, 500,
	501, 43, -77, -79, -23, -24, -25, -26, 199, 14,
	452, -11, -14, -12, -15, -13, -17, -18, -16, 221,
	220, 37, 283, 284, 321, 219, 200, 13, 132, 133,
	135, 136, 30, -78, 64, 201, -80, 10, 502, -88,
	38, -112, -187, 67, -175, -178, 455, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 299, 449, 238, 262, 265, 272, 132, 151,
	145, 173, 165, 140, 242, 243, 74, 135, 406, 84,
	391, 372, 138, 257, 259, 261, 264, 244, 161, 156,
	256, 240, 500, 154, 245, 39, 246, 178, 247, 248,
	454, 387, 298, 393, 269, 370, 155, 388, 260, 390,
	180, 184, 398, 323, 149, 150, 395, 400, 177, 218,
	42, 451, 230, 401, 182, 176, 172, 409, 273, 271,
	175, 148, 171, 241, 47, 186, 185, 187, 366, 367,
	368, 369, 249, 250, 311, 397, 168, 157, 302, 141,
	22, 404, 225, 392, 324, 251, 266, 274, 181, 183,
	232, 237, 453, 374, 236, 270, 402, 153, 229, 258,
	224, 405, 142, 317, 326, 252, 136, 263, 399, 408,
	46, 339, 147, 139, 215, 133, 234, 239, 253, 254,
	255, 276, 275, 267, 169, 231, 174, 159, 146, 170,
	134, 233, 407, 340, 498, 300, 355, 167, 164, 235,
	208, 403, 394, 137, 359, 341, 162, 277, 495, 496,
	497, 312, 297, 278, 279, 160, 222, 386, 280, 282,
	365, 290, 342, 373, -46, -9, -8, -78, -79, -194,
	23, 370, -52, 371, 203, 64, -187, -5, -4, -44,
	-76, -193, -187, 283, -193, 206, -187, 236, 354, -296,
	211, -263, -237, 237, -262, -239, -265, -240, 31, 199,
	201, 200, 233, 14, 321, 207, 12, 10, 322, 219,
	24, 25, 27, 13, 323, 325, 28, 326, 329, 330,
	331, 41, 334, 335, 226, 67, 70, 244, 244, -217,
	-211, 91, 227, -213, -206, -207, -209, -332, -326, -205,
	64, 116, 117, 124, 92, -208, -285, 35, 94, 459,
	421, -161, -162, -163, -164, -165, -187, -327, -325, 70,
	75, 78, 81, 82, 80, 79, 158, 77, 71, 129,
	-79, 67, -346, 467, -176, 487, 468, 486, -301, -307,
	205, -305, 163, 222, 159, 12, 122, 365, 127, 160,
	464, 483, 490, 461, 462, 456, 457, 458, 460, 469,
	471, 482, -308, 478, 488, 489, 491, 69, 68, 481,
	480, 465, 466, 472, 455, 463, 473, 474, 479, 484,
	485, 492, 305, 84, 306, 307, 413, 301, 308, 211,
	370, 52, 309, 310, 311, 312, 313, 420, 314, 53,
	315, 304, 226, 355, 316, 162, 179, 424, 423, 425,
	417, 414, 412, 415, 416, 418, 419, 475, 476, 477,
	-259, -257, -187, -70, -71, 493, -94, -95, -154, 19,
	6, 7, 8, 9, -298, 299, 355, 236, -231, -229,
	280, 332, 216, 215, 85, 413, 205, -363, -364, 196,
	197, 198, -353, 445, -352, -187, 26, 206, -38, -309,
	-295, 394, 393, -198, 392, 385, 396, 387, 199, 446,
	-172, 342, 373, 232, 410, 411, 319, 374, 398, 399,
	388, 84, 166, 163, 299, 355, -363, 137, 134, -250,
	137, 90, 142, 141, -250, 236, 354, 40, -256, 365,
	-255, -257, 398, 399, 409, 68, 69, 397, -172, 84,
	-95, -154, -94, -77, -79, -351, 299, 355, 236, 207,
	206, 208, 413, 283, -297, -359, 31, -302, 193, 194,
	195, 32, 33, -1, -101, 228, -112, 130, -95, -94,
	-95, -166, -187, 372, 100, -52, -52, 371, -354, -355,
	-356, -358, 203, 371, 370, 130, 15, -193, 62, -112,
	-239, 236, -263, -237, 35, 61, 131, 209, 131, 61,
	64, 319, 299, 355, 320, 413, 206, 332, 208, 236,
	333, 299, 355, 206, 208, 413, 236, 299, 206, 208,
	355, 236, 333, 385, 386, 208, 26, 324, 327, 328,
	386, -313, 409, -313, 131, 90, 87, 88, 89, -211,
	107, -222, 100, 101, 102, 103, 104, 105, 106, 113,
	112, 123, 116, 117, 118, 119, 120, 121, 122, 114,
	115, 110, 91, 108, 109, 93, -79, -211, -217, -209,
	-209, -209, -209, -285, -215, -211, 64, 64, 130, -211,
	64, 64, 64, 64, 64, 64, 64, 64, -306, 64,
	64, -219, -220, 64, 64, 70, 70, 64, 64, 64,
	-209, 70, -220, -220, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 131,
	-118, -122, -119, -121, -120, -124, -123, 163, 164, 127,
	167, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 30, 179, 222, 159, 160, 161, 162, 180, 145,
	165, 450, 188, 146, 189, 147, 190, 148, 191, 149,
	150, 192, 151, 154, 155, 156, 153, 130, -95, 131,
	64, -72, 38, -97, 21, -80, -79, 20, 31, 32,
	31, 32, 31, 32, 31, 32, -361, 206, 445, -227,
	211, -227, -227, 207, -227, 206, -365, 144, 131, -353,
	-100, 64, 23, 234, -197, 108, -383, 207, 395, 42,
	235, 234, -96, -97, -96, 389, 386, -272, 390, 391,
	-198, -197, -197, -198, 206, 208, 413, -381, -382, 15,
	110, 234, -381, 30, 30, -296, -296, -366, 210, 402,
	452, 140, 141, 142, -239, 236, 236, 131, 100, 23,
	-258, 100, 111, -257, -257, -257, -258, -258, -132, 40,
	-186, 127, -187, 70, -132, 40, -96, -80, -79, 65,
	65, -296, -296, -296, -296, -296, -296, -296, -193, -81,
	-82, 118, -211, -187, -81, -303, 43, -76, 64, 30,
	64, -187, -96, -72, -97, 130, 75, 70, -52, 65,
	131, -357, 81, 82, -360, 177, 169, -187, -64, 70,
	-3, -4, -5, -6, -27, -44, -76, -328, -326, 64,
	31, 364, 61, 15, -264, 206, 413, 318, 232, 208,
	299, -262, -246, -243, -241, -186, -239, -242, -241, -267,
	-166, 386, -73, 376, -73, -211, -211, -211, -211, -211,
	80, 91, 297, 81, 82, -206, -223, 31, 278, 279,
	-207, -207, -207, -207, -207, -207, -207, -207, -207, -207,
	-207, -207, -214, -221, -285, 64, 110, 108, 109, 93,
	-209, -207, -207, 65, 131, -350, -349, 95, -211, -211,
	-187, -347, -348, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 309, 304, 310, 308, 301, 316,
	311, 312, 162, 443, 444, 437, 438, 439, 440, 441,
	442, -216, -217, -216, -211, -347, -216, -160, 32, 31,
	-160, -211, -362, 295, 294, 296, -216, 65, 65, 65,
	75, -217, -216, -207, -216, -160, -217, -217, -160, -160,
	-160, -160, 118, -160, -160, -160, -160, -160, -160, -160,
	70, -257, 40, -292, 340, 339, -286, -288, 64, -287,
	64, -287, -286, -286, 64, 64, -286, -289, 64, -289,
	-286, -290, 64, -290, -291, 64, -290, -187, -96, -71,
	-311, -310, -211, 40, 494, -72, -211, -93, -92, -211,
	208, -227, -368, 67, 91, -247, -244, -241, -237, -185,
	67, 68, 69, -187, -227, -366, -352, 34, -99, -187,
	-241, -381, -150, 16, -209, -382, -197, -197, -199, -382,
	-195, -382, 386, -150, -150, -272, -196, -187, -196, -227,
	-174, -173, -187, -174, -368, -247, -85, -83, -86, -87,
	-89, -153, -155, -90, -112, 64, 492, 403, 404, 138,
	141, 140, 31, 364, -261, 364, 31, -237, -255, -251,
	70, 365, -242, -260, 61, 127, -310, -258, -258, -258,
	-260, -260, 126, -72, -368, -246, -237, -187, -114, -112,
	-114, -188, -185, -178, -149, 131, -148, 15, -182, -187,
	34, 70, 130, -149, -304, -218, -345, 493, -103, 65,
	-98, -187, -343, -344, -98, -102, -187, -72, -72, -180,
	-181, -171, -177, -184, -185, -178, 204, 31, 90, 34,
	36, 305, 337, 93, 127, 20, 94, 163, 126, 307,
	421, 306, 199, 56, 423, 425, 424, 414, 412, 357,
	361, 363, 360, 413, 385, 40, 14, 37, 220, 32,
	33, 120, 201, 97, 98, 223, 35, 221, 82, 23,
	59, 15, 17, 18, 308, 356, 211, 210, 110, 376,
	207, 54, 12, 129, 38, 107, 358, 50, 86, 52,
	108, 21, 415, 416, 41, 375, 384, 448, 227, 122,
	309, 310, 57, 91, 364, 80, 61, 87, 19, 55,
	109, 202, 420, 53, 362, 313, 315, 325, 445, 314,
	205, 396, 10, 304, 422, 30, 219, 51, 206, 96,
	209, 81, 226, 6, 85, 13, 58, 62, 417, 418,
	419, 43, 95, 16, 316, 452, 377, 378, 379, 380,
	381, 382, 383, 188, 189, 190, 191, 192, 268, 214,
	212, 216, 217, 493, 494, 193, 194, 294, 296, 166,
	196, 197, 198, 228, 144, 7, 343, 344, 345, 346,
	348, 349, 350, 351, 352, 353, 354, 501, 23, -52,
	-355, 130, 131, -99, -264, -245, -242, -266, 118, 67,
	-252, 131, 452, 503, 68, 209, -377, -376, 356, 65,
	131, -314, 210, 420, 70, 504, -314, 80, 297, 81,
	82, -285, -217, -214, -209, -207, -207, -212, 223, 90,
	-211, -210, -349, 97, -211, 34, 131, 62, 130, 65,
	65, 15, 15, 65, -211, -211, 65, 15, 15, -211,
	65, 65, 65, 62, 65, 131, 65, -211, 65, 65,
	-211, -211, -211, -217, 65, -211, -211, -211, -211, -211,
	-211, -211, 131, -211, -294, 341, 75, 75, -168, 70,
	-168, 75, 75, 75, 131, 65, 70, 131, 22, 131,
	-91, 36, 37, -112, 211, -112, -371, 343, 35, -378,
	131, 40, -376, -230, 62, -225, -226, -224, -228, 40,
	-112, 15, -84, -113, -187, 64, 65, 131, -238, 62,
	-174, -211, -112, -150, -150, -197, -188, -199, -194, -199,
	-195, 130, -173, -371, -378, 30, -156, -157, -158, -159,
	50, 54, 56, 51, 52, 53, 57, 30, 131, -384,
	34, -183, -189, 34, -184, 70, -185, -178, -183, -77,
	-79, 64, 139, 142, 142, 141, 209, 64, 100, -260,
	-260, -260, 40, -186, 61, 131, -150, -82, -83, -85,
	-187, 70, -187, 118, -150, 131, 64, 65, 131, 43,
	130, 131, 100, 65, 131, 130, 372, -187, -326, 65,
	-266, 131, 209, 130, 130, -243, 323, -186, -245, 20,
	452, -166, 38, 70, 38, 65, -212, 90, -209, -206,
	65, 98, -211, 96, -116, -118, 339, 340, -117, -123,
	127, 163, 222, 162, 161, 159, 339, 340, -132, -187,
	-211, -211, 65, 65, -211, -211, 15, -132, -207, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 70, 65, 65, 65, 131, 65, 65, 65, 131,
	65, 131, -310, -317, 390, -211, -211, -92, -100, 91,
	64, -373, 392, 345, -179, 100, -204, -203, 300, 41,
	-299, 365, 351, 352, -244, 236, 61, 289, 290, 291,
	292, -224, -172, 126, 247, 64, -112, -84, -187, 15,
	131, -367, 130, -1, -187, -237, -197, -150, -150, -197,
	-197, -199, -187, -373, -204, -249, -248, -166, -86, -86,
	-86, -86, 50, 50, 50, 55, 50, 55, 50, -158,
	-249, -89, -187, -189, 65, 70, -166, 142, -245, -200,
	70, -251, -112, -112, -152, 17, 130, -152, -218, -312,
	-311, 43, -76, -98, -304, -187, -344, -310, -187, -180,
	-177, -185, -178, 75, 15, -242, -237, 118, 118, 67,
	324, -252, 70, 344, 70, 206, 100, 206, -206, -211,
	65, -125, 150, 149, -125, 65, -286, -287, -286, -289,
	-286, -125, -125, 65, 65, 23, 65, 65, 65, -211,
	65, 65, 65, 70, 75, 75, -323, 382, 377, 379,
	34, 35, -107, -108, -109, -115, -110, -166, -202, -111,
	214, 212, 216, -340, 85, 217, 268, 86, 207, -374,
	74, -369, 70, -375, 74, 346, 129, 302, 40, 347,
	348, 362, 298, 75, 75, 353, -370, 67, -112, -179,
	-179, -179, -107, -101, 62, 130, -83, -113, -187, 118,
	65, -150, -150, -150, -197, -374, -375, -150, 131, 100,
	-105, -104, 61, 62, -106, 61, -104, 50, 50, -150,
	-100, 65, 131, 65, 131, 65, -151, 18, 20, 118,
	-151, 65, -304, -237, -252, 365, -112, 70, -112, -211,
	65, 65, 65, -293, 495, -321, 377, 20, 20, -76,
	-112, 65, 131, -118, -111, -187, 86, -339, -340, -227,
	-339, 86, 64, 70, -372, 356, 70, 70, 75, 40,
	75, 129, 349, -300, 64, -132, -134, -186, 127, 70,
	65, -183, -83, -187, -150, -367, 130, -150, -95, -248,
	-310, -211, 64, -211, 70, 70, -211, -217, -75, -315,
	-272, 505, 131, -75, 65, -139, 496, 70, 20, 70,
	-319, 70, -100, -130, -131, -147, 337, 238, -228, 242,
	74, 243, 372, 244, 207, 246, 247, 248, 218, 249,
	250, 251, 365, 252, 253, 254, 255, 320, 6, 285,
	-109, -129, -128, -126, 80, 91, 40, 337, -127, 74,
	126, 261, 239, 262, -146, -201, 61, 212, 85, 86,
	325, -202, -336, -337, -187, -337, -187, -336, -336, -227,
	-211, 20, 452, 301, 40, 75, 40, 350, -232, -234,
	-166, 64, -74, -73, -150, -150, -96, -99, 65, 131,
	65, 131, -322, 382, -318, -316, 377, 378, 379, 380,
	70, -169, 497, 75, 70, 379, 34, -268, 228, 131,
	-147, -179, -179, -172, 126, -179, -179, -179, -179, 245,
	245, -179, -179, -179, -179, -179, -179, -179, -179, -179,
	-179, -179, -179, -179, -179, 64, -126, 80, -207, 70,
	-134, -135, 40, 260, 256, -136, 40, 240, 241, -138,
	64, 268, 13, 86, 86, -112, 64, 62, 277, 64,
	64, 64, -337, 65, 70, 344, 70, 301, 65, 131,
	-286, -211, -75, -95, 65, 81, 82, 81, 82, -324,
	210, -320, 381, -316, 20, 379, 20, 20, 100, 64,
	20, -76, 20, -147, 75, 75, -179, -179, 75, 70,
	70, 70, -179, -179, 75, 70, -189, 75, 75, 75,
	75, 40, 70, -137, 40, 256, 260, 257, 258, 259,
	75, 40, 75, 40, 75, 40, -187, 64, -341, -342,
	70, 75, 64, -305, -233, 64, -232, -338, 289, 290,
	291, 293, 292, -338, -232, -232, -232, 64, -254, -253,
	269, 91, 365, -235, -234, -91, 65, -96, 65, 65,
	65, 65, -331, 64, 75, -321, 20, -319, 20, -319,
	-319, 70, -170, -187, -319, -269, 270, 271, -270, -276,
	273, -132, -132, 70, 70, -133, 239, -114, 65, 131,
	100, 65, -211, -219, -141, -140, 448, -232, 65, 65,
	65, 65, -232, 269, -236, 218, 74, 452, 287, 288,
	-91, -335, 30, 65, -330, -329, -167, -325, -187, 382,
	383, 70, -319, 505, 65, 131, -274, 274, 64, -272,
	64, -272, 86, 290, 240, 241, 65, -342, 70, 65,
	-145, -143, -144, 61, 388, 266, 267, 65, -235, -235,
	-235, -235, 65, -179, 70, 286, -334, -333, -332, 65,
	131, 130, -187, -271, 275, 75, -207, 64, -207, 64,
	-273, 272, 64, -253, -144, 61, -143, 61, 14, 13,
	-146, 75, -185, 131, 100, -329, -187, -278, 64, 20,
	65, -267, 65, -267, 64, 100, -207, -142, 263, 264,
	30, 141, -142, -333, 40, -211, 130, -279, -277, 228,
	-270, 65, 65, -267, 75, 65, 80, 40, 265, -187,
	65, 131, 67, -275, 276, 65, -277, -280, 43, 75,
	-284, -281, 64, -147, 230, 110, -284, -147, -283, -282,
	275, 231, 64, 65, 131, 67, 227, 64, -217, -282,
	-281, -217, 65, 65,
}

var yyDef = [...]int{
	27, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 592, 593, 594,
	595, 0, 385, 386, 0, 365, 0, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 264, 265, 0, 213, 209, 188, 189,
	190, 149, 150, 151, 152, 270, 0, 0, 0, 0,
	0, 0, 455, -2, 596, 597, 598, 599, -2, 398,
	0, 366, 367, 368, 369, 370, 371, 372, 373, 253,
	254, 255, 250, 251, 252, -2, 0, 398, 202, 0,
	193, 193, 0, 475, 0, 0, 486, 508, 27, 433,
	0, 438, 776, 812, 813, 814, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 214, 387, 388, 475, 475, 236,
	0, 1401, 240, 0, 0, 0, 362, 232, 233, 234,
	235, 0, 584, 0, 229, 0, 208, 1460, 0, 0,
	0, 0, 0, 0, 93, 638, 95, 640, 99, 106,
	0, 0, 111, 112, 115, 116, 117, 118, 119, 0,
	123, 0, 125, 128, 0, 130, 131, 0, 134, 135,
	136, 0, 146, 147, 148, 641, 642, 73, 73, 1161,
	1059, 0, 1066, 1067, 1078, 1087, 883, 884, 885, 886,
	0, 0, 0, 0, 0, 893, 894, 0, 907, 1545,
	0, 900, 901, 902, 903, 904, 36, 48, 49, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1032,
	870, 812, 0, 1553, 0, 1573, 1554, 1572, 0, 1017,
	0, 1007, 0, -2, -2, 0, 0, 1526, 0, -2,
	1550, 1569, 1576, 1547, 1548, 1542, 1543, 1544, 1546, 1555,
	1557, 1568, 0, 1564, 1574, 1575, 0, 50, 51, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1540, 1023, -2, 1025, 1026, 1028, 1029, 1030, 1031,
	-2, 1034, 1035, 1036, -2, -2, 1039, 1040, 1041, 1042,
	1043, 1044, 1047, -2, 1049, -2, 1051, 1019, 1020, 1021,
	1022, 1011, 1012, 1013, 1014, 1015, 1016, -2, -2, -2,
	0, 186, 184, 475, 544, 0, -2, 0, 0, 0,
	491, 494, 497, 500, 602, 667, 667, 667, 0, 667,
	0, 686, 644, 645, 646, 665, 666, 403, 399, 400,
	401, 402, 463, 0, 465, 468, 306, 0, 345, 0,
	0, 470, 470, 0, 354, 345, 345, -2, 0, 316,
	317, 318, 311, 0, 311, 322, 323, 324, 334, 335,
	355, 1185, 0, 0, 270, 270, 405, 203, 204, 192,
	194, 0, 198, 0, 191, 1460, 0, 0, 160, 1526,
	165, 0, 1408, 1474, 1423, 0, 0, 1441, 0, -2,
	470, 0, 476, 0, 475, 0, 270, 270, 270, 270,
	270, 270, 270, 0, 0, 0, 509, 510, 505, 506,
	507, 511, 512, 3, 0, 0, 437, 0, 470, -2,
	0, 237, 815, 0, 0, 241, 242, 0, 0, 256,
	0, 259, 245, 246, 247, 0, 0, 231, 0, 0,
	210, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 103, 100, 107, 110, 120, 127, 0, 139, 141,
	144, 101, 108, 113, 114, 121, 142, 102, 104, 105,
	109, 143, 145, 122, 126, 140, 124, 129, 132, 133,
	138, 0, 74, 0, 0, 0, 0, 0, 0, 1065,
	0, 0, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1059, 0, 889,
	890, 891, 892, 895, 0, 908, 0, 0, 0, 0,
	1057, 1057, 0, 1057, 1053, 1053, 0, 1057, 995, 0,
	0, 997, 1008, 0, 0, 1000, 1001, 1057, 0, 1057,
	1005, 1006, 992, 993, 1053, 0, 0, 1053, 1053, 1053,
	1053, 1053, 1053, 1053, 1053, 1053, 1053, 1053, 0, 0,
	1162, 1180, 1117, 1118, 1119, 1167, 1121, 1171, 1171, 1167,
	1167, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	0, 0, 1160, 1140, 1167, 1169, 1169, 1167, 1164, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1174, 1174, 1177, 1174, 0, 470, 0,
	0, 458, 0, 439, 0, 488, 490, 0, 492, 493,
	495, 496, 498, 499, 501, 502, 0, 667, 603, 0,
	0, 0, 0, 0, 0, 667, 405, 404, 0, 464,
	0, 0, 0, 311, 517, 0, 0, 328, 329, 330,
	345, 345, 336, 471, 337, 338, 347, 0, 352, 353,
	0, 517, 517, 0, 0, 0, 667, 313, 312, 350,
	351, 320, 313, 1186, 1187, 0, 0, 0, 406, 0,
	0, 196, 0, 201, 153, 0, 0, 0, 0, 0,
	0, 182, 183, 0, 0, 0, 0, 0, 173, 176,
	770, 771, 635, 636, 177, 178, 439, 487, 489, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 384, 525,
	519, 521, 579, 36, 525, 407, 425, 409, 0, 414,
	0, 777, 439, 461, 439, 0, 238, 0, 243, 0,
	0, 258, 260, 261, 262, 248, 249, 363, 227, 228,
	220, 221, 222, 223, 224, 225, 226, 230, 46, 0,
	211, 212, 0, 0, 0, 87, 88, 89, 90, 91,
	92, 94, 78, 376, 378, 627, 639, 0, 630, 0,
	97, 137, 70, 0, 70, 1060, 1061, 1062, 1063, 1064,
	1068, 0, 1070, 1072, 1074, 1076, 0, 1092, -2, -2,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 1079, 1090, 1091, 0, 0, 0, 0, 0,
	1088, 1083, 0, 887, 0, 905, 909, 0, 0, 0,
	37, 1052, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 0, 1058, 0, 1059, 0, 0, 0, 1054, 1055,
	0, 0, 0, 958, 959, 960, 0, 1018, 996, 1009,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 1183, 1181, 1182, 1120, 1168, 0, 1145,
	0, 1146, 1147, 1148, 0, 0, 1141, 1142, 0, 1143,
	1144, 1136, 0, 1137, 1138, 0, 1139, 185, 543, 545,
	0, 429, 431, 432, 0, 459, 472, 477, 478, 481,
	0, 0, 0, 605, 0, 268, 621, 0, 637, 659,
	589, 590, 591, -2, 0, 0, 466, 0, 0, 557,
	308, 313, 315, 0, 346, 0, 517, 517, 345, 0,
	347, 0, 347, 341, 342, 0, 356, 359, 357, 0,
	319, 314, 361, 321, 0, 268, 530, 0, 531, 532,
	528, 559, 571, 574, 574, 0, 0, 205, 206, 0,
	0, 200, 154, 155, 0, 157, 158, 159, 166, 161,
	163, 0, 0, 167, 179, 180, 181, 0, 0, 0,
	171, 172, 0, 457, 374, 375, 379, 0, 381, 774,
	382, 383, 585, 586, 517, 0, 526, 0, 522, 580,
	0, 582, 0, 517, 408, 422, 0, 426, 0, 0,
	418, 420, 413, 415, 0, 0, 435, 460, 462, 816,
	0, 1192, -2, 1194, -2, -2, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 0, 244,
	257, 0, 0, 0, 0, 81, 624, 0, 82, 86,
	76, 0, 0, 0, 629, 0, 626, 631, 0, 96,
	0, 0, 71, 72, 681, 0, 0, 1069, 1071, 1073,
	1075, 1077, 0, 1080, 1088, 1084, 0, 1081, 0, 0,
	1060, 0, 910, 0, 0, 0, 0, 0, 0, 945,
	946, 0, 0, 950, 0, 0, 953, 0, 0, 0,
	994, 1010, 998, 0, 1002, 0, 1004, 0, 928, 929,
	0, 0, 0, 0, 934, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 1116, 1184, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 546, 441, 0, 0, 0,
	480, 482, 483, 468, 0, 0, 611, 1188, 668, 272,
	0, 0, 623, 0, 0, 664, -2, 671, 0, 677,
	0, 0, 0, 392, 396, 27, 469, 0, 307, 0,
	345, 518, 517, 331, 332, 517, 348, 345, 349, 345,
	347, 0, 358, 611, 272, 0, 0, 0, 0, 0,
	550, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	572, 561, 575, 0, 577, 578, 587, 588, 573, 0,
	475, 0, 207, 195, 197, 0, 0, 0, 0, 168,
	169, 170, 174, 175, 0, 0, 515, 520, 527, 530,
	581, 583, 37, 523, 515, 425, 427, 0, 0, 425,
	0, 0, 0, 434, 0, 0, 0, 364, 47, 263,
	0, 0, 0, 0, 0, 377, 0, 628, 78, 0,
	0, 98, 0, 0, 0, 1056, 1082, 0, 1089, 1085,
	888, 896, 906, 0, 0, 912, 924, 924, 0, 915,
	1167, 1171, 918, 1167, 1169, 1167, 924, 924, 0, 38,
	0, 0, 951, 952, 0, 0, 0, 0, 0, 927,
	930, 931, 932, 933, 935, 936, 937, 938, 939, 940,
	941, 0, 1173, 1172, 1158, 0, 1159, 1170, 1175, 0,
	1178, 0, 430, 445, 0, 473, 474, 479, 0, 0,
	778, 614, 612, 613, 0, 1189, 618, 273, 274, 275,
	276, 0, 0, 0, 622, 0, 0, 660, 661, 662,
	663, 672, 1188, 1188, 1188, 778, 433, 0, -2, 0,
	0, 394, 0, 0, 558, 309, 517, 325, 339, 517,
	517, 345, 360, 614, 618, 517, 217, 0, 553, 547,
	0, 536, 551, 552, 539, 0, 541, 0, 537, 538,
	517, 529, 468, 576, 562, 0, 0, 199, 156, 0,
	292, 162, 380, 775, 513, 0, 0, 513, 423, 0,
	428, 425, 412, 419, 411, 421, 416, 417, 436, 817,
	1193, 1190, 1191, 239, 0, 625, 78, 83, 84, 85,
	79, 77, 632, 0, 634, 0, 0, 0, 1086, 911,
	897, 913, 925, 926, 914, 898, 916, 917, 919, 920,
	921, 922, 923, 899, 947, 0, 949, 954, 955, 0,
	999, 1003, 957, 1166, 0, 0, 447, 59, 0, 0,
	0, 0, 0, 779, 780, 782, 783, 0, 0, 785,
	840, 0, 794, 667, 794, 0, 0, 796, 797, 604,
	0, 0, 607, 616, 0, 0, 0, 278, 279, 0,
	0, 0, 291, 287, 288, 289, 269, 617, 0, 0,
	0, 0, 0, 574, 0, 0, 517, 393, 396, 397,
	467, 310, 343, 340, 517, 266, 267, 475, 0, 0,
	533, 554, 0, 0, 534, 0, 535, 540, 542, 216,
	560, 563, 0, 567, 0, 164, 503, 0, 0, 524,
	504, 424, 410, 80, 75, 633, 61, 0, 61, 0,
	956, 1176, 1179, 449, 0, 446, 0, 0, 0, 600,
	468, -2, 0, -2, 784, 841, 806, 806, 795, 806,
	806, 667, 0, 615, 606, 0, 619, 620, 0, 280,
	281, 0, 284, 290, 0, 673, 674, 772, 773, 675,
	0, 517, 517, -2, 390, 395, 0, 344, 470, 218,
	219, 555, 0, 548, 0, 0, 514, 516, 29, 55,
	0, 682, 0, 28, 948, 451, 0, 448, 0, 442,
	444, 69, 0, 687, -2, 726, 1188, 1188, 0, 1188,
	1188, 1188, 1188, 0, 0, 1188, 1188, 1188, 1188, 1188,
	1188, 1188, 1188, 1188, 1188, 1188, 1188, 1188, 1188, 0,
	781, 808, -2, 820, 822, 0, 0, 825, 826, 0,
	0, 0, 0, 862, 832, 0, 0, 0, 1104, 1105,
	0, 839, 0, 798, 807, 0, 807, 0, 0, 806,
	0, 0, 0, 277, 282, 0, 285, 286, 0, 655,
	1167, 0, 679, 61, 475, 391, 215, 0, 564, 0,
	568, 0, 52, 57, 62, 63, 0, 0, 0, 0,
	0, 440, 0, 450, 60, 0, 0, 678, 0, 676,
	728, 0, 0, 1188, 1188, 0, 0, 0, 0, 1188,
	1188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 821, 823, 824, 827,
	828, 829, 867, 868, 869, 830, 864, 865, 866, 831,
	0, 0, 0, 1102, 1103, 860, 0, 0, 0, 0,
	0, 0, 0, 792, 608, 0, 610, 283, 648, 0,
	481, 0, 680, 470, 556, 0, 0, 0, 0, 39,
	0, 59, 0, 64, 0, 0, 0, 0, 0, 0,
	0, 601, 722, 727, 729, 730, 0, 0, 733, 734,
	735, 736, 0, 0, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 764, 765, 766, 767, 768, 769,
	749, 750, 751, 752, 753, 754, 761, 0, 0, 758,
	0, 0, 0, 1007, 855, 0, 0, 799, 801, 802,
	803, 804, 805, 800, 0, 0, 0, 0, 791, 793,
	836, 0, 609, 647, 656, 657, 481, 389, 565, 566,
	569, 570, 30, 0, 0, 56, 0, 65, 0, 67,
	68, 0, 0, 453, 443, 711, 0, 0, 717, 0,
	723, 731, 732, 737, 738, 755, 0, 0, 757, 0,
	0, 863, 0, 835, 843, 856, 0, 0, 648, 648,
	648, 648, 0, 837, 649, 1188, 0, 0, 653, 654,
	658, 684, 0, 40, 0, 42, 44, 45, 809, 53,
	54, 58, 66, 683, 452, 0, 689, 0, 0, 0,
	0, 0, 720, 0, 762, 763, 756, 759, 760, 833,
	842, 844, 845, 0, 857, 858, 859, 861, 786, 787,
	788, 789, 0, 0, 651, 0, 31, 32, 0, 41,
	0, 0, 454, 691, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 834, 846, 0, 847, 0, 0, 0,
	790, 650, 652, 0, 0, 43, 810, 688, 0, 722,
	713, 0, 715, 0, 0, 0, 0, 848, 850, 851,
	0, 0, 849, 33, 34, 35, 0, 0, 693, 0,
	709, 714, 716, 0, 721, 719, 852, 854, 853, 811,
	692, 0, 705, 690, 0, 718, 694, -2, 0, 710,
	695, -2, 0, 703, 0, 0, 696, 704, 0, 699,
	0, 0, 0, 698, 0, -2, 706, 0, 0, 700,
	-2, 0, 708, 707,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 121, 113, 3,
	64, 65, 118, 116, 131, 117, 130, 119, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 502,
	101, 100, 102, 3, 503, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 123, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 504, 112, 505, 124,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 93, 94,
	95, 96, 97, 98, 99, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 114, 115, 120, 122, 125, 126,
	127, 128, 129, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:560
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:566
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:596
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:600
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:606
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:618
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:633
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:639
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:643
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:649
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:656
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:665
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:669
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:673
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:686
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:692
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:701
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:712
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:716
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:722
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:726
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:732
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:736
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:742
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:766
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:785
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:789
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:793
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:802
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:810
		{
			yyVAL.str = ""
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:814
		{
			yyVAL.str = yyDollar[3].str
		}
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:819
		{
			yyVAL.str = "\n"
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:823
		{
			yyVAL.str = yyDollar[3].str
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:832
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:856
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:860
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:866
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:872
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:890
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:907
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:930
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:943
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:947
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:953
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:966
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:977
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:990
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:994
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1004
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1017
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1030
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1036
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1042
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1049
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1057
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1066
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1070
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1074
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1078
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1082
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1086
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1093
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1097
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1103
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1110
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1119
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1123
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1129
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1133
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1141
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1145
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1149
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1153
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1157
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1161
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1165
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1169
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1173
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1177
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1181
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1185
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1337
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1344
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1351
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1360
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1390
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1398
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1410
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1414
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1421
		{
			yyVAL.str = yyDollar[3].str
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1427
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1431
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1437
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1454
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1470
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1493
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1530
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1561
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1565
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1569
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1579
		{
			yyVAL.str = yyDollar[1].str
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1586
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1592
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1596
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1607
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1613
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1656
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1660
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1668
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1673
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1684
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1691
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1697
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1704
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1711
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1721
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1728
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1739
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1754
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1760
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1772
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1807
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1813
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1833
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1841
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1849
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1897
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1901
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1907
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1913
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1918
		{
			yyVAL.str = "true"
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1919
		{
			yyVAL.str = "false"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1920
		{
			yyVAL.str = yyDollar[1].str
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1936
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1948
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1963
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1968
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1972
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1981
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2049
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2057
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2063
		{
			yyVAL.item = nil
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2068
		{
			yyVAL.item = nil
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2105
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2111
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2116
		{
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2120
		{
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2125
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2134
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2154
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2158
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2172
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2180
		{
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2182
		{
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2210
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2214
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2218
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2264
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2303
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2308
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2312
		{
			yyVAL.str = yyDollar[2].str
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2318
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2331
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2335
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2341
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2356
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2360
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2369
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2373
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2377
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2414
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2418
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2442
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2506
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2519
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2530
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2534
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2540
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2545
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2552
		{
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2554
		{
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2557
		{
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2566
		{
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2570
		{
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2575
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2584
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2591
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2597
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2605
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2612
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2619
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2642
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2646
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2652
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2661
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2665
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2671
		{
			yyVAL.str = yyDollar[1].str
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2675
		{
			yyVAL.str = yyDollar[3].str
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2681
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2685
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2691
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2696
		{
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2707
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2711
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2727
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2737
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2743
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2747
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2756
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2776
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2783
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2801
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2820
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2833
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2837
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2850
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2854
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2859
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2863
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2870
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2875
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2882
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2896
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2904
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2930
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2934
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2952
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2961
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2967
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2975
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2984
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2990
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2996
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3000
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3011
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3015
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3019
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3030
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3036
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3060
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3210
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3240
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3255
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3259
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3265
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3269
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3273
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3277
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3282
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3290
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3296
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3304
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3308
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3321
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3340
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3359
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3363
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3373
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3377
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3381
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3385
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3391
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3401
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3405
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3411
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3427
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3433
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3437
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3441
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3451
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3467
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3471
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3477
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3491
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3507
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3513
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3526
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3542
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3558
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3574
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3587
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3603
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3619
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3638
		{
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3639
		{
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3643
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3655
		{
			yyVAL.str = ""
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3659
		{
			yyVAL.str = yyDollar[1].str
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3663
		{
			yyVAL.str = yyDollar[2].str
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3672
		{
			yyVAL.str = ""
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3676
		{
			yyVAL.str = yyDollar[1].str
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3680
		{
			yyVAL.str = yyDollar[2].str
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3684
		{
			yyVAL.str = yyDollar[1].str
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3688
		{
			yyVAL.str = yyDollar[2].str
		}
	case 600:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3722
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3743
		{
		}
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3760
		{
			yyVAL.str = yyDollar[1].str
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3766
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3776
		{
			yyVAL.str = yyDollar[1].str
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3782
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3789
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3795
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3803
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3809
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3816
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3824
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3830
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3839
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3851
		{
			yyVAL.str = yyDollar[1].str
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3856
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3862
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3870
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3976
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3980
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3986
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3996
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4000
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4006
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4016
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4020
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4024
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4033
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4039
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4046
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4052
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4065
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4074
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4078
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4084
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4101
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4105
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4109
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4113
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4119
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4142
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4164
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4168
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4172
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4176
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4180
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4186
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4190
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4196
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4201
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4206
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4210
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4214
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4218
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4222
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4246
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4255
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4261
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4265
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4271
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4275
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4294
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4316
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4323
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4330
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4341
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4354
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4365
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4369
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4378
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4392
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4405
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4411
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4415
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4430
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4444
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4450
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4454
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4460
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4467
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4476
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4480
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4489
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4503
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4507
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4517
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4521
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4577
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4587
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4591
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4596
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4600
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4609
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4615
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4619
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4623
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4629
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4633
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4637
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4641
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4645
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4649
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4653
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4665
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4669
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4673
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4677
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4681
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4685
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4689
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4697
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4701
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4705
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4709
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4713
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4717
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4721
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4729
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4733
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4737
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4741
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4748
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4752
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4758
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4763
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4767
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4771
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4777
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4781
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4785
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4789
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4793
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4797
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4815
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4824
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4829
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4835
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4842
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4846
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4852
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4856
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4862
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4872
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4878
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4887
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4896
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4919
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4928
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4946
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4952
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4956
		{
			yyVAL.str = yyDollar[1].str
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4966
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4972
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4978
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4992
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4999
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5005
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5009
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5013
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5024
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5041
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5047
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5051
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5057
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5061
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5065
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5069
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5073
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5077
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5081
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5085
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5089
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5093
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5097
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5101
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5105
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5109
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5124
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5128
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5133
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5137
		{
			yyVAL.str = yyDollar[1].str
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5143
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5147
		{
			yyVAL.str = yyDollar[2].str
		}
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5153
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5165
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5172
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5179
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5186
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5193
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5202
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5208
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5214
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5222
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5226
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5230
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5246
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5250
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5259
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5264
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5268
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5284
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5294
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5302
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5306
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5310
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5314
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5334
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5338
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5344
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5348
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5352
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5356
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5360
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5364
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5368
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5372
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5376
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5384
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5388
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5393
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5401
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5409
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5418
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5422
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5426
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5430
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5434
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5443
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5452
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5458
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5462
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5468
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5478
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5495
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5512
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5538
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5550
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5579
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5594
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5611
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5626
		{
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5632
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5641
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5649
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5657
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5666
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5675
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5684
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5693
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5702
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5711
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5720
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5729
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5738
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5747
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5756
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5772
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5780
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5788
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5796
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5804
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5813
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5821
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5830
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5839
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5847
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5855
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5864
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5874
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5895
		{
			yyVAL.str = yyDollar[1].str
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5931
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5943
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5957
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5965
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5972
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5979
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5991
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5999
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6010
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6019
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6028
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6036
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6046
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6054
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6062
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6076
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6086
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6105
		{
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6107
		{
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6148
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6158
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6162
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6166
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6172
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6181
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6187
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6191
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6198
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6202
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6206
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6218
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6226
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6232
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6236
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6240
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6244
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6248
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6252
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6256
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6260
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6264
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6268
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6300
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6304
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6314
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6320
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6324
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6331
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6335
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6339
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6345
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6349
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6353
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6357
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6361
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6365
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6369
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6375
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6379
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6383
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6387
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6393
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6397
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6410
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6415
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6419
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6423
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6427
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6441
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6445
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6459
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6465
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6476
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6481
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6487
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6499
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6511
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6523
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6536
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6549
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6562
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6575
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6588
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6614
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6627
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6640
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6653
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6668
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6691
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6728
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6776
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6793
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6805
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6820
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6840
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6889
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6902
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6915
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6928
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6940
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6952
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6964
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6976
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6988
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7000
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7012
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7024
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7049
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7062
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7077
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7085
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7094
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7104
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7127
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7132
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7138
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7145
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7149
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7154
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7158
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7164
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7170
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7177
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7184
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7216
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7220
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7224
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7230
		{
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7242
		{
			yyVAL.str = ""
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7246
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
