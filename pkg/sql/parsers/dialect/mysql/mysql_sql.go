// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const ADMIN_NAME = 57671
const RANDOM = 57672
const SUSPEND = 57673
const ATTRIBUTE = 57674
const HISTORY = 57675
const REUSE = 57676
const CURRENT = 57677
const OPTIONAL = 57678
const FAILED_LOGIN_ATTEMPTS = 57679
const PASSWORD_LOCK_TIME = 57680
const UNBOUNDED = 57681
const SECONDARY = 57682
const USER = 57683
const IDENTIFIED = 57684
const CIPHER = 57685
const ISSUER = 57686
const X509 = 57687
const SUBJECT = 57688
const SAN = 57689
const REQUIRE = 57690
const SSL = 57691
const NONE = 57692
const PASSWORD = 57693
const MAX_QUERIES_PER_HOUR = 57694
const MAX_UPDATES_PER_HOUR = 57695
const MAX_CONNECTIONS_PER_HOUR = 57696
const MAX_USER_CONNECTIONS = 57697
const FORMAT = 57698
const VERBOSE = 57699
const CONNECTION = 57700
const TRIGGERS = 57701
const PROFILES = 57702
const LOAD = 57703
const INFILE = 57704
const TERMINATED = 57705
const OPTIONALLY = 57706
const ENCLOSED = 57707
const ESCAPED = 57708
const STARTING = 57709
const LINES = 57710
const ROWS = 57711
const IMPORT = 57712
const DATABASES = 57713
const TABLES = 57714
const EXTENDED = 57715
const FULL = 57716
const PROCESSLIST = 57717
const FIELDS = 57718
const COLUMNS = 57719
const OPEN = 57720
const ERRORS = 57721
const WARNINGS = 57722
const INDEXES = 57723
const SCHEMAS = 57724
const NAMES = 57725
const GLOBAL = 57726
const SESSION = 57727
const ISOLATION = 57728
const LEVEL = 57729
const READ = 57730
const WRITE = 57731
const ONLY = 57732
const REPEATABLE = 57733
const COMMITTED = 57734
const UNCOMMITTED = 57735
const SERIALIZABLE = 57736
const LOCAL = 57737
const EVENTS = 57738
const PLUGINS = 57739
const CURRENT_TIMESTAMP = 57740
const DATABASE = 57741
const CURRENT_TIME = 57742
const LOCALTIME = 57743
const LOCALTIMESTAMP = 57744
const UTC_DATE = 57745
const UTC_TIME = 57746
const UTC_TIMESTAMP = 57747
const REPLACE = 57748
const CONVERT = 57749
const SEPARATOR = 57750
const CURRENT_DATE = 57751
const CURRENT_USER = 57752
const CURRENT_ROLE = 57753
const SECOND_MICROSECOND = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const HOUR_MICROSECOND = 57757
const HOUR_SECOND = 57758
const HOUR_MINUTE = 57759
const DAY_MICROSECOND = 57760
const DAY_SECOND = 57761
const DAY_MINUTE = 57762
const DAY_HOUR = 57763
const YEAR_MONTH = 57764
const SQL_TSI_HOUR = 57765
const SQL_TSI_DAY = 57766
const SQL_TSI_WEEK = 57767
const SQL_TSI_MONTH = 57768
const SQL_TSI_QUARTER = 57769
const SQL_TSI_YEAR = 57770
const SQL_TSI_SECOND = 57771
const SQL_TSI_MINUTE = 57772
const RECURSIVE = 57773
const CONFIG = 57774
const DRAINER = 57775
const MATCH = 57776
const AGAINST = 57777
const BOOLEAN = 57778
const LANGUAGE = 57779
const WITH = 57780
const QUERY = 57781
const EXPANSION = 57782
const ADDDATE = 57783
const BIT_AND = 57784
const BIT_OR = 57785
const BIT_XOR = 57786
const CAST = 57787
const COUNT = 57788
const APPROX_COUNT_DISTINCT = 57789
const APPROX_PERCENTILE = 57790
const CURDATE = 57791
const CURTIME = 57792
const DATE_ADD = 57793
const DATE_SUB = 57794
const EXTRACT = 57795
const GROUP_CONCAT = 57796
const MAX = 57797
const MID = 57798
const MIN = 57799
const NOW = 57800
const POSITION = 57801
const SESSION_USER = 57802
const STD = 57803
const STDDEV = 57804
const STDDEV_POP = 57805
const STDDEV_SAMP = 57806
const SUBDATE = 57807
const SUBSTR = 57808
const SUBSTRING = 57809
const SUM = 57810
const SYSDATE = 57811
const SYSTEM_USER = 57812
const TRANSLATE = 57813
const TRIM = 57814
const VARIANCE = 57815
const VAR_POP = 57816
const VAR_SAMP = 57817
const AVG = 57818
const JSON_EXTRACT = 57819
const UNNEST = 57820
const ROW = 57821
const OUTFILE = 57822
const HEADER = 57823
const MAX_FILE_SIZE = 57824
const FORCE_QUOTE = 57825
const UNUSED = 57826
const BINDINGS = 57827
const DO = 57828
const DECLARE = 57829

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7673

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 73,
	21, 475,
	-2, 456,
	-1, 78,
	210, 646,
	-2, 688,
	-1, 95,
	42, 326,
	210, 326,
	237, 333,
	238, 333,
	398, 326,
	-2, 354,
	-1, 443,
	67, 1030,
	-2, 1528,
	-1, 444,
	67, 1048,
	-2, 1499,
	-1, 449,
	67, 1049,
	-2, 1527,
	-1, 469,
	67, 964,
	-2, 1573,
	-1, 470,
	67, 965,
	-2, 1572,
	-1, 471,
	67, 1536,
	-2, 1557,
	-1, 472,
	67, 1537,
	-2, 1558,
	-1, 473,
	67, 1538,
	-2, 1564,
	-1, 474,
	67, 1539,
	-2, 1547,
	-1, 475,
	67, 1540,
	-2, 1555,
	-1, 476,
	67, 1541,
	-2, 1565,
	-1, 477,
	67, 1542,
	-2, 1566,
	-1, 478,
	67, 1543,
	-2, 1571,
	-1, 479,
	67, 1544,
	-2, 1576,
	-1, 480,
	67, 1545,
	-2, 1577,
	-1, 483,
	67, 1027,
	-2, 1381,
	-1, 490,
	67, 1036,
	-2, 1407,
	-1, 494,
	67, 1040,
	-2, 1446,
	-1, 495,
	67, 1041,
	-2, 1523,
	-1, 503,
	67, 1051,
	-2, 1508,
	-1, 505,
	67, 1053,
	-2, 1518,
	-1, 517,
	67, 945,
	-2, 1567,
	-1, 518,
	67, 946,
	-2, 1568,
	-1, 519,
	67, 947,
	-2, 1569,
	-1, 526,
	21, 476,
	-2, 439,
	-1, 567,
	393, 354,
	394, 354,
	-2, 327,
	-1, 609,
	103, 1381,
	114, 1381,
	133, 1381,
	-2, 1188,
	-1, 639,
	21, 476,
	-2, 439,
	-1, 736,
	21, 475,
	-2, 873,
	-1, 1028,
	67, 1096,
	-2, 1525,
	-1, 1029,
	67, 1097,
	-2, 1526,
	-1, 1183,
	1, 672,
	68, 672,
	505, 672,
	-2, 679,
	-1, 1292,
	133, 1198,
	-2, 1196,
	-1, 1294,
	133, 590,
	-2, 1193,
	-1, 1295,
	133, 591,
	-2, 1194,
	-1, 1579,
	1, 673,
	68, 673,
	505, 673,
	-2, 679,
	-1, 1783,
	65, 396,
	134, 396,
	-2, 779,
	-1, 1998,
	87, 679,
	129, 679,
	166, 679,
	169, 679,
	-2, 727,
	-1, 2000,
	271, 841,
	-2, 821,
	-1, 2030,
	65, 396,
	134, 396,
	-2, 780,
	-1, 2061,
	87, 679,
	129, 679,
	166, 679,
	169, 679,
	-2, 728,
	-1, 2089,
	271, 841,
	-2, 822,
	-1, 2474,
	68, 700,
	134, 700,
	-2, 679,
	-1, 2478,
	68, 700,
	134, 700,
	-2, 679,
	-1, 2492,
	68, 704,
	134, 704,
	-2, 679,
	-1, 2497,
	68, 705,
	134, 705,
	-2, 679,
}

const yyPrivate = 57344

const yyLast = 23162

var yyAct = [...]int{
	416, 2478, 1092, 2480, 2486, 2477, 2455, 2325, 1009, 2127,
	397, 2444, 2404, 418, 2362, 2388, 2101, 1629, 2389, 2296,
	2300, 2276, 2047, 2057, 1563, 2125, 761, 1258, 882, 2126,
	1992, 441, 112, 928, 1224, 390, 2142, 336, 342, 1625,
	342, 2284, 1005, 340, 26, 115, 2045, 2023, 2110, 1905,
	1188, 1759, 1012, 2090, 2109, 1786, 527, 608, 346, 1136,
	1901, 430, 73, 1801, 1217, 1910, 111, 790, 1246, 870,
	2004, 522, 389, 1624, 859, 1906, 1274, 1192, 352, 395,
	1473, 555, 1973, 1958, 1920, 1586, 1916, 1899, 634, 1147,
	1866, 874, 1469, 1139, 1283, 1289, 328, 1160, 73, 1284,
	1292, 394, 1829, 522, 1239, 1468, 612, 1220, 1218, 1800,
	1756, 112, 1275, 1611, 3, 1761, 2065, 615, 34, 1580,
	1198, 1168, 1585, 339, 15, 1003, 1008, 337, 6, 396,
	1500, 1176, 796, 950, 1470, 1243, 338, 5, 72, 1572,
	1199, 1569, 1211, 1200, 1261, 636, 329, 1210, 1480, 994,
	1551, 1056, 26, 570, 34, 1484, 406, 1042, 398, 649,
	610, 1627, 1264, 1002, 332, 600, 614, 1172, 1652, 1206,
	73, 1175, 897, 554, 907, 524, 1061, 355, 354, 920,
	526, 841, 12, 7, 1151, 4, 883, 563, 2049, 2370,
	949, 552, 601, 1487, 1477, 103, 1091, 108, 341, 2149,
	2053, 1991, 1164, 1277, 525, 2353, 2118, 107, 106, 107,
	107, 1082, 31, 97, 79, 668, 1674, 107, 107, 31,
	97, 79, 1474, 633, 107, 2343, 34, 909, 857, 1682,
	327, 1485, 15, 349, 762, 702, 6, 107, 344, 31,
	97, 79, 2377, 613, 959, 5, 512, 544, 511, 513,
	514, 1747, 515, 516, 1836, 1758, 894, 580, 895, 995,
	956, 999, 879, 521, 104, 1202, 104, 104, 1227, 1228,
	2375, 888, 889, 979, 104, 104, 1011, 910, 695, 886,
	700, 958, 885, 888, 889, 998, 2392, 2393, 2140, 620,
	619, 621, 701, 1892, 104, 2366, 2367, 2229, 676, 683,
	678, 684, 1757, 2143, 2144, 2145, 2146, 1893, 2232, 1894,
	2152, 1993, 1013, 1669, 643, 1240, 2299, 1764, 1982, 618,
	2012, 1481, 1931, 1929, 2123, 584, 2019, 1921, 679, 686,
	642, 1570, 2211, 652, 351, 1548, 1232, 2107, 990, 641,
	1855, 1857, 1135, 1134, 342, 2214, 112, 1236, 697, 2352,
	1078, 1679, 1000, 1075, 698, 699, 671, 1077, 1074, 1076,
	1080, 1081, 2120, 2379, 528, 1079, 623, 546, 1925, 343,
	2471, 997, 1926, 1927, 2402, 2205, 2487, 543, 542, 2411,
	659, 585, 616, 2374, 638, 640, 385, 1928, 2327, 386,
	2418, 672, 681, 2350, 2465, 73, 73, 614, 537, 2447,
	2198, 2167, 78, 738, 105, 652, 2323, 2324, 2391, 2327,
	2166, 388, 674, 387, 2298, 1020, 1023, 1024, 2355, 2356,
	2333, 1770, 95, 916, 677, 680, 1021, 709, 663, 915,
	877, 1490, 1492, 1493, 661, 639, 737, 2482, 617, 1911,
	1914, 1486, 540, 2193, 745, 2381, 2382, 673, 682, 881,
	880, 34, 34, 1097, 901, 693, 694, 2488, 873, 2456,
	1923, 535, 736, 896, 2155, 749, 996, 858, 611, 2285,
	2286, 2287, 2289, 2288, 613, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1085, 1086, 1087, 1088,
	1089, 1090, 1083, 1084, 541, 635, 622, 2189, 645, 646,
	654, 653, 2494, 2261, 1501, 675, 685, 1772, 1773, 1774,
	1775, 860, 350, 2448, 2227, 908, 581, 536, 1675, 1914,
	1639, 1478, 1170, 668, 863, 660, 688, 1862, 689, 867,
	1860, 739, 740, 741, 742, 865, 1475, 1475, 345, 613,
	1868, 1867, 657, 1475, 1822, 626, 631, 632, 549, 550,
	551, 1638, 1637, 1636, 555, 913, 691, 2481, 1778, 911,
	912, 1915, 2048, 1230, 743, 1231, 1908, 2380, 888, 889,
	1909, 1912, 654, 653, 1635, 545, 588, 1229, 770, 1763,
	838, 647, 587, 2354, 529, 2430, 887, 704, 668, 1193,
	846, 884, 2297, 2500, 1658, 583, 888, 889, 582, 1922,
	1932, 667, 1999, 522, 522, 522, 2212, 1941, 932, 932,
	1241, 861, 862, 1620, 864, 1858, 1557, 1193, 878, 687,
	1526, 1674, 1913, 1525, 342, 953, 953, 1488, 1621, 1476,
	1767, 1768, 1022, 1924, 1561, 2445, 2446, 2124, 961, 936,
	1915, 2119, 934, 1664, 1766, 1648, 2194, 2195, 1491, 581,
	930, 930, 80, 692, 80, 80, 977, 891, 892, 704,
	952, 952, 80, 80, 1683, 2493, 2499, 962, 932, 80,
	932, 642, 1233, 938, 991, 690, 1785, 328, 957, 1779,
	1010, 703, 80, 1235, 662, 772, 773, 591, 2490, 704,
	1474, 2161, 611, 972, 973, 2472, 73, 2467, 2459, 839,
	986, 1562, 706, 707, 708, 705, 2458, 1621, 1545, 73,
	628, 629, 630, 898, 843, 898, 2191, 1621, 73, 1465,
	2190, 526, 2262, 2264, 2265, 2266, 2263, 868, 583, 1054,
	1784, 582, 704, 917, 590, 1955, 1574, 845, 593, 592,
	1015, 1016, 1017, 1018, 1019, 869, 1560, 902, 2453, 1060,
	2408, 2033, 890, 2018, 2491, 893, 1014, 2406, 2399, 2394,
	2383, 1483, 1007, 2468, 1483, 34, 2371, 1111, 2348, 2347,
	2346, 2345, 1483, 914, 34, 2335, 1942, 992, 1116, 1117,
	985, 976, 1058, 1059, 982, 926, 927, 1094, 1831, 975,
	522, 2221, 1101, 981, 1004, 923, 924, 925, 2215, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 327, 968, 1025, 1051, 1052, 954, 988, 905, 906,
	937, 963, 948, 2407, 2216, 2216, 1648, 964, 2137, 1946,
	1573, 2135, 2372, 1970, 2216, 2216, 2216, 2216, 1157, 984,
	983, 2336, 980, 526, 1968, 1001, 1006, 666, 1113, 1785,
	941, 942, 943, 944, 945, 946, 947, 1590, 1743, 1142,
	1143, 1741, 932, 1050, 2216, 1183, 1787, 1158, 1739, 555,
	1737, 1726, 1189, 932, 1146, 1677, 1162, 1150, 1688, 1267,
	1166, 1179, 993, 1169, 1676, 1672, 1510, 1668, 1044, 1663,
	1604, 1666, 1141, 1252, 2138, 1207, 1207, 2136, 1212, 1971,
	1511, 1660, 1589, 1212, 1464, 665, 1149, 932, 112, 1161,
	1969, 706, 707, 708, 705, 1272, 1205, 965, 522, 1558,
	932, 1532, 837, 1531, 1744, 1482, 969, 1742, 748, 1095,
	655, 637, 1171, 721, 1738, 1854, 1738, 704, 875, 1852,
	1184, 1178, 2442, 932, 704, 1257, 112, 112, 1093, 1472,
	1096, 1590, 919, 1269, 1106, 1509, 1162, 1667, 899, 1281,
	1281, 1286, 1162, 1162, 1112, 1262, 1114, 1661, 1590, 1203,
	1204, 1209, 1196, 1197, 1260, 666, 1099, 1098, 2431, 1760,
	1259, 1259, 1131, 1294, 2337, 1557, 1853, 704, 1177, 704,
	1189, 1483, 970, 1263, 932, 1237, 921, 2235, 1265, 1190,
	1471, 668, 1956, 1861, 1665, 1194, 1641, 922, 644, 589,
	1694, 1295, 1242, 1057, 898, 1159, 1057, 1195, 1506, 1153,
	614, 1156, 1256, 705, 1520, 1165, 1754, 1174, 1201, 708,
	705, 73, 918, 1177, 724, 725, 726, 727, 728, 721,
	1466, 1185, 1186, 547, 1049, 2201, 1191, 2200, 1495, 2008,
	1213, 2003, 2464, 1880, 2224, 2225, 900, 2184, 1280, 1047,
	1048, 1046, 1250, 1251, 2476, 1208, 1122, 2222, 2223, 1004,
	2461, 2428, 1719, 1214, 2272, 1109, 1216, 1519, 1215, 706,
	707, 708, 705, 1238, 2412, 1110, 2311, 34, 1696, 2278,
	1503, 2386, 2256, 1507, 2270, 2463, 2255, 613, 1879, 706,
	707, 708, 705, 1247, 1248, 1249, 1255, 736, 1917, 1254,
	2254, 594, 2271, 706, 707, 708, 705, 1273, 1253, 2268,
	706, 707, 708, 705, 1536, 1564, 1565, 1293, 1498, 1499,
	1463, 2258, 2269, 1517, 1462, 2121, 1518, 1514, 1522, 2251,
	2016, 586, 1467, 2245, 1287, 2242, 1288, 706, 707, 708,
	705, 1530, 2241, 2150, 1533, 1534, 1535, 2267, 2015, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 2303, 2401, 1546, 2257,
	1489, 112, 112, 2122, 1930, 2210, 2385, 1497, 2017, 706,
	707, 708, 705, 1494, 613, 112, 1587, 1890, 706, 707,
	708, 705, 1212, 1508, 1889, 1848, 112, 706, 707, 708,
	705, 1556, 336, 1044, 1496, 1566, 1568, 1505, 1555, 1100,
	1212, 1554, 706, 707, 708, 705, 1550, 1262, 1549, 1583,
	722, 723, 724, 725, 726, 727, 728, 721, 1115, 1594,
	1595, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 966, 2277, 2058, 1263, 1180, 1181, 1182, 706,
	707, 708, 705, 932, 720, 719, 729, 730, 722, 723,
	724, 725, 726, 727, 728, 721, 953, 2368, 112, 1630,
	1630, 1653, 2331, 1655, 1596, 1597, 1703, 706, 707, 708,
	705, 2330, 2318, 1162, 1162, 1162, 811, 1633, 385, 2259,
	1598, 386, 2252, 2248, 2247, 1646, 1553, 2246, 1631, 2213,
	1581, 952, 836, 833, 834, 835, 2051, 2186, 1708, 2151,
	1707, 1706, 1704, 712, 713, 714, 715, 716, 717, 718,
	710, 1600, 2147, 1602, 2056, 2054, 1575, 2042, 706, 707,
	708, 705, 1651, 2041, 2026, 1987, 2014, 2013, 2010, 1593,
	2492, 1984, 1649, 1883, 1599, 1919, 1201, 1888, 1601, 1603,
	1859, 1657, 1605, 1825, 1882, 1607, 1606, 706, 707, 708,
	705, 1734, 1686, 1559, 1632, 706, 707, 708, 705, 1881,
	1552, 1705, 1130, 1733, 2469, 770, 706, 707, 708, 705,
	468, 467, 1934, 1642, 1643, 1644, 799, 967, 771, 766,
	789, 706, 707, 708, 705, 706, 707, 708, 705, 1650,
	765, 1173, 2338, 2308, 819, 823, 825, 827, 829, 830,
	832, 2307, 836, 833, 834, 835, 2306, 2305, 814, 815,
	816, 817, 797, 798, 820, 2027, 800, 1998, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 812, 818,
	1989, 1988, 1978, 1972, 1732, 1947, 1887, 822, 824, 826,
	828, 831, 720, 719, 729, 730, 722, 723, 724, 725,
	726, 727, 728, 721, 1885, 1670, 706, 707, 708, 705,
	1878, 1528, 1870, 1865, 1819, 932, 1740, 932, 732, 932,
	735, 813, 2462, 1736, 642, 1735, 1537, 1529, 1709, 1710,
	1527, 1731, 1524, 1684, 1523, 733, 734, 731, 1730, 720,
	719, 729, 730, 722, 723, 724, 725, 726, 727, 728,
	721, 932, 1712, 706, 707, 708, 705, 1516, 1513, 1680,
	706, 707, 708, 705, 1729, 1512, 1108, 932, 1107, 720,
	719, 729, 730, 722, 723, 724, 725, 726, 727, 728,
	721, 1728, 1695, 939, 1711, 2489, 706, 707, 708, 705,
	1713, 1714, 2441, 930, 2204, 1727, 1717, 1718, 2435, 2419,
	1720, 2416, 2414, 706, 707, 708, 705, 763, 107, 930,
	107, 97, 79, 2310, 932, 2294, 1698, 706, 707, 708,
	705, 2282, 2279, 2274, 1681, 1783, 2236, 1138, 2208, 2207,
	2206, 1789, 1725, 1162, 2203, 2197, 1748, 1749, 1169, 2182,
	1678, 1004, 1673, 871, 1692, 1797, 2039, 2021, 1721, 642,
	112, 112, 112, 112, 706, 707, 708, 705, 1802, 1781,
	2009, 642, 112, 1817, 1671, 104, 1745, 104, 1689, 1148,
	1802, 1691, 26, 1140, 1780, 642, 1753, 1755, 1659, 1777,
	932, 1640, 1702, 1634, 1821, 1588, 1045, 104, 112, 112,
	73, 719, 729, 730, 722, 723, 724, 725, 726, 727,
	728, 721, 1281, 1152, 1840, 1281, 1818, 1155, 1843, 1145,
	1144, 1790, 1630, 1792, 989, 932, 1793, 960, 840, 788,
	787, 786, 1827, 1828, 1750, 1791, 1846, 785, 784, 783,
	782, 781, 1794, 780, 1795, 1162, 1581, 779, 778, 1776,
	1177, 1162, 777, 1788, 1837, 1769, 34, 1782, 776, 821,
	775, 774, 15, 1724, 1847, 769, 6, 1798, 1803, 1804,
	1805, 1806, 73, 1799, 1796, 5, 1723, 768, 1161, 1816,
	1815, 767, 1864, 1814, 1842, 706, 707, 708, 705, 1839,
	526, 764, 760, 759, 757, 1823, 1826, 756, 706, 707,
	708, 705, 1722, 755, 1851, 1884, 642, 1835, 754, 1841,
	1832, 1838, 1856, 1871, 1844, 1904, 1873, 1850, 1875, 1845,
	2439, 1833, 112, 753, 706, 707, 708, 705, 752, 1592,
	1716, 642, 751, 750, 747, 112, 1587, 2437, 1945, 746,
	1904, 1869, 1863, 670, 1959, 1960, 1577, 1874, 1872, 658,
	1876, 1877, 706, 707, 708, 705, 1935, 729, 730, 722,
	723, 724, 725, 726, 727, 728, 721, 720, 719, 729,
	730, 722, 723, 724, 725, 726, 727, 728, 721, 1936,
	1937, 1938, 1712, 1715, 720, 719, 729, 730, 722, 723,
	724, 725, 726, 727, 728, 721, 2424, 2422, 2475, 1943,
	2390, 1962, 1693, 1771, 1647, 706, 707, 708, 705, 669,
	1811, 112, 1809, 112, 1662, 1812, 1965, 1810, 1939, 1948,
	1940, 1944, 1949, 1950, 706, 707, 708, 705, 1954, 1053,
	1813, 1964, 1617, 1618, 1953, 1952, 1808, 1967, 1951, 1963,
	1807, 1895, 1896, 1966, 1608, 1983, 1752, 1985, 1582, 112,
	1132, 706, 707, 708, 705, 1564, 1565, 696, 2002, 1687,
	1685, 842, 1898, 1979, 1571, 1977, 1986, 1613, 1616, 1617,
	1618, 1614, 1690, 1615, 1619, 664, 2153, 1897, 1980, 1623,
	1187, 56, 1981, 1997, 33, 2359, 32, 932, 932, 1099,
	1098, 1996, 112, 2030, 720, 719, 729, 730, 722, 723,
	724, 725, 726, 727, 728, 721, 642, 854, 855, 73,
	904, 530, 531, 532, 533, 1802, 324, 852, 853, 325,
	2022, 326, 2000, 903, 529, 2005, 1461, 2005, 2044, 930,
	2024, 2001, 2007, 850, 851, 2006, 1630, 1613, 1616, 1617,
	1618, 1614, 1162, 1615, 1619, 2038, 848, 849, 2040, 872,
	642, 2032, 2062, 844, 2111, 2113, 2029, 2111, 2111, 1904,
	2043, 2035, 2436, 2315, 2028, 530, 531, 532, 533, 2036,
	2313, 2031, 642, 940, 2239, 2037, 2237, 2234, 529, 2034,
	2233, 2231, 2050, 2055, 1995, 1994, 1975, 847, 529, 1974,
	1189, 1830, 1193, 2426, 2425, 2117, 1849, 1515, 656, 2425,
	2108, 2426, 2199, 2112, 1622, 876, 39, 1, 1479, 2011,
	2087, 2114, 2115, 1933, 2133, 2157, 1918, 2059, 866, 548,
	367, 1102, 366, 373, 363, 856, 974, 625, 651, 971,
	2130, 650, 648, 2116, 370, 371, 2032, 372, 376, 1055,
	2134, 358, 1062, 432, 1276, 1282, 2275, 2358, 932, 2403,
	2309, 381, 2361, 987, 417, 2226, 2131, 2132, 112, 1891,
	2139, 2228, 2141, 1746, 2046, 2158, 2159, 2113, 2162, 2163,
	2164, 2165, 1834, 2160, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 559, 2108,
	2024, 462, 2202, 2183, 439, 2187, 758, 955, 627, 438,
	2020, 1765, 2093, 534, 624, 560, 1547, 1990, 1133, 1154,
	2240, 1137, 2485, 2474, 2218, 2209, 2454, 2434, 2326, 2470,
	2373, 2417, 2410, 2185, 2322, 2154, 2103, 2219, 2230, 356,
	1234, 2273, 520, 598, 2295, 357, 1591, 2217, 2220, 2096,
	2351, 2281, 538, 1576, 539, 2091, 1579, 2238, 1578, 1026,
	2105, 2106, 711, 1043, 642, 744, 2092, 642, 642, 642,
	2253, 393, 2243, 2244, 1504, 73, 1630, 642, 2249, 2250,
	405, 399, 1762, 2102, 1824, 38, 37, 36, 1268, 2283,
	1290, 2280, 2291, 2292, 2293, 434, 114, 2320, 1291, 2319,
	2148, 2097, 2302, 2363, 932, 932, 2301, 2290, 415, 2304,
	414, 413, 412, 411, 1612, 2314, 1610, 2316, 2317, 2312,
	1609, 2321, 359, 361, 360, 1222, 1221, 1266, 2387, 2341,
	365, 2342, 2052, 2196, 2260, 112, 2192, 2328, 2329, 2188,
	2332, 2061, 369, 642, 2060, 2088, 930, 930, 2089, 384,
	2095, 795, 791, 793, 794, 642, 362, 792, 1701, 1697,
	1902, 1903, 2334, 1900, 1961, 1957, 1278, 2340, 2344, 1259,
	1285, 2365, 1167, 1751, 1223, 2339, 109, 1219, 2129, 523,
	2349, 25, 24, 23, 2364, 11, 10, 2104, 2357, 1907,
	978, 9, 14, 22, 21, 20, 19, 64, 63, 2369,
	62, 61, 18, 8, 60, 59, 2376, 2378, 58, 17,
	16, 53, 54, 49, 2099, 48, 47, 558, 2384, 46,
	45, 44, 43, 52, 51, 50, 2395, 2396, 2397, 2398,
	2405, 42, 41, 2409, 40, 77, 2098, 2100, 76, 75,
	74, 27, 28, 29, 364, 368, 374, 30, 375, 377,
	87, 86, 378, 379, 380, 88, 84, 382, 383, 82,
	85, 83, 81, 35, 2400, 2423, 2420, 2421, 2365, 2433,
	13, 2, 0, 0, 0, 642, 2427, 642, 0, 0,
	2429, 2364, 2432, 2438, 1010, 2440, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2449, 0,
	2107, 2405, 642, 2450, 2457, 0, 0, 0, 0, 0,
	2460, 1010, 2094, 0, 2466, 2413, 0, 2415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2452, 0, 0,
	0, 0, 0, 0, 0, 2473, 0, 0, 0, 0,
	0, 0, 2484, 0, 2483, 0, 0, 0, 0, 0,
	0, 0, 2495, 0, 2497, 0, 2496, 2498, 0, 2443,
	0, 2484, 1406, 1448, 0, 0, 1395, 0, 1353, 1408,
	1326, 1342, 1416, 1343, 1344, 1381, 1305, 1363, 240, 1340,
	0, 0, 0, 0, 0, 0, 1398, 1297, 1329, 1330,
	1299, 1336, 1300, 1327, 1355, 185, 1325, 1366, 210, 1378,
	1339, 1360, 1414, 0, 0, 270, 224, 0, 0, 1358,
	1400, 1361, 1386, 1352, 1382, 1313, 1374, 1409, 1341, 0,
	1379, 1410, 0, 0, 0, 0, 1180, 1181, 1182, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 1377,
	1404, 1338, 0, 169, 1407, 1359, 1380, 0, 0, 1298,
	1375, 0, 1303, 1306, 1415, 1402, 1333, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 1362, 1383, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 1371, 0, 0, 0, 1308, 1304, 0, 1354, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 1447, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 1307, 298, 162, 1442, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 1426, 1427, 1428,
	1429, 1430, 1438, 1439, 0, 1443, 1444, 1445, 1312, 0,
	1332, 1384, 0, 1296, 1393, 1401, 1351, 300, 1403, 1348,
	1347, 1433, 0, 1432, 274, 1434, 1435, 209, 1399, 1328,
	1337, 316, 1335, 260, 242, 1405, 1370, 1446, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 1431, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 1440, 0, 1441, 312, 192, 152, 295,
	0, 238, 0, 1396, 1301, 1311, 1309, 1345, 1372, 1373,
	234, 311, 1388, 1392, 1389, 1417, 263, 0, 0, 0,
	0, 0, 203, 244, 1390, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1302, 0, 271, 293,
	305, 322, 1449, 1450, 1451, 1452, 0, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 296, 1346, 1319, 1357, 304, 1322,
	1320, 1387, 1321, 1376, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 1367, 1350, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1368, 1324, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 1394, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 1502,
	1886, 1318, 1323, 1317, 1364, 1365, 1411, 1412, 1413, 1385,
	1310, 1397, 1314, 1316, 1315, 0, 0, 0, 0, 0,
	0, 720, 719, 729, 730, 722, 723, 724, 725, 726,
	727, 728, 721, 0, 1391, 0, 445, 1369, 153, 0,
	211, 1418, 252, 190, 0, 0, 240, 720, 719, 729,
	730, 722, 723, 724, 725, 726, 727, 728, 721, 407,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 491,
	499, 0, 1436, 1437, 308, 309, 310, 294, 0, 182,
	1460, 400, 0, 0, 431, 468, 467, 419, 428, 0,
	0, 166, 420, 0, 427, 421, 425, 424, 422, 423,
	0, 483, 0, 0, 0, 0, 0, 0, 391, 404,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 0, 0, 0, 0, 446,
	0, 403, 0, 0, 448, 0, 429, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 426, 444, 449, 178, 505,
	442, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 506, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 440, 0, 0, 300, 0, 0, 489, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 443,
	0, 260, 242, 502, 392, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 1104, 1103, 1105, 312, 192, 152, 295, 487, 238,
	0, 501, 482, 484, 485, 488, 492, 493, 494, 495,
	496, 498, 500, 504, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 447, 228, 229, 230, 231, 490, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 512,
	486, 511, 513, 514, 510, 515, 516, 497, 410, 0,
	508, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 474, 455, 456, 457, 409, 458, 453, 454,
	475, 450, 471, 472, 433, 436, 459, 131, 460, 473,
	476, 477, 517, 518, 519, 463, 478, 470, 469, 461,
	451, 479, 480, 437, 435, 464, 465, 452, 466, 481,
	445, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 185, 1163, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 491, 499, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 0, 400, 0, 0, 431, 468,
	467, 419, 428, 0, 0, 166, 420, 0, 427, 421,
	425, 424, 422, 423, 0, 483, 0, 0, 0, 0,
	0, 0, 391, 404, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 0,
	0, 0, 0, 446, 0, 403, 0, 0, 1245, 0,
	429, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 426,
	444, 449, 178, 505, 442, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	506, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 440, 0, 0, 300,
	0, 0, 489, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 443, 0, 260, 242, 502, 392, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 487, 238, 0, 501, 482, 484, 485, 488,
	492, 493, 494, 495, 496, 498, 500, 504, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 447, 228, 229, 230,
	231, 490, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 512, 486, 511, 513, 514, 510, 515,
	516, 497, 410, 0, 508, 507, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 474, 455, 456, 457,
	409, 458, 453, 454, 475, 450, 471, 472, 433, 436,
	459, 131, 460, 473, 476, 477, 517, 518, 519, 463,
	478, 470, 469, 461, 451, 479, 480, 437, 435, 464,
	465, 452, 466, 481, 0, 0, 308, 309, 310, 294,
	107, 182, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 491, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 0,
	431, 468, 467, 419, 428, 0, 0, 166, 420, 0,
	427, 421, 425, 424, 422, 423, 0, 483, 0, 0,
	0, 0, 0, 0, 391, 404, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 0, 0, 0, 0, 446, 0, 403, 0, 0,
	448, 0, 429, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 426, 444, 449, 178, 505, 442, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 506, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 440, 0,
	0, 300, 0, 0, 489, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 443, 0, 260, 242, 502,
	392, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 487, 238, 0, 501, 482, 484,
	485, 488, 492, 493, 494, 495, 496, 498, 500, 504,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 447, 228,
	229, 230, 231, 490, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 512, 486, 511, 513, 514,
	510, 515, 516, 497, 410, 0, 508, 507, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 80, 252, 190, 474, 455,
	456, 457, 409, 458, 453, 454, 475, 450, 471, 472,
	433, 436, 459, 131, 460, 473, 476, 477, 517, 518,
	519, 463, 478, 470, 469, 461, 451, 479, 480, 437,
	435, 464, 465, 452, 466, 481, 445, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 185, 2451, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 491,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 431, 468, 467, 419, 428, 0,
	0, 166, 420, 0, 427, 421, 425, 424, 422, 423,
	0, 483, 0, 0, 0, 0, 0, 0, 391, 404,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 0, 0, 0, 0, 446,
	0, 403, 0, 0, 448, 0, 429, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 426, 444, 449, 178, 505,
	442, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 506, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 440, 0, 0, 300, 0, 0, 489, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 443,
	0, 260, 242, 502, 392, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 487, 238,
	0, 501, 482, 484, 485, 488, 492, 493, 494, 495,
	496, 498, 500, 504, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 447, 228, 229, 230, 231, 490, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 512,
	486, 511, 513, 514, 510, 515, 516, 497, 410, 0,
	508, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 474, 455, 456, 457, 409, 458, 453, 454,
	475, 450, 471, 472, 433, 436, 459, 131, 460, 473,
	476, 477, 517, 518, 519, 463, 478, 470, 469, 461,
	451, 479, 480, 437, 435, 464, 465, 452, 466, 481,
	445, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 185, 1163, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 491, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 0, 0, 431, 468,
	467, 419, 428, 0, 0, 166, 420, 0, 427, 421,
	425, 424, 422, 423, 0, 483, 0, 0, 0, 0,
	0, 0, 391, 404, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 0,
	0, 0, 0, 446, 0, 403, 0, 0, 448, 0,
	429, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 426,
	444, 449, 178, 505, 442, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	506, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 440, 0, 0, 300,
	0, 0, 489, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 443, 0, 260, 242, 502, 392, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 487, 238, 0, 501, 482, 484, 485, 488,
	492, 493, 494, 495, 496, 498, 500, 504, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 447, 228, 229, 230,
	231, 490, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 512, 486, 511, 513, 514, 510, 515,
	516, 497, 410, 0, 508, 507, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 474, 455, 456, 457,
	409, 458, 453, 454, 475, 450, 471, 472, 433, 436,
	459, 131, 460, 473, 476, 477, 517, 518, 519, 463,
	478, 470, 469, 461, 451, 479, 480, 437, 435, 464,
	465, 452, 466, 481, 445, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 491, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 431, 468, 467, 419, 428, 0, 0, 166,
	420, 0, 427, 421, 425, 424, 422, 423, 0, 483,
	0, 0, 0, 0, 0, 0, 391, 404, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 951, 0, 0, 0, 446, 0, 403,
	0, 0, 448, 0, 429, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 426, 444, 449, 178, 505, 442, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 506, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 300, 0, 0, 489, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 443, 0, 260,
	242, 502, 392, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 487, 238, 0, 501,
	482, 484, 485, 488, 492, 493, 494, 495, 496, 498,
	500, 504, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	447, 228, 229, 230, 231, 490, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 512, 486, 511,
	513, 514, 510, 515, 516, 497, 410, 0, 508, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	474, 455, 456, 457, 409, 458, 453, 454, 475, 450,
	471, 472, 433, 436, 459, 131, 460, 473, 476, 477,
	517, 518, 519, 463, 478, 470, 469, 461, 451, 479,
	480, 437, 435, 464, 465, 452, 466, 481, 0, 0,
	308, 309, 310, 294, 445, 182, 0, 1521, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 491, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 431, 468, 467, 419, 428, 0, 0, 166,
	420, 0, 427, 421, 425, 424, 422, 423, 0, 483,
	0, 0, 0, 0, 0, 0, 391, 404, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 0, 0, 0, 0, 446, 0, 403,
	0, 0, 448, 0, 429, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 426, 444, 449, 178, 505, 442, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 506, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 300, 0, 0, 489, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 443, 0, 260,
	242, 502, 392, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 487, 238, 0, 501,
	482, 484, 485, 488, 492, 493, 494, 495, 496, 498,
	500, 504, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	447, 228, 229, 230, 231, 490, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 512, 486, 511,
	513, 514, 510, 515, 516, 497, 410, 0, 508, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	474, 455, 456, 457, 409, 458, 453, 454, 475, 450,
	471, 472, 433, 436, 459, 131, 460, 473, 476, 477,
	517, 518, 519, 463, 478, 470, 469, 461, 451, 479,
	480, 437, 435, 464, 465, 452, 466, 481, 445, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 491, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 431, 468, 467, 419,
	428, 0, 0, 166, 420, 0, 427, 421, 425, 424,
	422, 423, 0, 483, 0, 0, 0, 0, 0, 0,
	391, 404, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 0, 0, 0,
	0, 446, 0, 403, 0, 0, 448, 0, 429, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 426, 444, 449,
	178, 505, 442, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 506, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 440, 0, 0, 300, 0, 0,
	489, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 443, 0, 260, 242, 502, 392, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	487, 238, 0, 501, 482, 484, 485, 488, 492, 493,
	494, 495, 496, 498, 500, 504, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 447, 228, 229, 230, 231, 490,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 512, 486, 511, 513, 514, 510, 515, 516, 497,
	410, 0, 508, 507, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 474, 455, 456, 457, 409, 458,
	453, 454, 475, 450, 471, 472, 433, 436, 459, 131,
	460, 473, 476, 477, 517, 518, 519, 463, 478, 470,
	469, 461, 451, 479, 480, 437, 435, 464, 465, 452,
	466, 481, 445, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 1027, 0, 0, 0, 407, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 491, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 0,
	431, 468, 467, 419, 428, 0, 0, 166, 420, 0,
	427, 421, 425, 424, 422, 423, 0, 483, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 0, 0, 0, 0, 446, 0, 403, 0, 0,
	448, 0, 429, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 426, 444, 449, 178, 505, 442, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 506, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 440, 0,
	0, 300, 0, 0, 489, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 443, 0, 260, 242, 502,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 1028, 1029, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 487, 238, 0, 501, 482, 484,
	485, 488, 492, 493, 494, 495, 496, 498, 500, 504,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 447, 228,
	229, 230, 231, 490, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 512, 486, 511, 513, 514,
	510, 515, 516, 497, 410, 0, 508, 507, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 474, 455,
	456, 457, 409, 458, 453, 454, 475, 450, 471, 472,
	433, 436, 459, 131, 460, 473, 476, 477, 517, 518,
	519, 463, 478, 470, 469, 461, 451, 479, 480, 437,
	435, 464, 465, 452, 466, 481, 445, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 491,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 468, 467, 419, 428, 0,
	0, 166, 420, 0, 427, 421, 425, 424, 422, 423,
	0, 483, 0, 0, 0, 0, 0, 0, 391, 404,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 0, 0, 0, 0, 446,
	0, 403, 0, 0, 448, 0, 429, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 426, 444, 449, 178, 505,
	442, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 506, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 440, 0, 0, 300, 0, 0, 489, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 443,
	0, 260, 242, 502, 392, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 487, 238,
	0, 501, 482, 484, 485, 488, 492, 493, 494, 495,
	496, 498, 500, 504, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 447, 228, 229, 230, 231, 490, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 512,
	486, 511, 513, 514, 510, 515, 516, 497, 410, 0,
	508, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 474, 455, 456, 457, 409, 458, 453, 454,
	475, 450, 471, 472, 433, 436, 459, 131, 460, 473,
	476, 477, 517, 518, 519, 463, 478, 470, 469, 461,
	451, 479, 480, 437, 435, 464, 465, 452, 466, 481,
	445, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 491, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 0, 0, 431, 468,
	467, 419, 428, 0, 0, 166, 420, 0, 427, 421,
	425, 424, 422, 423, 0, 483, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 0,
	0, 0, 0, 446, 0, 403, 0, 0, 448, 0,
	429, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 426,
	444, 449, 178, 505, 442, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	506, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 440, 0, 0, 300,
	0, 0, 489, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 443, 0, 260, 242, 502, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 487, 238, 0, 501, 482, 484, 485, 488,
	492, 493, 494, 495, 496, 498, 500, 504, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 447, 228, 229, 230,
	231, 490, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 512, 486, 511, 513, 514, 510, 515,
	516, 497, 410, 0, 508, 507, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 474, 455, 456, 457,
	409, 458, 453, 454, 475, 450, 471, 472, 433, 436,
	459, 131, 460, 473, 476, 477, 517, 518, 519, 463,
	478, 470, 469, 461, 451, 479, 480, 437, 435, 464,
	465, 452, 466, 481, 0, 0, 308, 309, 310, 294,
	107, 182, 31, 97, 79, 0, 0, 0, 0, 0,
	0, 0, 240, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 331, 333, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 80, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	1911, 1914, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1915, 300, 0, 0, 0, 1908, 0, 1907,
	274, 1909, 1912, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 1913, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 1270, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 1271, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 706, 707, 708, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 597, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 605, 606, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 583, 298, 162, 582, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 595, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 599, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 607, 602, 603, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	107, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 1279, 0,
	113, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 80, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 605, 606, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 583, 298,
	162, 582, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 607, 602, 603, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 935, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 933, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 931, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 929, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 933,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 931, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	240, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2360, 0, 113, 468,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 933, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	931, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 933, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 1226,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 1645, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 933,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	240, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 468,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2128, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 933,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	240, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 1820, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 1654, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 0, 1584, 0, 0,
	308, 309, 310, 294, 240, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 1567, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	240, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 347, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 110, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 1626, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 1181, 1182, 1628, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 270, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 0, 0, 0, 1180, 1181, 1182, 1628, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 0, 287, 315, 178,
	306, 0, 298, 162, 0, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 0, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	316, 0, 260, 242, 0, 0, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 313, 314, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	311, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 320, 228, 229, 230, 231, 195, 0,
	171, 323, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 0, 0, 0, 1180, 1181, 1182, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 294, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 107,
	0, 31, 97, 79, 0, 0, 0, 0, 0, 0,
	0, 811, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 153, 0,
	211, 0, 252, 190, 0, 0, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 707, 708, 705, 0,
	0, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 0, 0, 0, 0, 811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 99, 0, 100, 101, 819,
	823, 825, 827, 829, 830, 832, 0, 836, 833, 834,
	835, 0, 0, 814, 815, 816, 817, 797, 798, 820,
	1082, 800, 0, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 812, 818, 556, 0, 0, 0, 0,
	0, 0, 822, 824, 826, 828, 831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 96, 105, 0, 55, 799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 813, 0, 0, 0,
	0, 95, 90, 89, 819, 823, 825, 827, 829, 830,
	832, 0, 836, 833, 834, 835, 581, 0, 814, 815,
	816, 817, 797, 798, 820, 0, 800, 0, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 812, 818,
	0, 0, 0, 0, 0, 0, 0, 822, 824, 826,
	828, 831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1078,
	0, 813, 1075, 0, 0, 0, 1077, 1074, 1076, 1080,
	1081, 0, 0, 0, 1079, 583, 0, 0, 582, 65,
	0, 0, 0, 94, 0, 66, 2085, 0, 0, 0,
	0, 0, 0, 1699, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 0, 0, 0, 0,
	0, 568, 0, 0, 0, 0, 0, 0, 557, 0,
	1582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 67, 0, 1582,
	0, 0, 0, 0, 573, 0, 68, 2479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1085, 1086, 1087, 1088, 1089,
	1090, 1083, 1084, 0, 821, 0, 367, 0, 366, 373,
	363, 0, 0, 0, 80, 0, 0, 0, 0, 0,
	370, 371, 0, 372, 376, 0, 0, 358, 0, 0,
	0, 576, 0, 2156, 0, 0, 2085, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 0, 385, 0, 0, 386,
	1582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 577, 0, 0, 821,
	2071, 0, 0, 0, 0, 0, 0, 565, 0, 567,
	580, 2075, 0, 0, 564, 562, 561, 2067, 566, 2071,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	2075, 2064, 574, 575, 0, 2066, 2068, 2070, 0, 2072,
	2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 0,
	2064, 0, 0, 0, 2066, 2068, 2070, 0, 2072, 2073,
	2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 569, 0,
	0, 0, 0, 367, 0, 366, 373, 363, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 0,
	372, 376, 0, 0, 358, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 359, 361,
	360, 0, 0, 2084, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	2063, 0, 2084, 385, 0, 384, 386, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 353, 0, 0, 2063,
	2071, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 2075, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 2064, 0, 0, 2069, 2066, 2068, 2070, 0, 2072,
	2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 0,
	364, 368, 374, 0, 375, 377, 0, 0, 378, 379,
	380, 0, 0, 382, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2084, 0, 359, 361, 360, 0, 0,
	0, 0, 0, 365, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 368, 374,
	0, 375, 377, 0, 0, 378, 379, 380, 0, 0,
	382, 383,
}

var yyPact = [...]int{
	22229, -1000, -308, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20100, -1000, -1000, 1558, -1000, 8280, 20572, 83, 20572,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 329, -1000, 19628, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 298, 22666, 166, 164, 6336,
	20572, -292, -1000, 2009, -1000, -1000, -1000, -1000, 159, 349,
	19156, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22379, 23, 349, 442, 439,
	594, 594, 9696, 2009, 197, 80, -1000, 514, 22229, 264,
	20572, -1000, 798, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2009, 2009, 20572,
	-61, 905, -1000, 227, 207, 199, 797, -1000, -1000, -1000,
	-1000, 2033, -1000, 20572, 1734, 20572, -1000, 1218, 195, 22823,
	1890, 841, 389, 1795, -1000, -1000, 1726, -1000, 34, 89,
	90, 317, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 67,
	-1000, 1881, -1000, -1000, 21, -1000, -1000, 24, -1000, -1000,
	-1000, -109, -1000, -1000, -1000, -1000, -1000, -177, -177, 453,
	1187, 6336, -1000, 1210, -1000, 1384, -1000, -1000, -1000, -1000,
	3910, 7788, 7788, 7788, 7788, -1000, -1000, 1580, 6336, 1722,
	1717, -1000, -1000, -1000, -1000, -1000, 795, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7304,
	-1000, 1716, 1715, 1711, 1706, 1691, 1686, 1680, 1677, 1676,
	1675, 1500, 1674, 1327, 1316, 1664, 1660, 1648, 7788, 1315,
	1500, 1500, 1644, 1643, 1641, 1635, 1631, 1630, 1626, 1624,
	1623, 1622, 1621, 1620, 1614, 1613, 1612, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1256, -1000, 789, 565, -1000, 1611, 1873, 1982, 1560, 2017,
	1965, 1952, 1936, 1926, 19, 297, 297, 297, 314, 297,
	326, -1000, -1000, -1000, -1000, -1000, -1000, 382, -1000, -1000,
	-1000, -1000, 593, 20572, -1000, 1536, 1976, 221, 827, 220,
	212, 1982, 1982, -110, -134, 827, 827, -134, 47, -1000,
	-1000, -1000, 943, 217, 943, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1943, 1930, 298, 298, 302, -1000, -178, -1000,
	-1000, 416, -1000, 410, -1000, 1218, 190, 184, 599, 929,
	-1000, 893, 20572, 20572, 20572, 893, 893, 11596, 11124, -1000,
	1982, 1560, -1000, 1475, 1955, 1560, 298, 298, 298, 298,
	298, 298, 298, 20572, 5362, 5362, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 214, 1610, -1000, 20572, 1982, 1873,
	1982, -1000, 784, 1164, 1314, -1000, -1000, 227, 858, -1000,
	609, -1000, -1000, -1000, -1000, 20572, 200, -1000, 1309, 1607,
	-1000, 307, 713, 867, -1000, 50, 2060, 16316, 1218, 16316,
	20572, -1000, -1000, -1000, -1000, -1000, -1000, -113, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -67, -1000, -67, 6336, 6336, 6336, 6336, 6336, -1000,
	332, 6820, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7788,
	7788, 7788, 7788, 7788, 7788, 7788, 7788, 7788, 7788, 7788,
	7788, 1579, 948, 7788, 7788, 7788, 1955, 1811, 595, -1000,
	-1000, -1000, -1000, -1000, 915, 1187, 6336, 6336, 20572, 22225,
	6336, 6336, 46, 6336, 1908, 1908, 2934, 6336, -1000, 1460,
	1458, -1000, -1000, 1007, 6336, -1000, -1000, 6336, 7788, 6336,
	-1000, -1000, -1000, -1000, 1908, 6336, 6336, 1908, 1908, 1908,
	945, 1908, 1908, 1908, 1908, 1908, 1908, 1908, 1299, 20572,
	1860, 0, -1000, -1000, -1000, 1520, -1000, 1566, 1566, 1520,
	1520, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1603, 1602, -1000, -1000, 1520, 1562, 1562, 1520, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1596, 1596, 1600, 1596, 20572, 1982, -292,
	4878, -1000, -295, 1873, 6336, -1000, -1000, 6336, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 311, 297, -1000, 1331,
	933, 16316, 1218, 1176, 20572, 297, 302, -1000, 20572, 593,
	1896, 20572, 16316, 943, 2026, 7788, 943, -1000, -1000, -1000,
	827, 827, -1000, -1000, -1000, -1000, 943, 943, -1000, -1000,
	-124, 2026, 2026, -122, 20572, 20572, 297, 20572, -1000, -1000,
	-1000, -1000, 20572, -1000, -1000, 1331, 16316, 13484, -1000, -138,
	436, 419, 422, -1000, -1000, 305, 316, 10652, 242, 16316,
	3418, -1000, -1000, 893, 893, 893, 3418, 3418, 764, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1873, -1000, -1000, -1000,
	-1000, 1331, 16316, 1218, 20572, 20572, 20572, 21826, -1000, 864,
	-1000, -1000, 9224, 782, 864, -1000, -293, -1000, 10180, 20572,
	20572, -1000, 1873, -1000, 1873, 2496, -1000, 1953, -1000, 227,
	127, -1000, -1000, -1000, -1000, -1000, -1000, 771, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 585, -1000, 20572,
	-1000, -1000, 50, 16316, 879, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 88, -1000, -1000, 123, -1000, 309, -38, 857,
	-1000, -1000, 18, 120, 18, 1187, -1000, 937, 937, 930,
	-1000, 348, -1000, -1000, -1000, -1000, 1580, -1000, -1000, -1000,
	1690, 1535, -1000, 913, 913, 807, 807, 807, 807, 807,
	1101, 1101, -1000, -1000, -1000, 3910, 1579, 7788, 7788, 7788,
	278, 1139, 2816, -1000, 6336, 918, -1000, 6336, 1159, 821,
	767, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1457, 453, 1450, 1122, 2032, 1449, 6336, -1000, -1000,
	6336, 1009, 5852, -1000, -1000, -1000, 1426, -1000, -1000, -1000,
	1424, 555, 1422, 1337, 1419, 6336, 855, 853, 6336, 6336,
	6336, 6336, 1418, 6336, 6336, 6336, 6336, 6336, 6336, 6336,
	574, -1000, 6336, -9, -1000, -1000, -1000, -1000, 1140, -1000,
	1138, -1000, -1000, -1000, 1297, 1297, -1000, -1000, 1133, -1000,
	-1000, -1000, 1130, -1000, -1000, 1123, -1000, -1000, -1000, -1000,
	851, -1000, 1187, -1000, 1290, -1000, 612, 567, -1000, 1089,
	18684, 20572, -15, -1000, 1879, 696, -1000, -38, 454, 1731,
	-1000, -1000, -1000, 1858, 20572, 18212, -1000, 1578, 834, -1000,
	1714, 20572, -1000, 6336, -1000, 20572, 2026, 2026, 827, 21826,
	943, 20572, 943, -1000, -1000, 943, -1000, 757, -1000, 20572,
	-1000, -1000, -1000, -1000, -15, 696, 1864, 583, -1000, -1000,
	-1000, -1000, 1895, 21044, 21044, 197, 1576, -1000, -1000, 432,
	408, 407, -1000, -1000, 308, -1000, -1000, 454, -1000, -1000,
	-1000, 1574, 903, -1000, -1000, 7788, -1000, 3418, 3418, 3418,
	-1000, -1000, 13956, -1000, -1000, 556, 454, 1790, 511, -1000,
	511, -1000, -1000, -1000, 2026, 5362, -1000, 13484, -1000, -1000,
	17732, -1000, 17260, 2026, 460, -1000, 1571, -1000, 833, 1818,
	-1000, 756, 509, -1000, 901, 823, -1000, -1000, -1000, -1000,
	754, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -62, -1000, -1000, 20572, 1309, 817, 879, 487, -1000,
	306, 751, 742, -1000, 16316, 25, 16316, -1000, 16316, -1000,
	-1000, 209, -1000, 20572, 1872, -1000, -1000, -1000, 1289, 1871,
	-1000, -1000, -1000, -1000, -1000, 810, -1000, 278, 1139, 1829,
	-1000, 7788, 7788, 1784, 909, -1000, 6336, 989, 22221, 1146,
	12540, 20572, -1000, -1000, 6336, 6336, -1000, 1765, 1712, -1000,
	6336, 6336, 1057, -1000, -1000, -1000, 12540, -1000, 7788, -1000,
	1684, -1000, -1000, 1658, 1645, 1524, 803, -1000, 1487, 1473,
	1456, 1430, 1423, 1376, 1305, 1288, 1187, -1000, -1000, 1417,
	1415, 802, -1000, 800, 1408, 793, 790, 4878, -1000, -142,
	6336, 6336, 6336, 1853, -1000, -1000, 1536, 932, 1570, -93,
	876, -1000, 276, 16316, 182, -1000, 1789, 215, -1000, 1858,
	-1000, 429, -1000, 1567, 20572, 715, -1000, 733, 22229, -1000,
	20572, -1000, 1218, 827, 1187, 2026, -1000, -1000, 2026, -1000,
	827, -1000, 827, 943, 20572, -1000, -93, 276, 20572, 13484,
	13484, 13484, 13484, -1000, 1837, 1833, -1000, 1809, 1807, 1827,
	20572, 13484, 20572, -1000, -1000, -1000, 21435, -1000, -1000, -1000,
	-1000, -1000, 1406, 2009, 16788, -1000, -1000, -1000, 399, 16316,
	1280, 242, -1000, -1000, -1000, -1000, -1000, 20572, 20572, 2024,
	-1000, 494, 1934, -1000, -1000, 655, -1000, 2024, -293, 4878,
	208, 20572, -293, 20572, 20572, 4878, -1000, 20572, 2496, 1117,
	-1000, -1000, -1000, 2031, 16316, 1218, 818, 865, -1000, 13,
	-1000, 82, 268, 1277, -1000, 321, 900, 318, -1000, -1000,
	7788, -1000, -1000, -1000, -1000, 1187, 6336, 1405, -1000, 388,
	388, 1404, -1000, 1520, 1566, -1000, 1520, 1562, 1520, 388,
	388, 1402, -1000, 1030, 1301, -1000, -1000, 1286, 1275, 6336,
	1396, 2842, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1378, -1000, -1000, -1000, 1274, -1000,
	-1000, -1000, 1116, -1000, 1109, -1000, -92, -73, 1187, 1187,
	-1000, -1000, 1847, 1893, 1877, 8752, 1031, -1000, -1000, 1272,
	-1000, 250, -1000, -1000, -1000, 328, 22, 1096, 244, -1000,
	1312, 20572, -1000, -1000, -1000, -1000, -1000, 876, 876, 876,
	8752, 264, 542, 643, 13484, 20572, -1000, 15372, 1377, -1000,
	454, 2026, -1000, -1000, 2026, 2026, 827, -1000, 1031, 250,
	601, -1000, 899, 1730, 1787, 1730, -1000, -1000, -1000, -1000,
	1828, -1000, 1813, -1000, -1000, 601, -1000, 1536, -1000, -1000,
	776, 765, -1000, 487, 1375, -1000, -1000, -1000, -1000, 2021,
	2016, 15844, 2021, -1000, 1374, 482, -293, -1000, -1000, 460,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1218,
	-1000, 81, -1000, -1000, -1000, -1000, -1000, -1000, -50, -1000,
	20572, 1268, 20572, -1000, 1187, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6336, -1000, -1000, -1000, 1267, -1000, -1000, -1000, -1000, 1373,
	1372, -297, -69, 2015, 2014, -1000, -1000, 197, 20572, 1359,
	468, -1000, -1000, -1000, 22306, 351, -1000, 20572, 962, 430,
	297, 430, 960, 1553, -1000, -1000, -1000, 1265, -39, -1000,
	-1000, 1264, 1263, 1080, -1000, -1000, 1100, 621, -26, -1000,
	-1000, -1000, -1000, -1000, -1000, 1540, 12540, 13012, 1261, 1357,
	21044, 13484, 15372, 573, -1000, 618, -1000, -1000, -1000, -1000,
	-1000, 2026, -1000, -1000, 2019, 20572, 4878, -1000, -1000, 6336,
	1539, -1000, 6336, -1000, -1000, -1000, -1000, -1000, -1000, 1260,
	-1000, 1254, -1000, -1000, 6336, 6336, -1000, -1000, -1000, 460,
	454, -1000, -1000, -122, 54, -122, 1238, -1000, -1000, -1000,
	-299, 1252, -1000, 2013, 1251, 1171, -1000, 1536, 22700, 8752,
	2112, -1000, -1000, 20572, 20572, -1000, 20572, 20572, 297, 6336,
	-1000, -1000, 186, -1000, -1000, 58, -1000, -1000, 1095, 284,
	-1000, 14900, -1000, -1000, -1000, -1000, -1000, -67, 2026, 573,
	618, -1000, -1000, 708, -1000, 1982, -1000, -1000, 1187, 20572,
	1187, 763, 760, 1187, 453, -1000, -97, -77, -1000, 1249,
	-1000, -1000, -301, 1075, -1000, 1236, -72, -1000, -1000, 1892,
	233, 22569, -1000, 876, 876, 562, 876, 876, 876, 876,
	162, 153, 876, 876, 876, 876, 876, 876, 876, 876,
	876, 876, 876, 876, 876, 876, 1532, -1000, -1000, 2112,
	-1000, -1000, 974, 7788, -1000, -1000, 1234, 13012, 457, 403,
	1528, -1000, 129, 2039, 958, 956, -1000, 20572, -1000, 1527,
	1489, 95, 1523, -1000, 1522, 1521, 20572, 1107, 259, 1226,
	-1000, -1000, 41, -1000, -1000, 730, -1000, 1520, 6336, -1000,
	-122, 2019, -1000, -1000, 723, -1000, 983, -1000, 970, 301,
	-87, -77, -1000, 2011, -74, 2010, 2007, 894, -1000, 1519,
	-1000, -1000, 2006, 197, -1000, 2004, 22700, -1000, 1074, 1067,
	876, 876, 1065, 1224, 1221, 1220, 876, 876, 1061, 1219,
	21435, 1032, 1018, 1014, 1091, 1216, 463, 1079, 1054, 1034,
	20572, 1516, 1170, -1000, -1000, 1139, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1011, 1515, -169,
	-1000, -1000, 1514, 14900, 177, 177, 14900, 14900, 14900, 1508,
	320, -1000, -52, -1000, -1000, -1000, 14900, 1869, 1098, -1000,
	1982, -1000, 1349, 1348, 1343, 1335, 1506, 1008, -69, 2000,
	-1000, 1171, 1993, 1171, 1171, 1209, 20572, 1171, -1000, 133,
	-1000, -1000, -1000, 12540, 12540, -1000, -1000, -1000, -1000, 1208,
	1199, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 178, 20572, 707, -1000, 881, 1334, 6336,
	1500, -226, 14900, 703, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 702, 701, 700, 14900, -1000, -1000, -1000, 121, -1000,
	128, -1000, -1000, 1869, -1000, -1000, -1000, -1000, -1000, 1905,
	12068, -90, -1000, 1194, -1000, 1171, -1000, -1000, -319, 698,
	-1000, -1000, 106, 203, 175, -1000, 274, -1000, -1000, -1000,
	-1000, -1000, -1000, 202, 692, -1000, 1170, 1103, -1000, 1023,
	-1000, 1786, -1000, 17, 691, -1000, -1000, -1000, -1000, 690,
	-1000, -1000, 876, 1094, 85, -1000, -1000, -1000, -1000, 20572,
	-1000, 689, -1000, -1000, -1000, 617, -1000, -1000, -1000, -1000,
	-1000, -1000, 20572, 101, 1006, 7788, 1495, 7788, 1494, 115,
	1492, -1000, -1000, -1000, -1000, -1000, 320, -1000, 1783, 1782,
	2030, -1000, -1000, -1000, -1000, 128, 128, 128, 128, 9,
	993, -1000, 1176, 451, -1000, 875, -1000, 14428, 20572, -1000,
	1491, 1992, -1000, 1719, 20572, 1702, 20572, 1485, 839, 7788,
	-1000, -1000, 2038, -1000, 2035, 369, 369, -1000, -1000, -1000,
	20572, 4394, -1000, 615, -1000, 228, 112, -1000, 638, -1000,
	630, 20572, 992, 1414, -1000, -1000, -1000, 1012, 126, -1000,
	-1000, -1000, 1187, 20572, 629, -1000, 1304, 91, -1000, -1000,
	627, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 228, 1802,
	-1000, 986, -1000, -1000, 22550, 324, -1000, -1000, 22550, 98,
	-1000, 223, 1478, -1000, -1000, 620, -1000, 1270, 435, 6336,
	-1000, 98, 22700, -1000, 6336, 598, -1000, 22700, 525, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 114, 2411, 185, 136, 127, 183, 2410, 1936, 1934,
	2403, 2402, 2401, 2400, 2399, 2396, 2395, 2391, 2390, 2387,
	2383, 2382, 2381, 2380, 2379, 2378, 2375, 182, 2374, 2372,
	2371, 2365, 2364, 2363, 2362, 2361, 2360, 2359, 2357, 2356,
	2355, 2353, 2352, 2351, 123, 2350, 1931, 2349, 2348, 2345,
	2344, 2343, 164, 2342, 2341, 2340, 2338, 2337, 2336, 2335,
	2334, 2333, 2332, 2331, 2330, 2326, 2325, 2323, 2322, 2321,
	2319, 175, 181, 52, 2318, 46, 43, 138, 195, 61,
	208, 190, 133, 64, 122, 168, 108, 2317, 2316, 107,
	2314, 24, 2313, 121, 2312, 106, 56, 28, 186, 99,
	50, 69, 88, 2310, 2306, 83, 2305, 2304, 87, 2303,
	60, 2301, 75, 34, 85, 27, 2300, 2299, 2298, 67,
	2297, 2294, 2293, 2292, 132, 2291, 90, 53, 2290, 2288,
	2285, 2284, 2281, 33, 2280, 47, 2279, 2276, 2274, 2273,
	2272, 2271, 2269, 11, 15, 18, 2268, 16, 3, 2267,
	162, 77, 82, 102, 2266, 364, 2265, 2260, 2256, 113,
	2254, 453, 2253, 2252, 2251, 2250, 2248, 9, 2243, 150,
	2240, 2239, 2238, 57, 142, 147, 2236, 2235, 100, 45,
	51, 95, 2230, 2228, 73, 161, 17, 42, 0, 144,
	39, 2227, 2226, 2225, 198, 146, 143, 169, 91, 187,
	120, 2224, 2223, 49, 2222, 115, 2221, 101, 79, 2220,
	129, 2214, 35, 130, 2211, 157, 2205, 196, 2, 112,
	26, 234, 2203, 2202, 2199, 119, 2198, 2196, 74, 116,
	2194, 2193, 2192, 25, 2191, 29, 20, 2190, 78, 2186,
	177, 2185, 126, 92, 125, 131, 105, 163, 171, 63,
	109, 1009, 104, 80, 19, 2184, 165, 2183, 192, 179,
	2182, 135, 2180, 178, 334, 149, 2179, 134, 8, 2175,
	2174, 7, 2172, 22, 2171, 2170, 2169, 2168, 6, 2167,
	2166, 2163, 1, 4, 2162, 5, 156, 59, 93, 2161,
	89, 184, 2159, 2158, 2157, 2156, 2155, 233, 2154, 2153,
	2151, 2150, 2149, 2148, 2147, 76, 31, 2146, 2144, 2141,
	2138, 68, 97, 2122, 292, 155, 2114, 36, 2113, 2112,
	23, 2111, 30, 2110, 2109, 2105, 13, 158, 2104, 2103,
	14, 2102, 2100, 10, 12, 2099, 2097, 54, 48, 41,
	70, 65, 2096, 21, 2095, 94, 2094, 2093, 176, 2092,
	151, 2089, 117, 173, 191, 2082, 159, 2081, 2079, 2078,
	2077, 2076, 2075, 2071, 1043, 2069, 2068, 174, 55, 167,
	2066, 2063, 141, 2059, 110, 86, 84, 148, 2058, 139,
	2057, 2056, 172, 140, 2055, 2054,
}

//line mysql_sql.y:7673
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 380, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 61, 60,
	336, 336, 335, 335, 334, 334, 333, 333, 333, 332,
	332, 332, 331, 331, 330, 330, 329, 329, 327, 327,
	328, 326, 325, 325, 325, 323, 323, 321, 321, 322,
	322, 316, 316, 319, 319, 317, 317, 317, 317, 320,
	315, 315, 315, 314, 314, 59, 59, 59, 253, 253,
	58, 58, 267, 267, 267, 267, 267, 265, 265, 265,
	265, 265, 265, 264, 264, 263, 263, 268, 268, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 53,
	53, 53, 53, 56, 56, 56, 57, 262, 262, 262,
	54, 55, 55, 252, 252, 257, 257, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 261,
	261, 261, 259, 259, 258, 258, 260, 260, 47, 47,
	47, 50, 49, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 48, 48, 48, 48, 48, 48, 45, 45,
	45, 45, 45, 44, 44, 46, 46, 250, 250, 249,
	64, 64, 64, 64, 64, 64, 64, 63, 63, 66,
	66, 65, 52, 52, 52, 52, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 359, 359, 359, 361, 361,
	192, 193, 381, 191, 191, 191, 355, 355, 356, 357,
	358, 358, 358, 62, 7, 7, 42, 43, 379, 379,
	297, 297, 205, 205, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	300, 301, 201, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 33, 33, 239, 239,
	32, 382, 382, 175, 175, 31, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 41, 310, 310, 384, 384,
	384, 39, 40, 296, 296, 296, 37, 36, 35, 34,
	34, 30, 30, 29, 29, 198, 198, 200, 200, 196,
	383, 383, 273, 273, 199, 199, 28, 28, 28, 197,
	197, 174, 195, 195, 195, 6, 10, 10, 10, 10,
	10, 10, 10, 10, 16, 18, 247, 247, 244, 17,
	13, 12, 15, 11, 14, 5, 5, 5, 5, 8,
	8, 9, 84, 84, 114, 114, 368, 368, 364, 364,
	365, 365, 365, 366, 366, 367, 367, 4, 304, 304,
	304, 304, 304, 304, 344, 344, 344, 345, 104, 104,
	99, 99, 305, 305, 219, 346, 346, 313, 313, 312,
	312, 311, 311, 102, 102, 103, 103, 88, 88, 72,
	72, 318, 318, 318, 318, 324, 324, 294, 294, 140,
	140, 170, 170, 171, 171, 76, 76, 77, 77, 77,
	77, 77, 77, 352, 352, 354, 354, 353, 101, 101,
	97, 97, 98, 98, 98, 96, 96, 95, 94, 94,
	93, 91, 91, 91, 92, 92, 92, 79, 79, 78,
	78, 78, 78, 78, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 80, 80, 360, 360,
	360, 298, 298, 298, 303, 303, 152, 152, 153, 153,
	151, 151, 81, 81, 82, 82, 82, 82, 150, 150,
	149, 83, 83, 89, 85, 85, 87, 87, 87, 87,
	160, 160, 159, 159, 159, 159, 69, 70, 70, 71,
	107, 107, 158, 157, 157, 157, 106, 106, 105, 105,
	100, 100, 86, 86, 86, 156, 90, 90, 90, 90,
	90, 90, 90, 90, 385, 385, 154, 184, 184, 184,
	190, 190, 183, 183, 183, 183, 183, 194, 189, 189,
	185, 185, 186, 186, 186, 3, 3, 3, 3, 22,
	22, 22, 22, 26, 26, 362, 362, 19, 369, 372,
	370, 373, 373, 373, 374, 374, 374, 375, 375, 20,
	371, 376, 376, 376, 248, 248, 245, 246, 246, 243,
	242, 242, 242, 378, 378, 377, 377, 377, 187, 187,
	21, 238, 238, 240, 241, 241, 232, 232, 232, 232,
	25, 236, 236, 237, 237, 237, 237, 237, 233, 233,
	235, 235, 231, 231, 231, 231, 231, 24, 230, 230,
	228, 228, 226, 226, 227, 227, 225, 225, 225, 229,
	229, 23, 23, 74, 73, 73, 73, 75, 299, 299,
	269, 269, 272, 272, 279, 279, 280, 280, 278, 278,
	285, 285, 284, 284, 283, 283, 282, 282, 281, 281,
	281, 281, 276, 276, 275, 275, 270, 270, 270, 270,
	270, 271, 271, 274, 274, 277, 277, 131, 131, 132,
	132, 132, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 342, 342, 343, 134, 134, 134, 138, 138, 138,
	138, 138, 138, 133, 133, 135, 135, 115, 115, 113,
	113, 108, 108, 109, 109, 110, 110, 111, 111, 112,
	112, 112, 112, 112, 112, 255, 255, 340, 340, 341,
	341, 337, 337, 337, 339, 339, 339, 339, 339, 338,
	338, 116, 168, 168, 168, 188, 188, 188, 167, 167,
	167, 130, 130, 129, 129, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 254,
	254, 202, 202, 203, 203, 147, 146, 146, 146, 146,
	146, 144, 145, 143, 143, 143, 143, 143, 142, 142,
	141, 141, 141, 234, 234, 139, 139, 137, 137, 137,
	136, 136, 136, 286, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 211, 211,
	216, 216, 351, 351, 350, 117, 117, 117, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 126, 126, 126,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 309, 309, 309, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	166, 363, 363, 363, 347, 347, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 164, 164, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	220, 220, 221, 221, 306, 306, 306, 306, 306, 306,
	307, 307, 308, 308, 308, 308, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 209, 161, 161, 161, 222,
	217, 217, 218, 218, 212, 212, 212, 212, 212, 212,
	212, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 213, 213, 215, 215, 224, 224, 224, 223, 223,
	223, 223, 223, 223, 223, 128, 128, 128, 128, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 119,
	119, 119, 119, 123, 123, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 124,
	124, 124, 124, 122, 122, 122, 122, 122, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 67, 68, 68, 121, 169, 169,
	287, 287, 290, 290, 288, 288, 289, 291, 291, 291,
	292, 292, 292, 293, 293, 293, 295, 295, 173, 173,
	173, 180, 180, 172, 172, 181, 181, 182, 182, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 9, 9,
	0, 2, 1, 3, 3, 3, 1, 3, 5, 0,
	2, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 0, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 2,
	4, 3, 1, 1, 1, 1, 2, 3, 4, 7,
	2, 3, 3, 4, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 7, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 5, 0, 2,
	7, 0, 1, 0, 1, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 6,
	7, 4, 4, 7, 8, 0, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 4, 2, 3, 4, 6, 8, 8,
	4, 6, 8, 8, 0, 1, 2, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 11, 0, 1, 7, 1, 4,
	1, 3, 4, 3, 0, 1, 1, 0, 2, 7,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 10, 9, 2, 2, 6, 10, 5, 0, 1,
	0, 6, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 1, 7,
	7, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 4, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	5, 4, 4, 5, 5, 5, 5, 4, 5, 5,
	5, 5, 5, 5, 5, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 5, 4, 6, 6, 7,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 4, 2, 3,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -380, -2, -1, -3, -4, -5, -6, -51, -63,
	-65, -66, -27, -7, -62, -44, -45, -47, -53, -58,
	-59, -60, -61, -67, -68, -69, -76, -22, -21, -20,
	-19, 12, -8, -9, -352, -10, -191, -192, -193, -381,
	-28, -29, -30, -34, -35, -36, -37, -39, -40, -41,
	-31, -32, -33, -43, -42, 206, -46, 61, -48, -49,
	-50, -54, -55, -56, -57, 320, 326, 378, 387, 503,
	504, 46, -77, -79, -23, -24, -25, -26, 202, 14,
	455, -11, -14, -12, -15, -13, -17, -18, -16, 224,
	223, 37, 286, 287, 324, 222, 203, 13, 135, 136,
	138, 139, 30, -78, 67, 204, -80, 10, 505, -88,
	38, -113, -188, 70, -176, -179, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 302, 452, 241, 265, 268, 275, 135, 154,
	148, 176, 168, 143, 245, 246, 77, 138, 409, 87,
	394, 375, 141, 260, 262, 264, 267, 247, 164, 159,
	259, 243, 503, 157, 248, 39, 249, 181, 250, 251,
	457, 390, 301, 396, 272, 373, 158, 391, 263, 393,
	183, 187, 401, 326, 152, 153, 398, 403, 180, 221,
	42, 454, 233, 404, 185, 179, 175, 412, 276, 274,
	178, 151, 174, 244, 50, 189, 188, 190, 369, 370,
	371, 372, 252, 253, 314, 400, 171, 160, 305, 144,
	22, 407, 228, 395, 327, 254, 269, 277, 184, 186,
	235, 240, 456, 377, 239, 273, 405, 156, 232, 261,
	227, 408, 145, 320, 329, 255, 139, 266, 402, 411,
	49, 342, 150, 142, 218, 136, 237, 242, 256, 257,
	258, 279, 278, 270, 172, 234, 177, 162, 149, 173,
	137, 236, 410, 343, 501, 303, 358, 170, 167, 238,
	211, 406, 397, 140, 362, 344, 165, 280, 498, 499,
	500, 315, 300, 281, 282, 163, 225, 389, 283, 285,
	368, 293, 345, 376, -46, -9, -8, -78, -79, -195,
	23, 373, -52, 374, 206, 67, -188, -5, -4, -44,
	-76, -194, -188, 286, -194, 209, -188, 239, 357, -297,
	214, -264, -238, 240, -263, -240, -266, -241, 31, 202,
	204, 203, 236, 14, 324, 210, 12, 10, 325, 222,
	24, 25, 27, 13, 326, 328, 28, 329, 332, 333,
	334, 41, 337, 338, 229, 70, 73, 247, 247, -218,
	-212, 94, 230, -214, -207, -208, -210, -333, -327, -206,
	67, 119, 120, 127, 95, -209, -286, 35, 97, 462,
	424, -162, -163, -164, -165, -166, -188, -328, -326, 73,
	78, 81, 84, 85, 83, 82, 161, 80, 74, 132,
	-79, 70, -347, 470, -177, 490, 471, 489, -302, -308,
	208, -306, 166, 225, 162, 12, 125, 368, 130, 163,
	467, 486, 493, 464, 465, 459, 460, 461, 463, 472,
	474, 485, -309, 481, 491, 492, 494, 72, 71, 484,
	483, 468, 469, 475, 458, 466, 476, 477, 482, 487,
	488, 495, 308, 87, 309, 310, 416, 304, 311, 214,
	373, 55, 312, 313, 314, 315, 316, 423, 317, 56,
	318, 307, 229, 358, 319, 165, 182, 427, 426, 428,
	420, 417, 415, 418, 419, 421, 422, 478, 479, 480,
	-260, -258, -188, -70, -71, 496, -95, -96, -155, 19,
	6, 7, 8, 9, -299, 302, 358, 239, -232, -230,
	283, 335, 219, 218, 88, 416, 208, -364, -365, 199,
	200, 201, -354, 448, -353, -188, 26, 209, -38, -310,
	-296, 397, 396, -199, 395, 388, 399, 390, 202, 449,
	-173, 345, 376, 235, 413, 414, 322, 377, 401, 402,
	391, 87, 169, 166, 302, 358, -364, 140, 137, -251,
	140, 93, 145, 144, -251, 239, 357, 40, -257, 368,
	-256, -258, 401, 402, 412, 71, 72, 400, -173, 87,
	-96, -155, -95, -77, -79, -352, 302, 358, 239, 210,
	209, 211, 416, 286, -298, -360, 31, -303, 196, 197,
	198, 32, 33, -1, -102, 231, -113, 133, -96, -95,
	-96, -167, -188, 375, 103, -52, -52, 374, -355, -356,
	-357, -359, 206, 374, 373, 133, 15, -194, 65, -113,
	-240, 239, -264, -238, 35, 64, 134, 212, 134, 64,
	67, 322, 302, 358, 323, 416, 209, 335, 211, 239,
	336, 302, 358, 209, 211, 416, 239, 302, 209, 211,
	358, 239, 336, 388, 389, 211, 26, 327, 330, 331,
	389, -314, 412, -314, 134, 93, 90, 91, 92, -212,
	110, -223, 103, 104, 105, 106, 107, 108, 109, 116,
	115, 126, 119, 120, 121, 122, 123, 124, 125, 117,
	118, 113, 94, 111, 112, 96, -79, -212, -218, -210,
	-210, -210, -210, -286, -216, -212, 67, 67, 133, -212,
	67, 67, 67, 67, 67, 67, 67, 67, -307, 67,
	67, -220, -221, 67, 67, 73, 73, 67, 67, 67,
	-210, 73, -221, -221, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 134,
	-119, -123, -120, -122, -121, -125, -124, 166, 167, 130,
	170, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 30, 182, 225, 162, 163, 164, 165, 183, 148,
	168, 453, 191, 149, 192, 150, 193, 151, 194, 152,
	153, 195, 154, 157, 158, 159, 156, 133, -96, 134,
	67, -72, 38, -98, 21, -80, -79, 20, 31, 32,
	31, 32, 31, 32, 31, 32, -362, 209, 448, -228,
	214, -228, -228, 210, -228, 209, -366, 147, 134, -354,
	-101, 67, 23, 237, -198, 111, -384, 210, 398, 42,
	238, 237, -97, -98, -97, 392, 389, -273, 393, 394,
	-199, -198, -198, -199, 209, 211, 416, -382, -383, 15,
	113, 237, -382, 30, 30, -297, -297, -367, 213, 405,
	455, 143, 144, 145, -240, 239, 239, 134, 103, 23,
	-259, 103, 114, -258, -258, -258, -259, -259, -133, 40,
	-187, 130, -188, 73, -133, 40, -97, -80, -79, 68,
	68, -297, -297, -297, -297, -297, -297, -297, -194, -81,
	-82, 121, -212, -188, -81, -304, 46, -76, 67, 30,
	67, -188, -97, -72, -98, 133, 78, 73, -52, 68,
	134, -358, 84, 85, -361, 180, 172, -188, -64, 73,
	-3, -4, -5, -6, -27, -44, -76, -329, -327, 67,
	31, 367, 64, 15, -265, 209, 416, 321, 235, 211,
	302, -263, -247, -244, -242, -187, -240, -243, -242, -268,
	-167, 389, -73, 379, -73, -212, -212, -212, -212, -212,
	83, 94, 300, 84, 85, -207, -224, 31, 281, 282,
	-208, -208, -208, -208, -208, -208, -208, -208, -208, -208,
	-208, -208, -215, -222, -286, 67, 113, 111, 112, 96,
	-210, -208, -208, 68, 134, -351, -350, 98, -212, -212,
	-188, -348, -349, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 312, 307, 313, 311, 304, 319,
	314, 315, 165, 446, 447, 440, 441, 442, 443, 444,
	445, -217, -218, -217, -212, -348, -217, -161, 32, 31,
	-161, -212, -363, 298, 297, 299, -217, 68, 68, 68,
	78, -218, -217, -208, -217, -161, -218, -218, -161, -161,
	-161, -161, 121, -161, -161, -161, -161, -161, -161, -161,
	73, -258, 40, -293, 343, 342, -287, -289, 67, -288,
	67, -288, -287, -287, 67, 67, -287, -290, 67, -290,
	-287, -291, 67, -291, -292, 67, -291, -188, -97, -71,
	-312, -311, -212, 40, 497, -72, -212, -94, -93, -212,
	211, -228, -369, 70, 94, -248, -245, -242, -238, -186,
	70, 71, 72, -188, -228, -367, -353, 34, -100, -188,
	-242, -382, -151, 16, -210, -383, -198, -198, -200, -383,
	-196, -383, 389, -151, -151, -273, -197, -188, -197, -228,
	-175, -174, -188, -175, -369, -248, -85, -83, -86, -87,
	-89, -154, -156, -90, -113, 67, 495, 406, 407, 141,
	144, 143, 31, 367, -262, 367, 31, -238, -256, -252,
	73, 368, -243, -261, 64, 130, -311, -259, -259, -259,
	-261, -261, 129, -72, -369, -247, -238, -188, -115, -113,
	-115, -189, -186, -179, -150, 134, -149, 15, -183, -188,
	34, 73, 133, -150, -305, -219, -346, 496, -104, 68,
	-99, -188, -344, -345, -99, -103, -188, -72, -72, -181,
	-182, -172, -178, -185, -186, -179, 207, 31, 93, 34,
	36, 308, 340, 96, 130, 20, 97, 166, 129, 310,
	424, 309, 202, 59, 426, 428, 427, 417, 415, 360,
	364, 366, 363, 416, 388, 40, 14, 37, 223, 32,
	33, 123, 204, 100, 101, 226, 35, 224, 85, 44,
	23, 62, 15, 17, 18, 311, 359, 214, 213, 113,
	379, 210, 57, 12, 132, 38, 110, 361, 53, 89,
	45, 55, 111, 21, 418, 419, 41, 378, 387, 451,
	230, 125, 312, 313, 60, 94, 367, 83, 43, 64,
	90, 19, 58, 112, 205, 423, 56, 365, 316, 318,
	328, 448, 317, 208, 399, 10, 307, 425, 30, 222,
	54, 209, 99, 212, 84, 229, 6, 88, 13, 61,
	65, 420, 421, 422, 46, 98, 16, 319, 455, 380,
	381, 382, 383, 384, 385, 386, 191, 192, 193, 194,
	195, 271, 217, 215, 219, 220, 496, 497, 196, 197,
	297, 299, 169, 199, 200, 201, 231, 147, 7, 346,
	347, 348, 349, 351, 352, 353, 354, 355, 356, 357,
	504, 23, -52, -356, 133, 134, -100, -265, -246, -243,
	-267, 121, 70, -253, 134, 455, 506, 71, 212, -378,
	-377, 359, 68, 134, -315, 213, 423, 73, 507, -315,
	83, 300, 84, 85, -286, -218, -215, -210, -208, -208,
	-213, 226, 93, -212, -211, -350, 100, -212, 34, 134,
	65, 133, 68, 68, 15, 15, 68, -212, -212, 68,
	15, 15, -212, 68, 68, 68, 65, 68, 134, 68,
	-212, 68, 68, -212, -212, -212, -218, 68, -212, -212,
	-212, -212, -212, -212, -212, 134, -212, -295, 344, 78,
	78, -169, 73, -169, 78, 78, 78, 134, 68, 73,
	134, 22, 134, -91, 36, 37, -113, 214, -113, -372,
	346, 35, -379, 134, 40, -377, -231, 65, -226, -227,
	-225, -229, 40, -113, 15, -84, -114, -188, 67, 68,
	134, -239, 65, -175, -212, -113, -151, -151, -198, -189,
	-200, -195, -200, -196, 133, -174, -372, -379, 30, -157,
	-158, -159, -160, 53, 57, 59, 54, 55, 56, 60,
	30, 134, -385, 34, -184, -190, 34, -185, 73, -186,
	-179, -184, -77, -79, 67, 142, 145, 145, 144, 212,
	67, 103, -261, -261, -261, 40, -187, 64, 134, -151,
	-82, -83, -85, -188, 73, -188, 121, -151, 134, 67,
	68, 134, 46, 133, 134, 103, 68, 134, 133, 375,
	-188, -327, 68, -267, 134, 212, 133, 133, -244, 326,
	-187, -246, 20, 455, -167, 38, 73, 38, 68, -213,
	93, -210, -207, 68, 101, -212, 99, -117, -119, 342,
	343, -118, -124, 130, 166, 225, 165, 164, 162, 342,
	343, -133, -188, -212, -212, 68, 68, -212, -212, 15,
	-133, -208, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 73, 68, 68, 68, 134, 68,
	68, 68, 134, 68, 134, -311, -318, 393, -212, -212,
	-93, -92, 43, -101, 94, 67, -374, 395, 348, -180,
	103, -205, -204, 303, 41, -300, 368, 354, 355, -245,
	239, 64, 292, 293, 294, 295, -225, -173, 129, 250,
	67, -113, -84, -188, 15, 134, -368, 133, -1, -188,
	-238, -198, -151, -151, -198, -198, -200, -188, -374, -205,
	-250, -249, -167, -86, -86, -86, -86, 53, 53, 53,
	58, 53, 58, 53, -159, -250, -89, -188, -190, 68,
	73, -167, 145, -246, -201, 73, -252, -113, -113, -153,
	17, 133, -153, -219, -313, -312, 46, -76, -99, -305,
	-188, -345, -311, -188, -181, -178, -186, -179, 78, 15,
	-243, -238, 121, 121, 70, 327, -253, 73, 347, 73,
	209, 103, 209, -207, -212, 68, -126, 153, 152, -126,
	68, -287, -288, -287, -290, -287, -126, -126, 68, 68,
	23, 68, 68, 68, -212, 68, 68, 68, 73, 78,
	78, -324, 385, 380, 382, 44, 45, 34, 35, -108,
	-109, -110, -116, -111, -167, -203, -112, 217, 215, 219,
	-341, 88, 220, 271, 89, 210, -375, 77, -370, 73,
	-376, 77, 349, 132, 305, 40, 350, 351, 365, 301,
	78, 78, 356, -371, 70, -113, -180, -180, -180, -108,
	-102, 65, 133, -83, -114, -188, 121, 68, -151, -151,
	-151, -198, -375, -376, -151, 134, 103, -106, -105, 64,
	65, -107, 64, -105, 53, 53, -151, -101, 68, 134,
	68, 134, 68, -152, 18, 20, 121, -152, 68, -305,
	-238, -253, 368, -113, 73, -113, -212, 68, 68, 68,
	-294, 498, -322, 380, 20, 20, -76, -113, 68, 134,
	-119, -112, -188, 89, -340, -341, -228, -340, 89, 67,
	73, -373, 359, 73, 73, 78, 40, 78, 132, 352,
	-301, 67, -133, -135, -187, 130, 73, 68, -184, -83,
	-188, -151, -368, 133, -151, -96, -249, -311, -212, 67,
	-212, 73, 73, -212, -218, -75, -316, -273, 508, 134,
	-75, 68, -140, 499, 73, 20, 73, -320, 73, -101,
	-131, -132, -148, 340, 241, -229, 245, 77, 246, 375,
	247, 210, 249, 250, 251, 221, 252, 253, 254, 368,
	255, 256, 257, 258, 323, 6, 288, -110, -130, -129,
	-127, 83, 94, 40, 340, -128, 77, 129, 264, 242,
	265, -147, -202, 64, 215, 88, 89, 328, -203, -337,
	-338, -188, -338, -188, -337, -337, -228, -212, 20, 455,
	304, 40, 78, 40, 353, -233, -235, -167, 67, -74,
	-73, -151, -151, -97, -100, 68, 134, 68, 134, -323,
	385, -319, -317, 380, 381, 382, 383, 73, -170, 500,
	78, 73, 382, 34, -269, 231, 134, -148, -180, -180,
	-173, 129, -180, -180, -180, -180, 248, 248, -180, -180,
	-180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
	-180, -180, 67, -127, 83, -208, 73, -135, -136, 40,
	263, 259, -137, 40, 243, 244, -139, 67, 271, 13,
	89, 89, -113, 67, 65, 280, 67, 67, 67, -338,
	68, 73, 347, 73, 304, 68, 134, -287, -212, -75,
	-96, 68, 84, 85, 84, 85, -325, 213, -321, 384,
	-317, 20, 382, 20, 20, 103, 67, 20, -76, 20,
	-148, 78, 78, -180, -180, 78, 73, 73, 73, -180,
	-180, 78, 73, -190, 78, 78, 78, 78, 40, 73,
	-138, 40, 259, 263, 260, 261, 262, 78, 40, 78,
	40, 78, 40, -188, 67, -342, -343, 73, 78, 67,
	-306, -234, 67, -233, -339, 292, 293, 294, 296, 295,
	-339, -233, -233, -233, 67, -255, -254, 272, 94, 368,
	-236, -235, -91, 68, -97, 68, 68, 68, 68, -332,
	67, 78, -322, 20, -320, 20, -320, -320, 73, -171,
	-188, -320, -270, 273, 274, -271, -277, 276, -133, -133,
	73, 73, -134, 242, -115, 68, 134, 103, 68, -212,
	-220, -142, -141, 451, -233, 68, 68, 68, 68, -233,
	272, -237, 221, 77, 455, 290, 291, -91, -336, 30,
	68, -331, -330, -168, -326, -188, 385, 386, 73, -320,
	508, 68, 134, -275, 277, 67, -273, 67, -273, 89,
	293, 243, 244, 68, -343, 73, 68, -146, -144, -145,
	64, 391, 269, 270, 68, -236, -236, -236, -236, 68,
	-180, 73, 289, -335, -334, -333, 68, 134, 133, -188,
	-272, 278, 78, -208, 67, -208, 67, -274, 275, 67,
	-254, -145, 64, -144, 64, 14, 13, -147, 78, -186,
	134, 103, -330, -188, -279, 67, 20, 68, -268, 68,
	-268, 67, 103, -208, -143, 266, 267, 30, 144, -143,
	-334, 40, -212, 133, -280, -278, 231, -271, 68, 68,
	-268, 78, 68, 83, 40, 268, -188, 68, 134, 70,
	-276, 279, 68, -278, -281, 46, 78, -285, -282, 67,
	-148, 233, 113, -285, -148, -284, -283, 278, 234, 67,
	68, 134, 70, 230, 67, -218, -283, -282, -218, 68,
	68,
}

var yyDef = [...]int{
	27, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 595, 596, 597,
	598, 0, 385, 386, 0, 365, 0, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 264, 265, 0, 213, 209, 188, 189,
	190, 149, 150, 151, 152, 270, 0, 0, 0, 0,
	0, 0, 455, -2, 599, 600, 601, 602, -2, 398,
	0, 366, 367, 368, 369, 370, 371, 372, 373, 253,
	254, 255, 250, 251, 252, -2, 0, 398, 202, 0,
	193, 193, 0, 475, 0, 0, 489, 511, 27, 433,
	0, 438, 779, 815, 816, 817, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 214, 387, 388, 475, 475, 236,
	0, 1407, 240, 0, 0, 0, 362, 232, 233, 234,
	235, 0, 587, 0, 229, 0, 208, 1466, 0, 0,
	0, 0, 0, 0, 93, 641, 95, 643, 99, 106,
	0, 0, 111, 112, 115, 116, 117, 118, 119, 0,
	123, 0, 125, 128, 0, 130, 131, 0, 134, 135,
	136, 0, 146, 147, 148, 644, 645, 73, 73, 1164,
	1062, 0, 1069, 1070, 1081, 1090, 886, 887, 888, 889,
	0, 0, 0, 0, 0, 896, 897, 0, 910, 1551,
	0, 903, 904, 905, 906, 907, 36, 48, 49, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1035,
	873, 815, 0, 1559, 0, 1579, 1560, 1578, 0, 1020,
	0, 1010, 0, -2, -2, 0, 0, 1532, 0, -2,
	1556, 1575, 1582, 1553, 1554, 1548, 1549, 1550, 1552, 1561,
	1563, 1574, 0, 1570, 1580, 1581, 0, 50, 51, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1546, 1026, -2, 1028, 1029, 1031, 1032, 1033, 1034,
	-2, 1037, 1038, 1039, -2, -2, 1042, 1043, 1044, 1045,
	1046, 1047, 1050, -2, 1052, -2, 1054, 1022, 1023, 1024,
	1025, 1014, 1015, 1016, 1017, 1018, 1019, -2, -2, -2,
	0, 186, 184, 475, 547, 0, -2, 0, 0, 0,
	494, 497, 500, 503, 605, 670, 670, 670, 0, 670,
	0, 689, 647, 648, 649, 668, 669, 403, 399, 400,
	401, 402, 463, 0, 465, 468, 306, 0, 345, 0,
	0, 470, 470, 0, 354, 345, 345, -2, 0, 316,
	317, 318, 311, 0, 311, 322, 323, 324, 334, 335,
	355, 1188, 0, 0, 270, 270, 405, 203, 204, 192,
	194, 0, 198, 0, 191, 1466, 0, 0, 160, 1532,
	165, 0, 1414, 1480, 1429, 0, 0, 1447, 0, -2,
	470, 0, 476, 0, 475, 0, 270, 270, 270, 270,
	270, 270, 270, 0, 0, 0, 512, 513, 508, 509,
	510, 514, 515, 3, 0, 0, 437, 0, 470, -2,
	0, 237, 818, 0, 0, 241, 242, 0, 0, 256,
	0, 259, 245, 246, 247, 0, 0, 231, 0, 0,
	210, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 103, 100, 107, 110, 120, 127, 0, 139, 141,
	144, 101, 108, 113, 114, 121, 142, 102, 104, 105,
	109, 143, 145, 122, 126, 140, 124, 129, 132, 133,
	138, 0, 74, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1062, 0, 892,
	893, 894, 895, 898, 0, 911, 0, 0, 0, 0,
	1060, 1060, 0, 1060, 1056, 1056, 0, 1060, 998, 0,
	0, 1000, 1011, 0, 0, 1003, 1004, 1060, 0, 1060,
	1008, 1009, 995, 996, 1056, 0, 0, 1056, 1056, 1056,
	1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 0, 0,
	1165, 1183, 1120, 1121, 1122, 1170, 1124, 1174, 1174, 1170,
	1170, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	0, 0, 1163, 1143, 1170, 1172, 1172, 1170, 1167, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1177, 1177, 1180, 1177, 0, 470, 0,
	0, 458, 0, 439, 0, 491, 493, 0, 495, 496,
	498, 499, 501, 502, 504, 505, 0, 670, 606, 0,
	0, 0, 0, 0, 0, 670, 405, 404, 0, 464,
	0, 0, 0, 311, 520, 0, 0, 328, 329, 330,
	345, 345, 336, 471, 337, 338, 347, 0, 352, 353,
	0, 520, 520, 0, 0, 0, 670, 313, 312, 350,
	351, 320, 313, 1189, 1190, 0, 0, 0, 406, 0,
	0, 196, 0, 201, 153, 0, 0, 0, 0, 0,
	0, 182, 183, 0, 0, 0, 0, 0, 173, 176,
	773, 774, 638, 639, 177, 178, 439, 490, 492, 487,
	488, 0, 0, 0, 0, 0, 0, 0, 384, 528,
	522, 524, 582, 36, 528, 407, 425, 409, 0, 414,
	0, 780, 439, 461, 439, 0, 238, 0, 243, 0,
	0, 258, 260, 261, 262, 248, 249, 363, 227, 228,
	220, 221, 222, 223, 224, 225, 226, 230, 46, 0,
	211, 212, 0, 0, 0, 87, 88, 89, 90, 91,
	92, 94, 78, 376, 378, 630, 642, 0, 633, 0,
	97, 137, 70, 0, 70, 1063, 1064, 1065, 1066, 1067,
	1071, 0, 1073, 1075, 1077, 1079, 0, 1095, -2, -2,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 1082, 1093, 1094, 0, 0, 0, 0, 0,
	1091, 1086, 0, 890, 0, 908, 912, 0, 0, 0,
	37, 1055, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 0, 1061, 0, 1062, 0, 0, 0, 1057, 1058,
	0, 0, 0, 961, 962, 963, 0, 1021, 999, 1012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 1186, 1184, 1185, 1123, 1171, 0, 1148,
	0, 1149, 1150, 1151, 0, 0, 1144, 1145, 0, 1146,
	1147, 1139, 0, 1140, 1141, 0, 1142, 185, 546, 548,
	0, 429, 431, 432, 0, 459, 472, 477, 478, 481,
	0, 0, 0, 608, 0, 268, 624, 0, 640, 662,
	592, 593, 594, -2, 0, 0, 466, 0, 0, 560,
	308, 313, 315, 0, 346, 0, 520, 520, 345, 0,
	347, 0, 347, 341, 342, 0, 356, 359, 357, 0,
	319, 314, 361, 321, 0, 268, 533, 0, 534, 535,
	531, 562, 574, 577, 577, 0, 0, 205, 206, 0,
	0, 200, 154, 155, 0, 157, 158, 159, 166, 161,
	163, 0, 0, 167, 179, 180, 181, 0, 0, 0,
	171, 172, 0, 457, 374, 375, 379, 0, 381, 777,
	382, 383, 588, 589, 520, 0, 529, 0, 525, 583,
	0, 585, 0, 520, 408, 422, 0, 426, 0, 0,
	418, 420, 413, 415, 0, 0, 435, 460, 462, 819,
	0, 1195, -2, 1197, -2, -2, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 0, 244, 257, 0, 0, 0, 0, 81, 627,
	0, 82, 86, 76, 0, 0, 0, 632, 0, 629,
	634, 0, 96, 0, 0, 71, 72, 684, 0, 0,
	1072, 1074, 1076, 1078, 1080, 0, 1083, 1091, 1087, 0,
	1084, 0, 0, 1063, 0, 913, 0, 0, 0, 0,
	0, 0, 948, 949, 0, 0, 953, 0, 0, 956,
	0, 0, 0, 997, 1013, 1001, 0, 1005, 0, 1007,
	0, 931, 932, 0, 0, 0, 0, 937, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 1119, 1187, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 549, 441,
	0, 0, 0, 484, 482, 483, 468, 0, 0, 614,
	1191, 671, 272, 0, 0, 626, 0, 0, 667, -2,
	674, 0, 680, 0, 0, 0, 392, 396, 27, 469,
	0, 307, 0, 345, 521, 520, 331, 332, 520, 348,
	345, 349, 345, 347, 0, 358, 614, 272, 0, 0,
	0, 0, 0, 553, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 575, 564, 578, 0, 580, 581, 590,
	591, 576, 0, 475, 0, 207, 195, 197, 0, 0,
	0, 0, 168, 169, 170, 174, 175, 0, 0, 518,
	523, 530, 533, 584, 586, 37, 526, 518, 425, 427,
	0, 0, 425, 0, 0, 0, 434, 0, 0, 0,
	364, 47, 263, 0, 0, 0, 0, 0, 377, 0,
	631, 78, 0, 0, 98, 0, 0, 0, 1059, 1085,
	0, 1092, 1088, 891, 899, 909, 0, 0, 915, 927,
	927, 0, 918, 1170, 1174, 921, 1170, 1172, 1170, 927,
	927, 0, 38, 0, 0, 954, 955, 0, 0, 0,
	0, 0, 930, 933, 934, 935, 936, 938, 939, 940,
	941, 942, 943, 944, 0, 1176, 1175, 1161, 0, 1162,
	1173, 1178, 0, 1181, 0, 430, 445, 0, 473, 474,
	479, 480, 0, 0, 0, 781, 617, 615, 616, 0,
	1192, 621, 273, 274, 275, 276, 0, 0, 0, 625,
	0, 0, 663, 664, 665, 666, 675, 1191, 1191, 1191,
	781, 433, 0, -2, 0, 0, 394, 0, 0, 561,
	309, 520, 325, 339, 520, 520, 345, 360, 617, 621,
	520, 217, 0, 556, 550, 0, 539, 554, 555, 542,
	0, 544, 0, 540, 541, 520, 532, 468, 579, 565,
	0, 0, 199, 156, 0, 292, 162, 380, 778, 516,
	0, 0, 516, 423, 0, 428, 425, 412, 419, 411,
	421, 416, 417, 436, 820, 1196, 1193, 1194, 239, 0,
	628, 78, 83, 84, 85, 79, 77, 635, 0, 637,
	0, 0, 0, 1089, 914, 900, 916, 928, 929, 917,
	901, 919, 920, 922, 923, 924, 925, 926, 902, 950,
	0, 952, 957, 958, 0, 1002, 1006, 960, 1169, 0,
	0, 447, 59, 0, 0, 485, 486, 0, 0, 0,
	782, 783, 785, 786, 0, 0, 788, 843, 0, 797,
	670, 797, 0, 0, 799, 800, 607, 0, 0, 610,
	619, 0, 0, 0, 278, 279, 0, 0, 0, 291,
	287, 288, 289, 269, 620, 0, 0, 0, 0, 0,
	577, 0, 0, 520, 393, 396, 397, 467, 310, 343,
	340, 520, 266, 267, 475, 0, 0, 536, 557, 0,
	0, 537, 0, 538, 543, 545, 216, 563, 566, 0,
	570, 0, 164, 506, 0, 0, 527, 507, 424, 410,
	80, 75, 636, 61, 0, 61, 0, 959, 1179, 1182,
	449, 0, 446, 0, 0, 0, 603, 468, -2, 0,
	-2, 787, 844, 809, 809, 798, 809, 809, 670, 0,
	618, 609, 0, 622, 623, 0, 280, 281, 0, 284,
	290, 0, 676, 677, 775, 776, 678, 0, 520, 520,
	-2, 390, 395, 0, 344, 470, 218, 219, 558, 0,
	551, 0, 0, 517, 519, 29, 55, 0, 685, 0,
	28, 951, 451, 0, 448, 0, 442, 444, 69, 0,
	690, -2, 729, 1191, 1191, 0, 1191, 1191, 1191, 1191,
	0, 0, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
	1191, 1191, 1191, 1191, 1191, 1191, 0, 784, 811, -2,
	823, 825, 0, 0, 828, 829, 0, 0, 0, 0,
	865, 835, 0, 0, 0, 1107, 1108, 0, 842, 0,
	801, 810, 0, 810, 0, 0, 809, 0, 0, 0,
	277, 282, 0, 285, 286, 0, 658, 1170, 0, 682,
	61, 475, 391, 215, 0, 567, 0, 571, 0, 52,
	57, 62, 63, 0, 0, 0, 0, 0, 440, 0,
	450, 60, 0, 0, 681, 0, 679, 731, 0, 0,
	1191, 1191, 0, 0, 0, 0, 1191, 1191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 826, 827, 830, 831, 832, 870,
	871, 872, 833, 867, 868, 869, 834, 0, 0, 0,
	1105, 1106, 863, 0, 0, 0, 0, 0, 0, 0,
	795, 611, 0, 613, 283, 651, 0, 481, 0, 683,
	470, 559, 0, 0, 0, 0, 39, 0, 59, 0,
	64, 0, 0, 0, 0, 0, 0, 0, 604, 725,
	730, 732, 733, 0, 0, 736, 737, 738, 739, 0,
	0, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 767, 768, 769, 770, 771, 772, 752, 753, 754,
	755, 756, 757, 764, 0, 0, 761, 0, 0, 0,
	1010, 858, 0, 0, 802, 804, 805, 806, 807, 808,
	803, 0, 0, 0, 0, 794, 796, 839, 0, 612,
	650, 659, 660, 481, 389, 568, 569, 572, 573, 30,
	0, 0, 56, 0, 65, 0, 67, 68, 0, 0,
	453, 443, 714, 0, 0, 720, 0, 726, 734, 735,
	740, 741, 758, 0, 0, 760, 0, 0, 866, 0,
	838, 846, 859, 0, 0, 651, 651, 651, 651, 0,
	840, 652, 1191, 0, 0, 656, 657, 661, 687, 0,
	40, 0, 42, 44, 45, 812, 53, 54, 58, 66,
	686, 452, 0, 692, 0, 0, 0, 0, 0, 723,
	0, 765, 766, 759, 762, 763, 836, 845, 847, 848,
	0, 860, 861, 862, 864, 789, 790, 791, 792, 0,
	0, 654, 0, 31, 32, 0, 41, 0, 0, 454,
	694, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	837, 849, 0, 850, 0, 0, 0, 793, 653, 655,
	0, 0, 43, 813, 691, 0, 725, 716, 0, 718,
	0, 0, 0, 0, 851, 853, 854, 0, 0, 852,
	33, 34, 35, 0, 0, 696, 0, 712, 717, 719,
	0, 724, 722, 855, 857, 856, 814, 695, 0, 708,
	693, 0, 721, 697, -2, 0, 713, 698, -2, 0,
	706, 0, 0, 699, 707, 0, 702, 0, 0, 0,
	701, 0, -2, 709, 0, 0, 703, -2, 0, 711,
	710,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 505,
	104, 103, 105, 3, 506, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 507, 115, 508, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:562
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:568
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:598
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:602
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:608
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:620
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:631
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:635
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:641
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:645
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:651
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:658
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:667
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:671
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:675
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:688
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:694
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:703
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:714
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:718
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:724
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:728
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:734
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:738
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:744
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:768
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:787
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:791
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:795
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:804
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:812
		{
			yyVAL.str = ""
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:816
		{
			yyVAL.str = yyDollar[3].str
		}
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:821
		{
			yyVAL.str = "\n"
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:825
		{
			yyVAL.str = yyDollar[3].str
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:834
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:858
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:862
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:868
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:874
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:892
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:909
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:936
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:940
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:945
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:949
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:968
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:979
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:992
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:996
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1019
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1032
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1044
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1051
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1059
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1068
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1072
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1076
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1080
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1084
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1088
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1095
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1099
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1105
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1112
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1121
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1125
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1131
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1135
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1139
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1143
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1147
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1151
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1155
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1159
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1163
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1167
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1171
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1175
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1179
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1183
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1199
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1203
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1207
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1215
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1219
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1223
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1227
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1231
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1235
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1239
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1243
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1247
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1251
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1323
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1327
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1339
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1346
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1353
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1362
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1392
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1396
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1400
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1406
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1416
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1423
		{
			yyVAL.str = yyDollar[3].str
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1429
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1433
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1439
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1447
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1456
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1464
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1472
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1495
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1554
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1563
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1567
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1571
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1577
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1581
		{
			yyVAL.str = yyDollar[1].str
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1588
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1594
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1598
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1615
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1620
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1624
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1628
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1632
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1636
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1658
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1666
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1670
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1675
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1680
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1686
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1699
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1706
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1713
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1723
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1730
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1741
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1756
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1762
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1774
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1815
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1835
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1851
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1861
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1899
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1903
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1909
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1915
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1920
		{
			yyVAL.str = "true"
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1921
		{
			yyVAL.str = "false"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1922
		{
			yyVAL.str = yyDollar[1].str
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1970
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1974
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1983
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2035
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2039
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2055
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2065
		{
			yyVAL.item = nil
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2070
		{
			yyVAL.item = nil
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2094
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2098
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2107
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2113
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2118
		{
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2122
		{
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2136
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2140
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2148
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2164
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2182
		{
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2184
		{
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2212
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2220
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2244
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2254
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2266
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2276
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2305
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2310
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2314
		{
			yyVAL.str = yyDollar[2].str
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2320
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2348
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2358
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2362
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2371
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2375
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2379
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2398
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2407
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2416
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2420
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2532
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2536
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2542
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2547
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2554
		{
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2556
		{
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2559
		{
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2568
		{
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2572
		{
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2577
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2586
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2599
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2607
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2614
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2621
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2644
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2648
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2663
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2667
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2673
		{
			yyVAL.str = yyDollar[1].str
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2677
		{
			yyVAL.str = yyDollar[3].str
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2683
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2687
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2693
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2698
		{
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2709
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2713
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2720
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2729
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2735
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2739
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2745
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2749
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2758
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2771
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2778
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2785
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2803
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2828
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2835
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2839
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2852
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2856
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2861
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2865
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2872
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2877
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2902
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2932
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2936
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2954
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2963
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2986
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2992
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2998
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3002
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3013
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3017
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3021
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3026
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3030
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3034
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3044
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3050
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3161
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3169
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3177
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3224
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3254
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3269
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3273
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3279
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3283
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3287
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3291
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3296
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3304
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3318
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3322
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3354
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3363
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3373
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3377
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3387
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3391
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3395
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3399
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3415
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3419
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3425
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3435
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3441
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3447
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3451
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3455
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3465
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3475
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3481
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3485
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3491
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3495
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3505
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3527
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3540
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3556
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3572
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3588
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3601
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3617
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3633
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3652
		{
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3653
		{
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3657
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3669
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3673
		{
			yyVAL.str = yyDollar[1].str
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3677
		{
			yyVAL.str = yyDollar[2].str
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3686
		{
			yyVAL.str = ""
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3690
		{
			yyVAL.str = yyDollar[1].str
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3694
		{
			yyVAL.str = yyDollar[2].str
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3698
		{
			yyVAL.str = yyDollar[1].str
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3702
		{
			yyVAL.str = yyDollar[2].str
		}
	case 603:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3736
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3757
		{
		}
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3774
		{
			yyVAL.str = yyDollar[1].str
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3780
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3790
		{
			yyVAL.str = yyDollar[1].str
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3796
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3803
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3809
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3817
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3823
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3830
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3838
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3844
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3865
		{
			yyVAL.str = yyDollar[1].str
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3870
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3876
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3884
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3990
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3994
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4000
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4010
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4014
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4020
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4047
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4053
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4060
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4066
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4079
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4088
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4092
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4098
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4115
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4119
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4123
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4127
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4133
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4156
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4182
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4186
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4190
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4194
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4200
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4204
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4210
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4215
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4220
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4224
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4228
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4232
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4236
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4242
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4256
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4260
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4269
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4275
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4279
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4285
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4302
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4308
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4330
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4337
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4344
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4355
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4368
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4379
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4383
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4392
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4406
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4419
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4425
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4429
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4435
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4444
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4458
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4464
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4468
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4474
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4481
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4490
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4494
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4503
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4512
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4517
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4521
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4531
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4535
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4546
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4554
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4562
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4570
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4581
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4591
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4601
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4605
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4623
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4629
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4633
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4637
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4643
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4647
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4651
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4655
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4659
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4663
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4667
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4671
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4675
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4679
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4683
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4687
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4691
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4695
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4699
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4703
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4707
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4711
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4715
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4719
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4727
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4735
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4739
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4743
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4747
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4751
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4755
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4762
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4766
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4772
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4777
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4781
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4785
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4791
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4795
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4799
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4803
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4825
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4829
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4838
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4843
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4856
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4860
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4866
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4870
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4876
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4886
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4901
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4910
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4933
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4942
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4952
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4960
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4966
		{
			yyVAL.str = ""
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4970
		{
			yyVAL.str = yyDollar[1].str
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4980
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4986
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4992
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5006
		{
			yyVAL.str = ""
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5013
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5038
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5042
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5046
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5055
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5061
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5065
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5071
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5075
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5079
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5083
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5087
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5091
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5095
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5099
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5103
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5107
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5111
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5115
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5119
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5123
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5138
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5142
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5147
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5151
		{
			yyVAL.str = yyDollar[1].str
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5157
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5161
		{
			yyVAL.str = yyDollar[2].str
		}
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5179
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5186
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5193
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5200
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5207
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5216
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5222
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5232
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5236
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5240
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5244
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5256
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5260
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5264
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5273
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5278
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5282
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5298
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5304
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5312
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5320
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5324
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5328
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5332
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5336
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5344
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5348
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5352
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5358
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5362
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5366
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5382
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5390
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5394
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5398
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5402
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5407
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5423
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5432
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5436
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5440
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5444
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5448
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5453
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5457
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5462
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5466
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5472
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5476
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5482
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5492
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5509
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5526
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5539
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5552
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5578
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5608
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5640
		{
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5646
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5655
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5663
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5671
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5680
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5689
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5707
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5716
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5725
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5734
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5743
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5752
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5761
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5770
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5794
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5802
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5810
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5818
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5835
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5844
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5853
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5861
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5869
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5878
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5888
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5909
		{
			yyVAL.str = yyDollar[1].str
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5945
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5957
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5979
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5993
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6005
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6013
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6024
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6033
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6042
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6050
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6060
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6068
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6076
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6090
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6100
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6119
		{
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6121
		{
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6162
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6172
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6180
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6186
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6195
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6201
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6205
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6212
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6216
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6220
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6228
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6232
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6236
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6240
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6246
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6250
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6274
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6278
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6282
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6290
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6294
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6298
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6302
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6306
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6310
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6314
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6318
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6328
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6334
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6338
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6345
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6349
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6353
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6359
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6363
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6367
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6371
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6375
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6379
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6383
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6389
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6393
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6397
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6401
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6407
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6411
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6424
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6429
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6433
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6437
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6441
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6455
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6459
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6473
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6479
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6490
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6495
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6501
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6513
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6537
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6550
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6576
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6602
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6628
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6641
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6654
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6682
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6705
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6742
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6790
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6807
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6834
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6854
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6890
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6903
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6916
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6929
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6942
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6954
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6966
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6978
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6990
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7002
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7014
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7026
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7050
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7063
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7076
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7091
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7099
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7108
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7118
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7141
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7146
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7152
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7159
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7163
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7168
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7172
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7178
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7184
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7191
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7198
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7214
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7221
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7230
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7238
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7244
		{
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7246
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7256
		{
			yyVAL.str = ""
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7260
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
